{"version":3,"file":"mergeProps.js","sourceRoot":"../../../../src","sources":["components/utils/mergeProps.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,UAAU,CAAC,GAAG,SAAgD;IAC1E,MAAM,QAAQ,GAAG,IAAI,GAAG,EAA+C,CAAC;IAExE,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,GAA4B,EAAE,KAAK,EAAE,EAAE;QAC5D,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC3C,IACI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;gBACpB,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,EAAE;gBAC/B,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,EAAE,EACjC,CAAC;gBACC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;oBACrB,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAC1B,CAAC;gBAED,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE,CAAC;oBAC9B,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE/B,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAe,EAAE,EAAE;wBAC9B,OAAO,QAAQ;6BACV,GAAG,CAAC,GAAG,CAAC;4BACT,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;6BACzB,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;oBACtC,CAAC,CAAC;gBACN,CAAC;YACL,CAAC;iBAAM,CAAC;gBACJ,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YACrB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACf,CAAC,EAAE,EAAE,CAAC,CAAC;AACX,CAAC","sourcesContent":["import type * as React from 'react';\n\nexport function mergeProps(...propsList: (React.HTMLProps<HTMLElement> & {})[]) {\n    const eventMap = new Map<string, Array<(...args: unknown[]) => void>>();\n\n    return propsList.reduce((acc: Record<string, unknown>, props) => {\n        Object.entries(props).forEach(([key, value]) => {\n            if (\n                key.startsWith('on') &&\n                key.charCodeAt(2) >= /* A */ 65 &&\n                key.charCodeAt(2) <= /* Z */ 90\n            ) {\n                if (!eventMap.has(key)) {\n                    eventMap.set(key, []);\n                }\n\n                if (typeof value === 'function') {\n                    eventMap.get(key)?.push(value);\n\n                    acc[key] = (...args: unknown[]) => {\n                        return eventMap\n                            .get(key)\n                            ?.map((fn) => fn(...args))\n                            .find((v) => v !== undefined);\n                    };\n                }\n            } else {\n                acc[key] = value;\n            }\n        });\n        return acc;\n    }, {});\n}\n"]}