{"version":3,"file":"LayerManager.js","sourceRoot":"../../../../../src","sources":["components/utils/layer-manager/LayerManager.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;AAIb,qDAA2C;AAC3C,2DAA4C;AA6C5C,MAAM,YAAY;IACN,KAAK,GAAkB,EAAE,CAAC;IAC1B,oBAAoB,CAA6C;IAEzE,GAAG,CAAC,MAAmB;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAExB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,MAAM,CAAC,MAAmB;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAE5B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAEO,YAAY;QAChB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACjE,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACnE,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;IAC/E,CAAC;IAEO,eAAe;QACnB,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpE,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACtE,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;IAClF,CAAC;IAEO,kBAAkB;QACtB,0BAAW,CAAC,OAAO,CAAC;YAChB,WAAW,EAAE,cAAc;YAC3B,OAAO,EAAE,cAAc;YACvB,IAAI,EAAE;gBACF;;mBAEG;gBACH,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE;gBAClC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;aAC3B;SACJ,CAAC,CAAC;IACP,CAAC;IAEO,qBAAqB,GAAG,CAAC,KAAoB,EAAE,EAAE;QACrD,IAAI,KAAK,CAAC,IAAI,KAAK,mBAAO,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAEpC,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;gBACjC,QAAQ,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,CAAC;gBAClC,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YAC/C,CAAC;QACL,CAAC;QAED,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACpC,QAAQ,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC;IACL,CAAC,CAAC;IAEM,mBAAmB,GAAG,CAAC,KAAiB,EAAE,EAAE;QAChD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO;QACX,CAAC;QAED,IAAI,KAAkB,CAAC;QACvB,IAAI,eAAe,GAAuB,IAAI,CAAC;QAC/C,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;YACxC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;YACnD,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC9B,OAAO;YACX,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC/B,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,mBAAmB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,CAAC;YACnF,KAAK,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC;YAC9B,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QAC3C,CAAC;IACL,CAAC,CAAC;IAEM,uBAAuB,GAAG,CAAC,KAAiB,EAAE,EAAE;QACpD,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,oBAAoB,GAAG,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,MAAqB,EAAC,CAAC;QAC7E,CAAC;IACL,CAAC,CAAC;IAEM,WAAW;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEO,cAAc,CAClB,KAAkB,EAClB,KAAiB,EACjB,kBAAsC,IAAI;QAE1C,MAAM,eAAe,GAAG,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC;QAChD,MAAM,EAAC,MAAM,EAAC,GAAG,KAAK,CAAC;QACvB,MAAM,YAAY,GAAG,OAAO,KAAK,CAAC,YAAY,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1F,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC7B,MAAM,wBAAwB,GAAG,eAAe,CAAC,IAAI,CACjD,CAAC,EAAE,EAAE,EAAE,CACH,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,MAAiB,CAAC;gBAC1C,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,eAAe,CAAC;gBACxC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAsB,CAAC,CACxD,CAAC;YAEF,OAAO,CAAC,wBAAwB,CAAC;QACrC,CAAC;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,YAAY,CAAC,KAAiB;QAClC,MAAM,YAAY,GAAG,OAAO,KAAK,CAAC,YAAY,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1F,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE;YAC5B,OAAO,OAAO,CAAE,EAAkB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAEY,QAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAExC,MAAM,cAAc,GAAG,GAAG,EAAE;IAC/B,OAAO,oBAAY,CAAC,cAAc,EAAE,CAAC;AACzC,CAAC,CAAC;AAFW,QAAA,cAAc,kBAEzB","sourcesContent":["'use client';\n\nimport type {VirtualElement} from '@floating-ui/react';\n\nimport {KeyCode} from '../../../constants';\nimport {eventBroker} from '../event-broker';\n\nexport type LayerCloseReason = 'outsideClick' | 'escapeKeyDown';\n\nexport interface LayerExtendableProps {\n    /**\n     * Do not handle click outside\n     */\n    disableOutsideClick?: boolean;\n    /**\n     * Do not handle Escape key press on keyboard\n     */\n    disableEscapeKeyDown?: boolean;\n    /**\n     * This callback will be called when Escape key pressed on keyboard\n     * This behaviour could be disabled with `disableEscapeKeyDown` option\n     */\n    onEscapeKeyDown?: (event: KeyboardEvent) => void;\n    /**\n     * This callback will be called when Enter key is pressed on keyboard\n     */\n    onEnterKeyDown?: (event: KeyboardEvent) => void;\n    /**\n     * This callback will be called when click is outside of elements of \"top layer\"\n     * This behaviour could be disabled with `disableOutsideClick` option\n     */\n    onOutsideClick?: (event: MouseEvent) => void;\n    /**\n     * This callback will be called when Escape key pressed on keyboard, or click outside was made\n     * This behaviour could be disabled with `disableEscapeKeyDown`\n     * and `disableOutsideClick` options\n     */\n    onClose?: (event: MouseEvent | KeyboardEvent, reason: LayerCloseReason) => void;\n    /**\n     * Type of layer, returns from `getLayers`\n     */\n    type?: string;\n}\n\ntype ContentElement = Element | (VirtualElement & {contains?: (other: Node | null) => boolean});\n\nexport interface LayerConfig extends LayerExtendableProps {\n    contentRefs?: Array<React.RefObject<ContentElement> | undefined>;\n}\n\nclass LayerManager {\n    private stack: LayerConfig[] = [];\n    private mouseDownLayerTarget?: {layer: LayerConfig; target: HTMLElement};\n\n    add(config: LayerConfig) {\n        this.stack.push(config);\n\n        if (this.stack.length === 1) {\n            this.addListeners();\n        }\n\n        this.notifyLayersChange();\n    }\n\n    remove(config: LayerConfig) {\n        const index = this.stack.indexOf(config);\n        this.stack.splice(index, 1);\n\n        if (this.stack.length === 0) {\n            this.removeListeners();\n        }\n\n        this.notifyLayersChange();\n    }\n\n    getLayersCount() {\n        return this.stack.length;\n    }\n\n    getLayers() {\n        return this.stack.map(({type}) => ({type}));\n    }\n\n    private addListeners() {\n        document.addEventListener('keydown', this.handleDocumentKeyDown);\n        document.addEventListener('click', this.handleDocumentClick, true);\n        document.addEventListener('mousedown', this.handleDocumentMouseDown, true);\n    }\n\n    private removeListeners() {\n        document.removeEventListener('keydown', this.handleDocumentKeyDown);\n        document.removeEventListener('click', this.handleDocumentClick, true);\n        document.removeEventListener('mousedown', this.handleDocumentMouseDown, true);\n    }\n\n    private notifyLayersChange() {\n        eventBroker.publish({\n            componentId: 'LayerManager',\n            eventId: 'layerschange',\n            meta: {\n                /**\n                 * @deprecated use layers\n                 */\n                layersCount: this.getLayersCount(),\n                layers: this.getLayers(),\n            },\n        });\n    }\n\n    private handleDocumentKeyDown = (event: KeyboardEvent) => {\n        if (event.code === KeyCode.ESCAPE) {\n            const topLayer = this.getTopLayer();\n\n            if (!topLayer.disableEscapeKeyDown) {\n                topLayer.onEscapeKeyDown?.(event);\n                topLayer.onClose?.(event, 'escapeKeyDown');\n            }\n        }\n\n        if (event.code === 'Enter') {\n            const topLayer = this.getTopLayer();\n            topLayer.onEnterKeyDown?.(event);\n        }\n    };\n\n    private handleDocumentClick = (event: MouseEvent) => {\n        if (this.isToastClick(event)) {\n            return;\n        }\n\n        let layer: LayerConfig;\n        let mouseDownTarget: HTMLElement | null = null;\n        if (this.mouseDownLayerTarget) {\n            layer = this.mouseDownLayerTarget.layer;\n            mouseDownTarget = this.mouseDownLayerTarget.target;\n            this.mouseDownLayerTarget = undefined;\n            if (!this.stack.includes(layer)) {\n                return;\n            }\n        } else {\n            layer = this.getTopLayer();\n        }\n\n        if (!layer.disableOutsideClick && this.isOutsideClick(layer, event, mouseDownTarget)) {\n            layer.onOutsideClick?.(event);\n            layer.onClose?.(event, 'outsideClick');\n        }\n    };\n\n    private handleDocumentMouseDown = (event: MouseEvent) => {\n        const layer = this.getTopLayer();\n        if (layer) {\n            this.mouseDownLayerTarget = {layer, target: event.target as HTMLElement};\n        }\n    };\n\n    private getTopLayer() {\n        return this.stack[this.stack.length - 1];\n    }\n\n    private isOutsideClick(\n        layer: LayerConfig,\n        event: MouseEvent,\n        mouseDownTarget: HTMLElement | null = null,\n    ) {\n        const contentElements = layer.contentRefs || [];\n        const {target} = event;\n        const composedPath = typeof event.composedPath === 'function' ? event.composedPath() : [];\n\n        if (contentElements.length > 0) {\n            const isClickOnContentElements = contentElements.some(\n                (el) =>\n                    el?.current?.contains?.(target as Element) ||\n                    el?.current?.contains?.(mouseDownTarget) ||\n                    composedPath.includes(el?.current as EventTarget),\n            );\n\n            return !isClickOnContentElements;\n        }\n\n        return false;\n    }\n\n    private isToastClick(event: MouseEvent) {\n        const composedPath = typeof event.composedPath === 'function' ? event.composedPath() : [];\n\n        return composedPath.some((el) => {\n            return Boolean((el as HTMLElement)?.dataset?.toast);\n        });\n    }\n}\n\nexport const layerManager = new LayerManager();\n\nexport const getLayersCount = () => {\n    return layerManager.getLayersCount();\n};\n"]}