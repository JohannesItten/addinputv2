{"version":3,"file":"Popover.js","sourceRoot":"../../../../../src","sources":["components/legacy/Popover/Popover.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Xmark} from '@gravity-ui/icons';\n\nimport {useUniqId} from '../../../hooks/useUniqId';\nimport {Button} from '../../Button';\nimport {Icon} from '../../Icon';\nimport type {PopupPlacement} from '../../Popup';\nimport {Popup} from '../../Popup';\nimport {useDirection} from '../../theme';\nimport type {QAProps} from '../../types';\nimport {warnOnce} from '../../utils/warn';\n\nimport {cnPopover} from './Popover.classname';\nimport {Buttons} from './components/Buttons/Buttons';\nimport {Content} from './components/Content/Content';\nimport {Links} from './components/Links/Links';\nimport {Trigger} from './components/Trigger/Trigger';\nimport {PopoverBehavior} from './config';\nimport {useOpen} from './hooks/useOpen';\nimport type {PopoverInstanceProps, PopoverProps} from './types';\n\nimport './Popover.scss';\n\n/**\n * @deprecated\n */\nexport const Popover = React.forwardRef<PopoverInstanceProps, PopoverProps & QAProps>(function (\n    {\n        initialOpen = false,\n        disabled = false,\n        autoclosable = true,\n        openOnHover = true,\n        delayOpening,\n        delayClosing,\n        behavior = PopoverBehavior.Delayed,\n        placement,\n        offset = {},\n        tooltipOffset,\n        tooltipClassName,\n        theme = 'info',\n        size = 's',\n        hasArrow = true,\n        hasClose = false,\n        className,\n        children,\n        title,\n        content,\n        htmlContent,\n        contentClassName,\n        links,\n        forceLinksAppearance = false,\n        tooltipActionButton,\n        tooltipCancelButton,\n        onOpenChange,\n        onCloseClick,\n        onClick,\n        anchorRef,\n        anchorElement,\n        strategy,\n        qa,\n        disablePortal = false,\n        tooltipId,\n        focusTrap,\n        autoFocus,\n        restoreFocusRef,\n    },\n    ref,\n) {\n    const direction = useDirection();\n    const controlRef = React.useRef<HTMLDivElement>(null);\n    const closedManually = React.useRef(false);\n    const shouldBeOpen = React.useRef(initialOpen);\n\n    const {\n        isOpen,\n        closingTimeout,\n        openTooltip,\n        openTooltipDelayed,\n        unsetOpeningTimeout,\n        closeTooltip,\n        closeTooltipDelayed,\n        unsetClosingTimeout,\n    } = useOpen({\n        initialOpen,\n        disabled,\n        autoclosable,\n        onOpenChange,\n        delayOpening,\n        delayClosing,\n        behavior,\n        shouldBeOpen,\n    });\n\n    const popupPlacement = React.useMemo<PopupPlacement>(() => {\n        if (placement) {\n            return placement;\n        }\n\n        return direction === 'rtl' ? ['left', 'bottom'] : ['right', 'bottom'];\n    }, [direction, placement]);\n\n    React.useImperativeHandle(\n        ref,\n        () => ({\n            openTooltip,\n            closeTooltip,\n        }),\n        [openTooltip, closeTooltip],\n    );\n\n    const handleCloseClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\n        closeTooltip();\n        onCloseClick?.(event);\n    };\n\n    const hasTitle = Boolean(title);\n\n    const hasAnchor = Boolean(anchorRef || anchorElement);\n\n    const popoverTitleId = `popover-${tooltipId ?? ''}-title-${useUniqId()}`;\n\n    const tooltip = (\n        <Popup\n            id={tooltipId}\n            role={openOnHover ? 'tooltip' : 'dialog'}\n            strategy={strategy}\n            anchorElement={anchorElement}\n            anchorRef={anchorRef || controlRef}\n            className={cnPopover(\n                'tooltip',\n                {\n                    theme,\n                    size,\n                    ['with-close']: hasClose,\n                    'force-links-appearance': forceLinksAppearance,\n                },\n                tooltipClassName,\n            )}\n            open={isOpen}\n            placement={popupPlacement}\n            hasArrow={hasArrow}\n            offset={tooltipOffset}\n            onClose={hasAnchor ? undefined : closeTooltip}\n            qa={qa ? `${qa}-tooltip` : ''}\n            disablePortal={disablePortal}\n            initialFocus={autoFocus ? 0 : undefined}\n            modal={focusTrap}\n            returnFocus={restoreFocusRef}\n            aria-labelledby={title ? popoverTitleId : undefined}\n        >\n            <React.Fragment>\n                {title && (\n                    <h3 id={popoverTitleId} className={cnPopover('tooltip-title')}>\n                        {title}\n                    </h3>\n                )}\n                <Content\n                    secondary={hasTitle ? theme !== 'announcement' : false}\n                    content={content}\n                    htmlContent={htmlContent}\n                    className={contentClassName}\n                />\n                {links && <Links links={links} />}\n                <Buttons\n                    theme={theme}\n                    tooltipActionButton={tooltipActionButton}\n                    tooltipCancelButton={tooltipCancelButton}\n                />\n                {hasClose && (\n                    <div className={cnPopover('tooltip-close')}>\n                        <Button\n                            size=\"s\"\n                            view=\"flat-secondary\"\n                            onClick={handleCloseClick}\n                            aria-label=\"Close\"\n                        >\n                            <Icon data={Xmark} size={16} />\n                        </Button>\n                    </div>\n                )}\n            </React.Fragment>\n        </Popup>\n    );\n\n    if (hasAnchor) {\n        return tooltip;\n    }\n\n    const onMouseEnter = () => {\n        unsetClosingTimeout();\n\n        if (!isOpen && !disabled && !closedManually.current) {\n            openTooltipDelayed();\n        } else {\n            shouldBeOpen.current = true;\n        }\n    };\n\n    const onMouseLeave = () => {\n        if (autoclosable && !closedManually.current && !closingTimeout.current) {\n            unsetOpeningTimeout();\n            closeTooltipDelayed();\n        } else {\n            shouldBeOpen.current = false;\n        }\n\n        closedManually.current = false;\n    };\n\n    if (offset && (typeof offset.top === 'number' || typeof offset.left === 'number')) {\n        warnOnce(\n            '[Popover] Physical names (top, left) of \"offset\" property are deprecated. Use logical names (block, inline) instead.',\n        );\n    }\n\n    return (\n        <div\n            ref={controlRef}\n            className={cnPopover({disabled}, className)}\n            onMouseEnter={openOnHover ? onMouseEnter : undefined}\n            onMouseLeave={openOnHover ? onMouseLeave : undefined}\n            onFocus={openOnHover ? onMouseEnter : undefined}\n            onBlur={openOnHover ? onMouseLeave : undefined}\n            style={{\n                top: offset.top,\n                left: offset.left,\n                insetBlockStart: offset.block,\n                insetInlineStart: offset.inline,\n            }}\n            data-qa={qa}\n        >\n            <Trigger\n                closeTooltip={closeTooltip}\n                openTooltip={openTooltip}\n                open={isOpen}\n                openOnHover={openOnHover}\n                className={cnPopover('handler')}\n                disabled={disabled}\n                onClick={onClick}\n                closedManually={closedManually}\n            >\n                {children}\n            </Trigger>\n            {tooltip}\n        </div>\n    );\n});\n\nPopover.displayName = 'Popover';\n"]}