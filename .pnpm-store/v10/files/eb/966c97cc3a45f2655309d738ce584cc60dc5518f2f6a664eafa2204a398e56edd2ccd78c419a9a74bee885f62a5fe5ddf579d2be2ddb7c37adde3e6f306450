{"version":3,"file":"Dialog.js","sourceRoot":"../../../../src","sources":["components/Dialog/Dialog.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Modal} from '../Modal';\nimport type {ModalCloseReason, ModalProps} from '../Modal';\nimport type {AriaLabelingProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\n\nimport {ButtonClose} from './ButtonClose/ButtonClose';\nimport {DialogBody} from './DialogBody/DialogBody';\nimport {DialogDivider} from './DialogDivider/DialogDivider';\nimport {DialogFooter} from './DialogFooter/DialogFooter';\nimport {DialogHeader} from './DialogHeader/DialogHeader';\nimport {DialogPrivateContext} from './DialogPrivateContext';\nimport type {DialogPrivateContextProps} from './DialogPrivateContext';\n\nimport './Dialog.scss';\n\nconst b = block('dialog');\n\nexport interface DialogProps extends AriaLabelingProps, QAProps {\n    open: boolean;\n    children: React.ReactNode;\n    onOpenChange?: ModalProps['onOpenChange'];\n    onEnterKeyDown?: (event: KeyboardEvent) => void;\n    onEscapeKeyDown?: ModalProps['onEscapeKeyDown'];\n    onOutsideClick?: ModalProps['onOutsideClick'];\n    onClose: (\n        event: MouseEvent | KeyboardEvent,\n        reason: ModalCloseReason | 'closeButtonClick',\n    ) => void;\n    onTransitionIn?: ModalProps['onTransitionIn'];\n    onTransitionInComplete?: ModalProps['onTransitionInComplete'];\n    onTransitionOut?: ModalProps['onTransitionOut'];\n    onTransitionOutComplete?: ModalProps['onTransitionOutComplete'];\n    className?: string;\n    modalClassName?: string;\n    size?: 's' | 'm' | 'l';\n    container?: HTMLElement;\n    // TODO: Remove from readme disableFocusTrap disableAutoFocus\n    initialFocus?: ModalProps['initialFocus'] | 'cancel' | 'apply';\n    returnFocus?: ModalProps['returnFocus'];\n    contentOverflow?: 'visible' | 'auto';\n    disableBodyScrollLock?: boolean;\n    disableEscapeKeyDown?: boolean;\n    disableOutsideClick?: boolean;\n    keepMounted?: boolean;\n    hasCloseButton?: boolean;\n    disableHeightTransition?: boolean;\n}\n\nexport function Dialog({\n    container,\n    children,\n    open,\n    disableBodyScrollLock = false,\n    disableEscapeKeyDown = false,\n    disableOutsideClick = false,\n    initialFocus,\n    returnFocus,\n    keepMounted = false,\n    size,\n    contentOverflow = 'visible',\n    className,\n    modalClassName,\n    hasCloseButton = true,\n    disableHeightTransition = false,\n    onEscapeKeyDown,\n    onEnterKeyDown,\n    onOpenChange,\n    onOutsideClick,\n    onClose,\n    onTransitionIn,\n    onTransitionInComplete,\n    onTransitionOut,\n    onTransitionOutComplete,\n    qa,\n    ...restProps\n}: DialogProps) {\n    const handleCloseButtonClick = React.useCallback(\n        (event: React.MouseEvent) => {\n            onClose(event.nativeEvent, 'closeButtonClick');\n        },\n        [onClose],\n    );\n\n    const footerAutoFocusRef = React.useRef<HTMLElement | null>(null);\n\n    const privateContextProps = React.useMemo(() => {\n        const result: DialogPrivateContextProps = {\n            onTooltipEscapeKeyDown: (event: KeyboardEvent) => {\n                onOpenChange?.(false, event, 'escape-key');\n                onEscapeKeyDown?.(event);\n                onClose?.(event, 'escapeKeyDown');\n            },\n            disableHeightTransition: disableHeightTransition || !open,\n        };\n\n        if (typeof initialFocus === 'string') {\n            result.initialFocusRef = footerAutoFocusRef;\n            result.initialFocusAction = initialFocus;\n        }\n\n        return result;\n    }, [initialFocus, onEscapeKeyDown, onClose, onOpenChange, open, disableHeightTransition]);\n\n    let initialFocusValue: ModalProps['initialFocus'];\n    if (typeof initialFocus === 'string') {\n        initialFocusValue = footerAutoFocusRef;\n    } else {\n        initialFocusValue = initialFocus;\n    }\n\n    return (\n        <Modal\n            {...filterDOMProps(restProps, {labelable: true})}\n            open={open}\n            contentOverflow={contentOverflow}\n            disableBodyScrollLock={disableBodyScrollLock}\n            disableEscapeKeyDown={disableEscapeKeyDown}\n            disableOutsideClick={disableOutsideClick}\n            disableVisuallyHiddenDismiss={hasCloseButton}\n            initialFocus={initialFocusValue}\n            returnFocus={returnFocus}\n            keepMounted={keepMounted}\n            onEscapeKeyDown={onEscapeKeyDown}\n            onOutsideClick={onOutsideClick}\n            onClose={onClose}\n            onEnterKeyDown={onEnterKeyDown}\n            onTransitionIn={onTransitionIn}\n            onTransitionInComplete={onTransitionInComplete}\n            onTransitionOut={onTransitionOut}\n            onTransitionOutComplete={onTransitionOutComplete}\n            className={b('modal', modalClassName)}\n            container={container}\n            qa={qa}\n            disableHeightTransition\n        >\n            <div\n                className={b(\n                    {\n                        size,\n                        'has-close': hasCloseButton,\n                        'has-scroll': contentOverflow === 'auto',\n                    },\n                    className,\n                )}\n            >\n                <DialogPrivateContext.Provider value={privateContextProps}>\n                    {children}\n                </DialogPrivateContext.Provider>\n\n                {hasCloseButton && <ButtonClose onClose={handleCloseButtonClick} />}\n            </div>\n        </Modal>\n    );\n}\n\nDialog.Footer = DialogFooter;\nDialog.Header = DialogHeader;\nDialog.Body = DialogBody;\nDialog.Divider = DialogDivider;\n"]}