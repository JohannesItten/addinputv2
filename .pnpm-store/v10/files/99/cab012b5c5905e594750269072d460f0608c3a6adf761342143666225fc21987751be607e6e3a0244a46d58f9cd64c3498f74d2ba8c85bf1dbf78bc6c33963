import * as React from 'react';
import type { ButtonButtonProps, ButtonLinkProps } from "../../Button/index.js";
import "./DialogFooter.css";
type ButtonPreset = 'default' | 'success' | 'danger';
interface DialogFooterOwnProps {
    onClickButtonApply?: (event: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => void;
    onClickButtonCancel?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    textButtonCancel?: string;
    textButtonApply?: string;
    propsButtonCancel?: ButtonButtonProps | ButtonLinkProps;
    propsButtonApply?: ButtonButtonProps | ButtonLinkProps;
    loading?: boolean;
    children?: React.ReactNode;
    errorText?: string;
    renderButtons?: (buttonApply: React.ReactNode, buttonCancel: React.ReactNode) => React.ReactNode;
    className?: string;
}
interface DialogFooterDefaultProps {
    preset: ButtonPreset;
    showError: boolean;
}
export type DialogFooterProps = DialogFooterOwnProps & Partial<DialogFooterDefaultProps>;
export declare function DialogFooter(props: DialogFooterProps): import("react/jsx-runtime").JSX.Element;
export {};
