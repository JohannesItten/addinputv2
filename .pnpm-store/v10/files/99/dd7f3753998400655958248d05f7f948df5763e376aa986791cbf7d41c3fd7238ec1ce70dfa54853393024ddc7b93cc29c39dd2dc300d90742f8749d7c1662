{"version":3,"file":"parse.js","sourceRoot":"../../../../src","sources":["components/Hotkey/parse.ts"],"names":[],"mappings":";;AASA,wCASC;;AAlBD,8EAA2C;AAC3C,sEAAmC;AAGnC,sCAA8B;AAE9B,MAAM,gBAAgB,GAAG,IAAI,CAAC;AAC9B,MAAM,cAAc,GAAG,GAAG,CAAC;AAE3B,SAAgB,cAAc,CAAC,IAAkB,EAAE,KAAa;IAC5D,OAAO,IAAA,aAAK,EAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAC/C,IAAA,gBAAM,EACF,IAAA,aAAK,EAAC,IAAI,EAAE,cAAc,CAAC;SACtB,GAAG,CAAU,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,cAAc;IAC5D,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAClB,CAAC,GAAG,CAAC,SAAS,CAAC,CACnB,CAAC;AACN,CAAC;AAED,SAAS,SAAS,CAAC,IAAkB;IACjC,OAAO,UAAU,GAAG;QAChB,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAClC,OAAO;YACH,GAAG;YACH,EAAE,EAAE,KAAK;YACT,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;YACnC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;SACvC,CAAC;IACN,CAAC,CAAC;AACN,CAAC;AAED,SAAS,QAAQ,CAAC,IAAkB,EAAE,GAAW;IAC7C,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;IACxB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;AACzC,CAAC;AAED,SAAS,SAAS,CAAC,GAAY;IAC3B,OAAO,GAAG,CAAC,WAAW,IAAI,IAAA,oBAAU,EAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACjD,CAAC","sourcesContent":["import capitalize from 'lodash/capitalize';\nimport uniqBy from 'lodash/uniqBy';\n\nimport type {KeyDefs, KeyParser, PlatformDefs} from './types';\nimport {split} from './utils';\n\nconst GROUPS_SEPARATOR = /\\s/;\nconst KEYS_SEPARATOR = '+';\n\nexport function parseKeyGroups(defs: PlatformDefs, value: string): string[][] {\n    return split(value, GROUPS_SEPARATOR).map((keys) =>\n        uniqBy(\n            split(keys, KEYS_SEPARATOR)\n                .map<KeyDefs>(keyParser(defs))\n                .sort((a, b) => b.priority - a.priority), // high to low\n            (key) => key.id,\n        ).map(renderKey),\n    );\n}\n\nfunction keyParser(defs: PlatformDefs): KeyParser {\n    return function (raw) {\n        const keyId = getKeyId(defs, raw);\n        return {\n            raw,\n            id: keyId,\n            priority: defs.Priority[keyId] ?? 0,\n            displayName: defs.DisplayName[keyId],\n        };\n    };\n}\n\nfunction getKeyId(defs: PlatformDefs, val: string): string {\n    val = val.toLowerCase();\n    return defs.NormalizeMap[val] ?? val;\n}\n\nfunction renderKey(key: KeyDefs): string {\n    return key.displayName ?? capitalize(key.id);\n}\n"]}