{"version":3,"file":"TocSections.js","sourceRoot":"../../../../../src","sources":["components/Toc/TocSections/TocSections.tsx"],"names":[],"mappings":";;AAiBA,kCAwCC;;AAzDD,0CAAqC;AACrC,iDAAmC;AAGnC,6BAA4B;AAE5B,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,KAAK,CAAC,CAAC;AAWvB,SAAgB,WAAW,CAAC,KAAuB;IAC/C,MAAM,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,GAAG,CAAC,EAAE,WAAW,EAAC,GAAG,KAAK,CAAC;IAEvF,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAO,CACH,+BAAI,SAAS,EAAE,CAAC,CAAC,UAAU,CAAC,YACvB,KAAK,CAAC,GAAG,CAAC,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAC,EAAE,EAAE,CAAC,CACzD,gDAAsC,WAAW,KAAK,KAAK,aACvD,uBAAC,iBAAO,IACJ,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,WAAW,KAAK,KAAK,EAC7B,OAAO,EAAE,CAAC,KAAuB,EAAE,EAAE;wBACjC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;wBAErB,IAAI,KAAK,KAAK,SAAS,IAAI,CAAC,QAAQ,EAAE,CAAC;4BACnC,OAAO;wBACX,CAAC;wBAED,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,EACD,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,KAAK,GACd,EACD,aAAa,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CAC1C,uBAAC,WAAW,IACR,KAAK,EAAE,aAAa,EACpB,QAAQ,EAAE,QAAQ,EAClB,SAAS,QACT,KAAK,EAAE,KAAK,GAAG,CAAC,EAChB,KAAK,EAAE,WAAW,GACpB,CACL,KAzBI,KAAK,IAAI,IAAI,CA0BjB,CACR,CAAC,GACD,CACR,CAAC;AACN,CAAC","sourcesContent":["import {block} from '../../utils/cn';\nimport {TocItem} from '../TocItem';\nimport type {TocItem as TocItemType} from '../types';\n\nimport './TocSections.scss';\n\nconst b = block('toc');\n\nexport interface TocSectionsProps {\n    items: TocItemType[];\n    value?: string;\n    onUpdate?: (value: string) => void;\n    depth?: number;\n    childItem?: boolean;\n    onItemClick?: (event: React.MouseEvent) => void;\n}\n\nexport function TocSections(props: TocSectionsProps) {\n    const {value: activeValue, items, onUpdate, childItem, depth = 1, onItemClick} = props;\n\n    if (depth > 6) {\n        return null;\n    }\n\n    return (\n        <ul className={b('sections')}>\n            {items.map(({value, content, href, items: childrenItems}) => (\n                <li key={value ?? href} aria-current={activeValue === value}>\n                    <TocItem\n                        content={content}\n                        href={href}\n                        active={activeValue === value}\n                        onClick={(event: React.MouseEvent) => {\n                            onItemClick?.(event);\n\n                            if (value === undefined || !onUpdate) {\n                                return;\n                            }\n\n                            onUpdate?.(value);\n                        }}\n                        childItem={childItem}\n                        depth={depth}\n                    />\n                    {childrenItems && childrenItems.length > 0 && (\n                        <TocSections\n                            items={childrenItems}\n                            onUpdate={onUpdate}\n                            childItem\n                            depth={depth + 1}\n                            value={activeValue}\n                        />\n                    )}\n                </li>\n            ))}\n        </ul>\n    );\n}\n"]}