{"version":3,"file":"DefinitionListContext.js","sourceRoot":"../../../../../src","sources":["components/DefinitionList/components/DefinitionListContext.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;AAkBb,wDAwBC;AAED,kEAQC;;;AAnDD,qDAA+B;AASlB,QAAA,+BAA+B,GAAG,KAAK,CAAC,aAAa,CAMhE,SAAS,CAAC,CAAC;AAEb,SAAgB,sBAAsB,CAAC,EACnC,SAAS,EACT,eAAe,EACf,YAAY,EACZ,QAAQ,GACkB;IAC1B,MAAM,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAEnF,MAAM,UAAU,GACZ,OAAO,eAAe,KAAK,QAAQ;QAC/B,CAAC,CAAC,EAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAC;QACrD,CAAC,CAAC,EAAE,CAAC;IAEb,OAAO,CACH,uBAAC,uCAA+B,CAAC,QAAQ,IACrC,KAAK,EAAE;YACH,QAAQ;YACR,UAAU;YACV,SAAS;SACZ,YAEA,QAAQ,GAC8B,CAC9C,CAAC;AACN,CAAC;AAED,SAAgB,2BAA2B;IACvC,MAAM,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,uCAA+B,CAAC,CAAC;IAEhE,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;IAC9F,CAAC;IAED,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["'use client';\nimport * as React from 'react';\n\nimport type {DefinitionListProps} from '../types';\n\ninterface DefinitionListProviderProps\n    extends Pick<DefinitionListProps, 'direction' | 'contentMaxWidth' | 'nameMaxWidth'> {\n    children?: React.ReactNode;\n}\n\nexport const DefinitionListAttributesContext = React.createContext<\n    | (Pick<DefinitionListProps, 'direction'> & {\n          keyStyle?: React.CSSProperties;\n          valueStyle?: React.CSSProperties;\n      })\n    | undefined\n>(undefined);\n\nexport function DefinitionListProvider({\n    direction,\n    contentMaxWidth,\n    nameMaxWidth,\n    children,\n}: DefinitionListProviderProps) {\n    const keyStyle = nameMaxWidth ? {maxWidth: nameMaxWidth, width: nameMaxWidth} : {};\n\n    const valueStyle =\n        typeof contentMaxWidth === 'number'\n            ? {width: contentMaxWidth, maxWidth: contentMaxWidth}\n            : {};\n\n    return (\n        <DefinitionListAttributesContext.Provider\n            value={{\n                keyStyle,\n                valueStyle,\n                direction,\n            }}\n        >\n            {children}\n        </DefinitionListAttributesContext.Provider>\n    );\n}\n\nexport function useDefinitionListAttributes() {\n    const state = React.useContext(DefinitionListAttributesContext);\n\n    if (state === undefined) {\n        throw new Error('useDefinitionListAttributes must be used within DefinitionListProvider');\n    }\n\n    return state;\n}\n"]}