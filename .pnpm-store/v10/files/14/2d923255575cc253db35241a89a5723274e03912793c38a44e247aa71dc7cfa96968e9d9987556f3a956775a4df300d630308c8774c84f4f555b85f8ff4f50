{"version":3,"file":"useCloseOnTimeout.js","sourceRoot":"../../../../../src","sources":["hooks/private/useCloseOnTimeout/useCloseOnTimeout.ts"],"names":[],"mappings":";;AAqBA,8CAMC;AA3BD,sCAAiC;AACjC,mDAAqC;AAYrC;;;;;;;GAOG;AACH,SAAgB,iBAAiB,CAAc,EAAC,OAAO,EAAE,OAAO,EAAyB;IACrF,MAAM,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC,GAAG,IAAA,mBAAQ,GAAK,CAAC;IAE9D,IAAA,cAAU,EAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAEjD,OAAO,EAAC,WAAW,EAAE,YAAY,EAAC,CAAC;AACvC,CAAC","sourcesContent":["import {useTimeout} from '../..';\nimport {useHover} from '../useHover';\n\nexport interface UseCloseOnTimeoutProps {\n    onClose: VoidFunction;\n    timeout?: number;\n}\n\nexport interface UseCloseOnTimeoutResult {\n    onMouseOver: React.MouseEventHandler;\n    onMouseLeave: React.MouseEventHandler;\n}\n\n/**\n * Invokes callback after given amount of time unless mouse is on the element\n *\n * @param onClose\n * @param timeout\n *\n * @return mouse event handlers\n */\nexport function useCloseOnTimeout<T = Element>({onClose, timeout}: UseCloseOnTimeoutProps) {\n    const [onMouseOver, onMouseLeave, isHovering] = useHover<T>();\n\n    useTimeout(onClose, isHovering ? null : timeout);\n\n    return {onMouseOver, onMouseLeave};\n}\n"]}