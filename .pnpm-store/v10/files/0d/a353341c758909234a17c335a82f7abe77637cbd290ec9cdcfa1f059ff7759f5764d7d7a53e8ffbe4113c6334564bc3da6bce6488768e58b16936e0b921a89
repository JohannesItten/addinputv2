{"version":3,"file":"Toast.js","sourceRoot":"../../../../../src","sources":["components/Toaster/Toast/Toast.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {CircleCheck, CircleInfo, Thunderbolt, TriangleExclamation, Xmark} from '@gravity-ui/icons';\n\nimport {useCloseOnTimeout} from '../../../hooks/private';\nimport {Button} from '../../Button';\nimport {Icon} from '../../Icon';\nimport type {IconProps} from '../../Icon';\nimport {block} from '../../utils/cn';\nimport i18n from '../i18n';\nimport type {InternalToastProps, ToastAction, ToastTheme} from '../types';\n\nimport './Toast.scss';\n\nconst b = block('toast');\nconst DEFAULT_TIMEOUT = 5000;\nconst TITLE_ICONS: Record<ToastTheme, IconProps['data'] | null> = {\n    normal: null,\n    info: CircleInfo,\n    success: CircleCheck,\n    warning: TriangleExclamation,\n    danger: TriangleExclamation,\n    utility: Thunderbolt,\n};\n\ninterface ToastInnerProps {\n    removeCallback: (name: string) => void;\n    mobile?: boolean;\n}\n\ninterface ToastUnitedProps extends InternalToastProps, ToastInnerProps {}\n\ninterface RenderActionsProps {\n    actions?: ToastAction[];\n    onClose: VoidFunction;\n}\n\nfunction renderActions({actions, onClose}: RenderActionsProps) {\n    if (!actions || !actions.length) {\n        return null;\n    }\n\n    return (\n        <div className={b('actions')}>\n            {actions.map(({label, onClick, view = 'outlined', removeAfterClick = true}, index) => {\n                const onActionClick = () => {\n                    onClick();\n                    if (removeAfterClick) {\n                        onClose();\n                    }\n                };\n\n                return (\n                    <Button\n                        key={`${label}__${index}`}\n                        className={b('action')}\n                        onClick={onActionClick}\n                        type=\"button\"\n                        size=\"l\"\n                        view={view}\n                        width=\"auto\"\n                    >\n                        {label}\n                    </Button>\n                );\n            })}\n        </div>\n    );\n}\n\ninterface RenderIconProps {\n    theme?: ToastTheme;\n}\n\nfunction renderIconByType({theme}: RenderIconProps) {\n    if (!theme || !TITLE_ICONS[theme]) {\n        return null;\n    }\n\n    return <Icon data={TITLE_ICONS[theme]!} size={20} className={b('icon', {[theme]: true})} />;\n}\n\nexport const Toast = React.forwardRef<HTMLDivElement, ToastUnitedProps>(function Toast(props, ref) {\n    const {\n        name,\n        content,\n        actions,\n        title,\n        className,\n        theme = 'normal',\n        renderIcon,\n        autoHiding: timeoutProp = DEFAULT_TIMEOUT,\n        isClosable = true,\n        mobile = false,\n        onClose,\n        removeCallback,\n    } = props;\n\n    const handleClose = React.useCallback(() => {\n        removeCallback(name);\n\n        if (onClose) {\n            onClose();\n        }\n    }, [removeCallback, onClose, name]);\n    const timeout = typeof timeoutProp === 'number' ? timeoutProp : undefined;\n    const closeOnTimeoutProps = useCloseOnTimeout<HTMLDivElement>({onClose: handleClose, timeout});\n\n    const mods = {\n        mobile,\n        theme,\n    };\n\n    const hasTitle = Boolean(title);\n    const hasContent = Boolean(content);\n\n    const icon = renderIcon ? renderIcon(props) : renderIconByType({theme});\n    return (\n        <div ref={ref} className={b(mods, className)} {...closeOnTimeoutProps} data-toast>\n            {icon && <div className={b('icon-container')}>{icon}</div>}\n            <div className={b('container')}>\n                {hasTitle && <h3 className={b('title')}>{title}</h3>}\n                {isClosable && (\n                    <Button\n                        size=\"s\"\n                        view=\"flat\"\n                        className={b('btn-close')}\n                        onClick={handleClose}\n                        aria-label={i18n('label_close-button')}\n                    >\n                        <Icon data={Xmark} />\n                    </Button>\n                )}\n                {hasContent && (\n                    <div className={b('content', {'without-title': !hasTitle})}>{content}</div>\n                )}\n                {renderActions({actions, onClose: handleClose})}\n            </div>\n        </div>\n    );\n});\n"]}