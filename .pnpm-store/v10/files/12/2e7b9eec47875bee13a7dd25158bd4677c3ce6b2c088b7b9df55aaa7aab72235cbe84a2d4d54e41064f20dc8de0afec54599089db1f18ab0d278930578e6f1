{"version":3,"file":"DropdownMenuItem.js","sourceRoot":"../../../../src","sources":["components/DropdownMenu/DropdownMenuItem.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {ChevronLeft, ChevronRight} from '@gravity-ui/icons';\n\nimport {Icon} from '../Icon';\nimport {Menu} from '../Menu';\nimport type {PopupPlacement, PopupProps} from '../Popup';\nimport {useDirection} from '../theme';\n\nimport {cnDropdownMenu} from './DropdownMenu.classname';\nimport {DropdownMenuContext} from './DropdownMenuContext';\nimport {DropdownMenuPopup} from './DropdownMenuPopup';\nimport {useSubmenu} from './hooks/useSubmenu';\nimport type {DropdownMenuListItem, DropdownMenuSize} from './types';\n\nexport type DropdownMenuItemProps<T> = Omit<DropdownMenuListItem<T>, 'path'> & {\n    popupProps?: Partial<PopupProps>;\n    closeMenu?: () => void;\n    children?: React.ReactNode;\n    path?: number[];\n    size?: DropdownMenuSize;\n};\n\nexport const DropdownMenuItem = <T,>({\n    text,\n    action,\n    items: subMenuItems,\n    popupProps,\n    closeMenu,\n    children,\n    path,\n    size,\n    ...props\n}: DropdownMenuItemProps<T>) => {\n    const {toggle, data} = React.useContext(DropdownMenuContext);\n    const menuItemRef = React.useRef(null);\n    const direction = useDirection();\n\n    const {hasSubmenu, isSubmenuOpen, closeSubmenu, openSubmenu} = useSubmenu({\n        items: subMenuItems,\n        path,\n    });\n\n    const handleCloseMenu = React.useCallback(() => {\n        const close = () => {\n            if (closeMenu) {\n                closeMenu();\n            } else {\n                toggle(false);\n            }\n        };\n\n        if (hasSubmenu) {\n            closeSubmenu();\n            // Wait for submenu to close\n            requestAnimationFrame(close);\n        } else {\n            close();\n        }\n    }, [closeMenu, closeSubmenu, hasSubmenu, toggle]);\n\n    const handleMenuItemClick = React.useCallback(\n        (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n            if (hasSubmenu) {\n                return;\n            }\n\n            action?.(event, data as unknown as T);\n            handleCloseMenu();\n        },\n        [action, data, handleCloseMenu, hasSubmenu],\n    );\n\n    const extraProps = React.useMemo(() => {\n        return {\n            ...props.extraProps,\n            onMouseEnter: (\n                event: React.MouseEvent<HTMLDivElement, MouseEvent> &\n                    React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n            ) => {\n                props.extraProps?.onMouseEnter?.(event);\n                if (hasSubmenu) {\n                    openSubmenu();\n                }\n            },\n            onMouseLeave: (\n                event: React.MouseEvent<HTMLDivElement, MouseEvent> &\n                    React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n            ) => {\n                props.extraProps?.onMouseLeave?.(event);\n                if (hasSubmenu) {\n                    closeSubmenu();\n                }\n            },\n        };\n    }, [props.extraProps, closeSubmenu, hasSubmenu, openSubmenu]);\n\n    const subMenuPlacement = React.useMemo<PopupPlacement>(\n        () => (direction === 'rtl' ? ['left-start', 'right-start'] : ['right-start', 'left-start']),\n        [direction],\n    );\n\n    const iconEnd = React.useMemo(\n        () =>\n            hasSubmenu ? (\n                <Icon\n                    data={direction === 'rtl' ? ChevronLeft : ChevronRight}\n                    size={10}\n                    className={cnDropdownMenu('sub-menu-arrow')}\n                />\n            ) : (\n                props.iconEnd\n            ),\n        [hasSubmenu, direction, props.iconEnd],\n    );\n\n    return (\n        <React.Fragment>\n            <Menu.Item\n                ref={menuItemRef}\n                {...props}\n                extraProps={extraProps}\n                onClick={handleMenuItemClick}\n                iconEnd={iconEnd}\n            >\n                {text || children}\n            </Menu.Item>\n            {hasSubmenu && subMenuItems && (\n                <DropdownMenuPopup\n                    popupProps={{\n                        ...popupProps,\n                        className: cnDropdownMenu('sub-menu', popupProps?.className),\n                        placement: subMenuPlacement,\n                    }}\n                    size={size}\n                    items={subMenuItems}\n                    path={path}\n                    open={isSubmenuOpen}\n                    anchorRef={menuItemRef}\n                    onClose={handleCloseMenu}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n"]}