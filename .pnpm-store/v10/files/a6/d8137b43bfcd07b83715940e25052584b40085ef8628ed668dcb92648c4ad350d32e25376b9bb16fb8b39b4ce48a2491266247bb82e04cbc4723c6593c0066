{"version":3,"file":"CollapseActions.js","sourceRoot":"../../../../../src","sources":["components/ActionsPanel/components/CollapseActions.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE3C,OAAO,EAAC,MAAM,EAAC,8BAAqB;AACpC,OAAO,EAAC,YAAY,EAAC,oCAA2B;AAChD,OAAO,EAAC,IAAI,EAAC,4BAAmB;AAChC,OAAO,EAAC,KAAK,EAAC,0BAAuB;AACrC,OAAO,IAAI,yBAAgB;AAG3B,OAAO,EAAC,oBAAoB,EAAE,kBAAkB,EAAC,yBAAgB;AAEjE,+BAAgC;AAEhC,MAAM,CAAC,GAAG,KAAK,CAAC,wBAAwB,CAAC,CAAC;AAO1C,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,EAAC,OAAO,EAAE,aAAa,EAAQ,EAAE,EAAE;IAC/D,MAAM,EAAC,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa,EAAE,YAAY,EAAC,GAChF,kBAAkB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IAE/C,OAAO,CACH,eAAK,SAAS,EAAE,CAAC,EAAE,aACf,cAAK,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC,EAAE,GAAG,EAAE,SAAS,YACzC,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC1B,MAAM,EAAC,EAAE,EAAC,GAAG,MAAM,CAAC;oBACpB,MAAM,IAAI,GAAG,EAAC,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAC,CAAC;oBAC1C,MAAM,SAAS,GAAG,aAAa,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC;oBAE9C,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,KAAC,YAAY,IACT,IAAI,EAAC,GAAG,EACR,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EACjC,cAAc,EAAE,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,CAC3B,KAAC,MAAM,IACH,IAAI,EAAC,eAAe,EACpB,IAAI,EAAC,GAAG,KACJ,MAAM,CAAC,MAAM,CAAC,KAAK,EACvB,OAAO,EAAE,OAAO,GAClB,CACL,EACD,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAC9C,CACL,CAAC,CAAC,CAAC,CACA,KAAC,MAAM,IAAC,IAAI,EAAC,eAAe,EAAC,IAAI,EAAC,GAAG,KAAK,MAAM,CAAC,MAAM,CAAC,KAAK,GAAI,CACpE,CAAC;oBACF,OAAO,CACH,wBAAK,SAAS,EAAE,CAAC,CAAC,uBAAuB,EAAE,EAAC,SAAS,EAAC,CAAC,KAAM,IAAI,EAAE,GAAG,EAAE,EAAE,IACrE,IAAI,CACH,CACT,CAAC;gBACN,CAAC,CAAC,GACA,EACL,YAAY,IAAI,CACb,MAAC,KAAK,CAAC,QAAQ,eACX,cAAK,SAAS,EAAE,CAAC,CAAC,kBAAkB,CAAC,GAAI,EACzC,cAAK,SAAS,EAAE,CAAC,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,EAAC,gBAAgB,EAAE,MAAM,EAAC,YAChE,KAAC,YAAY,IACT,IAAI,EAAC,GAAG,EACR,KAAK,EAAE,aAAa,EACpB,cAAc,EAAE,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,CAC3B,KAAC,MAAM,IACH,IAAI,EAAC,eAAe,EACpB,IAAI,EAAC,GAAG,gBACI,IAAI,CAAC,YAAY,CAAC,EAC9B,OAAO,EAAE,OAAO,YAEhB,KAAC,IAAI,IAAC,IAAI,EAAE,QAAQ,GAAI,GACnB,CACZ,GACH,GACA,IACO,CACpB,IACC,CACT,CAAC;AACN,CAAC,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Ellipsis} from '@gravity-ui/icons';\n\nimport {Button} from '../../Button';\nimport {DropdownMenu} from '../../DropdownMenu';\nimport {Icon} from '../../Icon';\nimport {block} from '../../utils/cn';\nimport i18n from '../i18n';\nimport type {ActionsPanelItem} from '../types';\n\nimport {OBSERVER_TARGET_ATTR, useCollapseActions} from './hooks';\n\nimport './CollapseActions.scss';\n\nconst b = block('actions-panel-collapse');\n\ntype Props = {\n    actions: ActionsPanelItem[];\n    maxRowActions?: number;\n};\n\nexport const CollapseActions = ({actions, maxRowActions}: Props) => {\n    const {buttonActions, dropdownItems, parentRef, offset, visibilityMap, showDropdown} =\n        useCollapseActions(actions, maxRowActions);\n\n    return (\n        <div className={b()}>\n            <div className={b('container')} ref={parentRef}>\n                {buttonActions.map((action) => {\n                    const {id} = action;\n                    const attr = {[OBSERVER_TARGET_ATTR]: id};\n                    const invisible = visibilityMap[id] === false;\n\n                    const node = Array.isArray(action.dropdown.item.items) ? (\n                        <DropdownMenu\n                            size=\"s\"\n                            items={action.dropdown.item.items}\n                            renderSwitcher={({onClick}) => (\n                                <Button\n                                    view=\"flat-contrast\"\n                                    size=\"m\"\n                                    {...action.button.props}\n                                    onClick={onClick}\n                                />\n                            )}\n                            onSwitcherClick={action.button.props.onClick}\n                        />\n                    ) : (\n                        <Button view=\"flat-contrast\" size=\"m\" {...action.button.props} />\n                    );\n                    return (\n                        <div className={b('button-action-wrapper', {invisible})} {...attr} key={id}>\n                            {node}\n                        </div>\n                    );\n                })}\n            </div>\n            {showDropdown && (\n                <React.Fragment>\n                    <div className={b('menu-placeholder')} />\n                    <div className={b('menu-wrapper')} style={{insetInlineStart: offset}}>\n                        <DropdownMenu\n                            size=\"s\"\n                            items={dropdownItems}\n                            renderSwitcher={({onClick}) => (\n                                <Button\n                                    view=\"flat-contrast\"\n                                    size=\"m\"\n                                    aria-label={i18n('label_more')}\n                                    onClick={onClick}\n                                >\n                                    <Icon data={Ellipsis} />\n                                </Button>\n                            )}\n                        />\n                    </div>\n                </React.Fragment>\n            )}\n        </div>\n    );\n};\n"]}