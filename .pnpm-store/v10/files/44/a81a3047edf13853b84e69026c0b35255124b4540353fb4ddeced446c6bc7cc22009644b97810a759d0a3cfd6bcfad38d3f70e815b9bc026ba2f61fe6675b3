{"version":3,"file":"utils.js","sourceRoot":"../../../../../src","sources":["components/Avatar/AvatarText/utils.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,IAAY,EAAE,IAAgB,EAAE,EAAE;IACnE,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAEvC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;AAC7E,CAAC,CAAC","sourcesContent":["import type {AvatarSize} from '../types/common';\n\nexport const getAvatarDisplayText = (text: string, size: AvatarSize) => {\n    if (size === '3xs') {\n        return text[0].toUpperCase();\n    }\n\n    const words = text.split(/[^\\p{L}]+/u);\n\n    if (words.length <= 1) {\n        return text.slice(0, 2).toUpperCase();\n    }\n\n    return [words[0][0], words[1][0]].filter(Boolean).join('').toUpperCase();\n};\n"]}