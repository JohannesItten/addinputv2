{"version":3,"file":"TermContent.js","sourceRoot":"../../../../../src","sources":["components/DefinitionList/components/TermContent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,QAAQ,EAAC,gCAAuB;AACxC,OAAO,EAAC,CAAC,EAAC,wBAAqB;AAC/B,OAAO,IAAI,yBAAgB;AAW3B,SAAS,WAAW,CAAC,EAAC,IAAI,EAAoB;IAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;QACR,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC3B,OAAO,CACH,KAAC,QAAQ,IACL,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,EACpB,YAAY,EAAE,EAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAC,gBAChC,IAAI,CAAC,YAAY,CAAC,YAE7B,IAAI,GACE,CACd,CAAC;IACN,CAAC;IAED,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC3B,OAAO,CACH,KAAC,QAAQ,OACD,IAAI,EACR,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,EACpC,YAAY,EAAE,EAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,EAAC,gBACtD,IAAI,CAAC,YAAY,CAAC,GAChC,CACL,CAAC;IACN,CAAC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAMD,MAAM,UAAU,WAAW,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAY;IAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CACvB,MAAC,KAAK,CAAC,QAAQ,yBAEX,KAAC,WAAW,IAAC,IAAI,EAAE,IAAI,GAAI,IACd,CACpB,CAAC,CAAC,CAAC,IAAI,CAAC;IACT,OAAO,CACH,MAAC,KAAK,CAAC,QAAQ,eACX,eAAK,SAAS,EAAE,CAAC,CAAC,cAAc,CAAC,aAC5B,IAAI,EACJ,WAAW,IACV,EACL,SAAS,KAAK,YAAY,IAAI,cAAK,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,GAAI,IAC/C,CACpB,CAAC;AACN,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {HelpMark} from '../../HelpMark';\nimport {b} from '../constants';\nimport i18n from '../i18n';\nimport type {\n    DefinitionListDirection,\n    DefinitionListItemNote,\n    DefinitionListItemProps,\n} from '../types';\n\ninterface NoteElementsProps {\n    note?: DefinitionListItemNote;\n}\n\nfunction NoteElement({note}: NoteElementsProps) {\n    if (!note) {\n        return null;\n    }\n    if (typeof note === 'string') {\n        return (\n            <HelpMark\n                className={b('note')}\n                popoverProps={{placement: ['bottom', 'top']}}\n                aria-label={i18n('label_note')}\n            >\n                {note}\n            </HelpMark>\n        );\n    }\n\n    if (typeof note === 'object') {\n        return (\n            <HelpMark\n                {...note}\n                className={b('note', note.className)}\n                popoverProps={{placement: ['bottom', 'top'], ...note.popoverProps}}\n                aria-label={i18n('label_note')}\n            />\n        );\n    }\n    return null;\n}\n\ninterface TermProps extends Pick<DefinitionListItemProps, 'note' | 'name'> {\n    direction?: DefinitionListDirection;\n}\n\nexport function TermContent({note, name, direction}: TermProps) {\n    const noteElement = note ? (\n        <React.Fragment>\n            &nbsp;\n            <NoteElement note={note} />\n        </React.Fragment>\n    ) : null;\n    return (\n        <React.Fragment>\n            <div className={b('term-wrapper')}>\n                {name}\n                {noteElement}\n            </div>\n            {direction === 'horizontal' && <div className={b('dots')} />}\n        </React.Fragment>\n    );\n}\n"]}