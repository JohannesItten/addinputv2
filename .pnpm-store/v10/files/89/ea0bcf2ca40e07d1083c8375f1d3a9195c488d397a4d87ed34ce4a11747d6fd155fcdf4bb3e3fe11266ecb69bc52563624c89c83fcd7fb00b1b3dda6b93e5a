{"version":3,"file":"useList.js","sourceRoot":"../../../../../src","sources":["components/useList/hooks/useList.ts"],"names":[],"mappings":";;;;AAAA,qDAA+B;AAI/B,kEAA0D;AAC1D,gEAAwD;AAExD,oDAA4C;AAU5C;;GAEG;AACI,MAAM,OAAO,GAAG,CAAI,EACvB,KAAK,EACL,SAAS,EACT,oBAAoB,GAAG,UAAU,EACjC,iBAAiB,GAAG,IAAI,EACxB,YAAY,EAAE,aAAa,EAC3B,eAAe,GACD,EAAoB,EAAE;IACpC,MAAM,EAAC,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAC,GAAG,IAAA,uCAAkB,EAAC;QAC1E,KAAK;QACL,SAAS;QACT,oBAAoB;KACvB,CAAC,CAAC;IAEH,MAAM,UAAU,GAA2B,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QAC1D,OAAO;YACH,YAAY,EAAE,EAAC,GAAG,YAAY,CAAC,YAAY,EAAE,GAAG,aAAa,EAAE,YAAY,EAAC;YAC5E,YAAY,EAAE,EAAC,GAAG,YAAY,CAAC,YAAY,EAAE,GAAG,aAAa,EAAE,YAAY,EAAC;YAC5E,YAAY,EAAE,EAAC,GAAG,YAAY,CAAC,YAAY,EAAE,GAAG,aAAa,EAAE,YAAY,EAAC;YAC5E,YAAY,EAAE,aAAa,EAAE,YAAY;SAC5C,CAAC;IACN,CAAC,EAAE;QACC,YAAY,CAAC,YAAY;QACzB,YAAY,CAAC,YAAY;QACzB,YAAY,CAAC,YAAY;QACzB,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;KAC9B,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,IAAA,2BAAY,EAAC;QAC5B,YAAY,EAAE,UAAU;QACxB,iBAAiB;KACpB,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QACjC,IAAI,eAAe,EAAE,CAAC;YAClB,OAAO;gBACH,GAAG,UAAU;gBACb,GAAG,eAAe;aACrB,CAAC;QACN,CAAC;QAED,OAAO,UAAU,CAAC;IACtB,CAAC,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC;IAElC,MAAM,EAAC,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAC,GAAG,IAAA,yCAAmB,EAAC;QACvE,KAAK;QACL;;WAEG;QACH,YAAY,EAAE,SAAS,CAAC,YAAY;QACpC,SAAS;KACZ,CAAC,CAAC;IAEH,OAAO;QACH,KAAK,EAAE,SAAS;QAChB,SAAS,EAAE;YACP,OAAO;YACP,KAAK;YACL,iBAAiB;YACjB,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,UAAU;SACb;KACJ,CAAC;AACN,CAAC,CAAC;AApEW,QAAA,OAAO,WAoElB","sourcesContent":["import * as React from 'react';\n\nimport type {InitialListParsedState, ListState, UseListResult} from '../types';\n\nimport {useFlattenListItems} from './useFlattenListItems';\nimport {useListParsedState} from './useListParsedState';\nimport type {UseListParsedStateProps} from './useListParsedState';\nimport {useListState} from './useListState';\nimport type {UseListStateProps} from './useListState';\n\ninterface UseListProps<T>\n    extends UseListParsedStateProps<T>,\n        Omit<UseListStateProps, 'initialState'> {\n    initialState?: Partial<InitialListParsedState>;\n    controlledState?: Partial<ListState>;\n}\n\n/**\n * Take array of items as a argument with params described what type of list initial data represents.\n */\nexport const useList = <T>({\n    items,\n    getItemId,\n    defaultExpandedState = 'expanded',\n    withExpandedState = true,\n    initialState: initialValues,\n    controlledState,\n}: UseListProps<T>): UseListResult<T> => {\n    const {itemsById, groupsState, itemsState, initialState} = useListParsedState({\n        items,\n        getItemId,\n        defaultExpandedState,\n    });\n\n    const initValues: InitialListParsedState = React.useMemo(() => {\n        return {\n            expandedById: {...initialState.expandedById, ...initialValues?.expandedById},\n            selectedById: {...initialState.selectedById, ...initialValues?.selectedById},\n            disabledById: {...initialState.disabledById, ...initialValues?.disabledById},\n            activeItemId: initialValues?.activeItemId,\n        };\n    }, [\n        initialState.disabledById,\n        initialState.expandedById,\n        initialState.selectedById,\n        initialValues?.activeItemId,\n        initialValues?.disabledById,\n        initialValues?.expandedById,\n        initialValues?.selectedById,\n    ]);\n\n    const innerState = useListState({\n        initialState: initValues,\n        withExpandedState,\n    });\n\n    const realState = React.useMemo(() => {\n        if (controlledState) {\n            return {\n                ...innerState,\n                ...controlledState,\n            };\n        }\n\n        return innerState;\n    }, [controlledState, innerState]);\n\n    const {visibleFlattenIds, idToFlattenIndex, rootIds} = useFlattenListItems({\n        items,\n        /**\n         * By default controlled from list items declaration state\n         */\n        expandedById: realState.expandedById,\n        getItemId,\n    });\n\n    return {\n        state: realState,\n        structure: {\n            rootIds,\n            items,\n            visibleFlattenIds,\n            idToFlattenIndex,\n            itemsById,\n            groupsState,\n            itemsState,\n        },\n    };\n};\n"]}