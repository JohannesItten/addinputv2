{"version":3,"file":"ClearButton.js","sourceRoot":"../../../../../../src","sources":["components/controls/common/ClearButton/ClearButton.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAIb,OAAO,EAAC,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAExC,OAAO,EAAC,MAAM,EAAC,iCAAwB;AAEvC,OAAO,EAAC,IAAI,EAAC,+BAAsB;AACnC,OAAO,EAAC,KAAK,EAAC,6BAA0B;AAGxC,OAAO,IAAI,wBAAe;AAE1B,2BAA4B;AAE5B,MAAM,CAAC,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;AAChC,MAAM,SAAS,GAAG,EAAE,CAAC;AAQrB,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,aAA+B,EAAc,EAAE;IACxF,QAAQ,aAAa,EAAE,CAAC;QACpB,KAAK,GAAG,CAAC,CAAC,CAAC;YACP,OAAO,IAAI,CAAC;QAChB,CAAC;QACD,KAAK,GAAG,CAAC,CAAC,CAAC;YACP,OAAO,GAAG,CAAC;QACf,CAAC;QACD,KAAK,GAAG,CAAC,CAAC,CAAC;YACP,OAAO,GAAG,CAAC;QACf,CAAC;QACD,KAAK,IAAI,CAAC,CAAC,CAAC;YACR,OAAO,GAAG,CAAC;QACf,CAAC;QACD,OAAO,CAAC,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,4BAA4B,aAAa,GAAG,CAAC,CAAC;QAClE,CAAC;IACL,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,KAAY,EAAE,EAAE;IACxC,MAAM,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAC,GAAG,KAAK,CAAC;IAEzC;;OAEG;IACH,MAAM,qBAAqB,GAA+C,CAAC,KAAK,EAAE,EAAE;QAChF,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAO,CACH,KAAC,MAAM,IACH,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,EAC7B,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,qBAAqB,gBACtB,IAAI,CAAC,oBAAoB,CAAC,YAEtC,KAAC,IAAI,IAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,GAAI,GACjC,CACZ,CAAC;AACN,CAAC,CAAC","sourcesContent":["'use client';\n\nimport type * as React from 'react';\n\nimport {Xmark} from '@gravity-ui/icons';\n\nimport {Button} from '../../../Button';\nimport type {ButtonSize} from '../../../Button';\nimport {Icon} from '../../../Icon';\nimport {block} from '../../../utils/cn';\nimport type {InputControlSize} from '../../types';\n\nimport i18n from './i18n';\n\nimport './ClearButton.scss';\n\nconst b = block('clear-button');\nconst ICON_SIZE = 16;\n\ntype Props = {\n    size: ButtonSize;\n    className?: string;\n    onClick: (event: React.MouseEvent<HTMLSpanElement>) => void;\n};\n\nexport const mapTextInputSizeToButtonSize = (textInputSize: InputControlSize): ButtonSize => {\n    switch (textInputSize) {\n        case 's': {\n            return 'xs';\n        }\n        case 'm': {\n            return 's';\n        }\n        case 'l': {\n            return 'm';\n        }\n        case 'xl': {\n            return 'l';\n        }\n        default: {\n            throw new Error(`Unknown text input size \"${textInputSize}\"`);\n        }\n    }\n};\n\nexport const ClearButton = (props: Props) => {\n    const {size, className, onClick} = props;\n\n    /**\n     * Turn off event onBlur on input when use clear button\n     */\n    const preventDefaultHandler: React.MouseEventHandler<HTMLButtonElement> = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <Button\n            size={size}\n            className={b(null, className)}\n            onClick={onClick}\n            onMouseDown={preventDefaultHandler}\n            aria-label={i18n('label_clear-button')}\n        >\n            <Icon data={Xmark} size={ICON_SIZE} />\n        </Button>\n    );\n};\n"]}