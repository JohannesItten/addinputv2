{"version":3,"file":"Col.js","sourceRoot":"../../../../../src","sources":["components/layout/Col/Col.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AAKb,0CAAqC;AACrC,mEAA2D;AAE3D,6CAAoC;AAEpC,qBAAoB;AAEpB,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,KAAK,CAAC,CAAC;AA6BvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACI,MAAM,GAAG,GAAG,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,GAAG,eAAe,EAAW,EAAE,EAAE;IACxF,MAAM,EAAC,oBAAoB,EAAC,GAAG,IAAA,mCAAgB,GAAE,CAAC;IAElD,IAAI,WAAkC,CAAC;IACvC,IAAI,cAAmC,CAAC;IAExC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QACtB,CAAC,cAAc,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC;IACzC,CAAC;SAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;QAClC,WAAW,GAAG,IAAI,IAAI,eAAe,CAAC;IAC1C,CAAC;SAAM,CAAC;QACJ,cAAc,GAAG,IAAI,CAAC;QACtB,WAAW,GAAG,eAAe,CAAC;IAClC,CAAC;IAED,MAAM,YAAY,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;IAEvD,OAAO,CACH,gCACI,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,CAAC,CACR;YACI,IAAI,EACA,OAAO,YAAY,KAAK,WAAW;gBAC/B,CAAC,CAAC,cAAc;gBAChB,CAAC,CAAC,IAAA,kBAAU,EAAC,YAAY,CAAC;SACrC,EACD,SAAS,CACZ,aACQ,EAAE,YAEV,QAAQ,GACP,CACT,CAAC;AACN,CAAC,CAAC;AAlCW,QAAA,GAAG,OAkCd","sourcesContent":["'use client';\n\nimport type * as React from 'react';\n\nimport type {QAProps} from '../../types';\nimport {block} from '../../utils/cn';\nimport {useLayoutContext} from '../hooks/useLayoutContext';\nimport type {ColSize, MediaPartial} from '../types';\nimport {makeCssMod} from '../utils';\n\nimport './Col.scss';\n\nconst b = block('col');\n\nexport interface ColProps extends QAProps {\n    /**\n     * @deprecated Use \"size\" prop. See https://preview.gravity-ui.com/uikit/?path=/docs/components-layout--docs#col\n     */\n    s?: MediaPartial<ColSize>['s'];\n    /**\n     * @deprecated Use \"size\" prop. See https://preview.gravity-ui.com/uikit/?path=/docs/components-layout--docs#col\n     */\n    m?: MediaPartial<ColSize>['m'];\n    /**\n     * @deprecated Use \"size\" prop. See https://preview.gravity-ui.com/uikit/?path=/docs/components-layout--docs#col\n     */\n    l?: MediaPartial<ColSize>['l'];\n    /**\n     * @deprecated Use \"size\" prop. See https://preview.gravity-ui.com/uikit/?path=/docs/components-layout--docs#col\n     */\n    xl?: MediaPartial<ColSize>['xl'];\n    /**\n     * @deprecated Use \"size\" prop. See https://preview.gravity-ui.com/uikit/?path=/docs/components-layout--docs#col\n     */\n    xxl?: MediaPartial<ColSize>['xxl'];\n    size?: ColSize | [ColSize | undefined, MediaPartial<ColSize>] | MediaPartial<ColSize>;\n    className?: string;\n    style?: React.CSSProperties;\n    children?: React.ReactNode;\n}\n\n/**\n * How many columns of you 12-th column layout will take content.\n * Must be used as a child of `Row` component.\n *\n * By default, component takes all available space.\n * If you want to specify static size use `size` prop.\n *\n * ```tsx\n * <Col size=\"6\">some content</Col>\n * ```\n * If you want responsive column use provide media sizes.\n *\n * ```tsx\n * <Col size={[12, {m: 6}]}>some content</Col>\n * ```\n * ---\n *\n * Note: you can use empty <Col/> component for spacing:\n *\n * ```tsx\n * <Row>\n *   <Col size=\"4\">col 1</Col>\n *   <Col/>\n *   <Col size=\"4\">col 2</Col>\n * </Row>\n * ```\n * ---\n * Storybook - https://preview.gravity-ui.com/uikit/?path=/docs/components-layout--docs#col\n */\nexport const Col = ({size, children, style, className, qa, ...mediaConfigProp}: ColProps) => {\n    const {getClosestMediaProps} = useLayoutContext();\n\n    let mediaConfig: MediaPartial<ColSize>;\n    let defaultSizeMod: ColSize | undefined;\n\n    if (Array.isArray(size)) {\n        [defaultSizeMod, mediaConfig] = size;\n    } else if (typeof size === 'object') {\n        mediaConfig = size || mediaConfigProp;\n    } else {\n        defaultSizeMod = size;\n        mediaConfig = mediaConfigProp;\n    }\n\n    const sizeModValue = getClosestMediaProps(mediaConfig);\n\n    return (\n        <div\n            style={style}\n            className={b(\n                {\n                    size:\n                        typeof sizeModValue === 'undefined'\n                            ? defaultSizeMod\n                            : makeCssMod(sizeModValue),\n                },\n                className,\n            )}\n            data-qa={qa}\n        >\n            {children}\n        </div>\n    );\n};\n\n/**\n * Possible improvements that the customer is looking for:\n * - props for vertical alignment in row;\n * - offset;\n * - media only. Rule that will be applied only in specified media query;\n * - content alignment;\n */\n"]}