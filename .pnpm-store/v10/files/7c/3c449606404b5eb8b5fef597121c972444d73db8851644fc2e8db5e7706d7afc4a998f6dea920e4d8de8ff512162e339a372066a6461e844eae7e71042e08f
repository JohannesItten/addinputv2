{"version":3,"file":"ListItemExpandIcon.js","sourceRoot":"../../../../../../src","sources":["components/useList/components/ListItemExpandIcon/ListItemExpandIcon.tsx"],"names":[],"mappings":";;;;AACA,+DAAiD;AACjD,iDAAwC;AACxC,6CAAwC;AAGxC,oCAAmC;AAEnC,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,uBAAuB,CAAC,CAAC;AAIlC,MAAM,kBAAkB,GAAG,CAAC,EAC/B,QAAQ,EACR,QAAQ,GAAG,QAAQ,EACnB,QAAQ,GACc,EAAE,EAAE;IAC1B,OAAO,CACH,uBAAC,yBAAW,IACR,SAAS,EAAE,gBAAgB,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,EACjD,SAAS,EAAE,CAAC,CAAC,IAAI,EAAE,IAAA,gBAAS,EAAC,EAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EACrE,IAAI,EAAE,EAAE,GACV,CACL,CAAC;AACN,CAAC,CAAC;AAZW,QAAA,kBAAkB,sBAY7B;AAEF,SAAS,gBAAgB,CAAC,EACtB,QAAQ,EACR,QAAQ,GACmD;IAC3D,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;QACpC,OAAO,KAAK,CAAC;IACjB,CAAC;SAAM,IAAI,QAAQ,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;QAC1C,OAAO,QAAQ,CAAC;IACpB,CAAC;SAAM,IAAI,QAAQ,IAAI,QAAQ,KAAK,eAAe,EAAE,CAAC;QAClD,OAAO,QAAQ,CAAC;IACpB,CAAC;SAAM,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;QAC/B,OAAO,QAAQ,CAAC;IACpB,CAAC;SAAM,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;QAC9B,OAAO,OAAO,CAAC;IACnB,CAAC;SAAM,IAAI,QAAQ,KAAK,eAAe,EAAE,CAAC;QACtC,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,OAAO,QAAQ,CAAC;AACpB,CAAC","sourcesContent":["import type {ArrowToggleProps} from '../../../ArrowToggle';\nimport {ArrowToggle} from '../../../ArrowToggle';\nimport {colorText} from '../../../Text';\nimport {block} from '../../../utils/cn';\nimport type {ListItemExpandIconRenderProps} from '../../types';\n\nimport './ListItemExpandIcon.scss';\n\nconst b = block('list-item-expand-icon');\n\nexport interface ListItemExpandIconProps extends ListItemExpandIconRenderProps {}\n\nexport const ListItemExpandIcon = ({\n    expanded,\n    behavior = 'action',\n    disabled,\n}: ListItemExpandIconProps) => {\n    return (\n        <ArrowToggle\n            direction={getIconDirection({behavior, expanded})}\n            className={b(null, colorText({color: disabled ? 'hint' : undefined}))}\n            size={16}\n        />\n    );\n};\n\nfunction getIconDirection({\n    behavior,\n    expanded,\n}: Pick<ListItemExpandIconRenderProps, 'expanded' | 'behavior'>): ArrowToggleProps['direction'] {\n    if (expanded && behavior === 'action') {\n        return 'top';\n    } else if (expanded && behavior === 'state') {\n        return 'bottom';\n    } else if (expanded && behavior === 'state-inverse') {\n        return 'bottom';\n    } else if (behavior === 'action') {\n        return 'bottom';\n    } else if (behavior === 'state') {\n        return 'right';\n    } else if (behavior === 'state-inverse') {\n        return 'left';\n    }\n\n    return 'bottom';\n}\n"]}