{"version":3,"file":"defaultFilterItems.js","sourceRoot":"../../../../../src","sources":["components/useList/utils/defaultFilterItems.ts"],"names":[],"mappings":";;AAIA,gDA0BC;AA5BD,0DAAkD;AAElD,SAAgB,kBAAkB,CAC9B,KAAwB,EACxB,QAA8B;IAE9B,MAAM,WAAW,GAAG,CAAC,MAAyB,EAAE,IAAqB,EAAE,EAAE;QACrE,IAAI,IAAA,iCAAe,EAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAEvD,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAwB,CAAC,CAAC;YAC7E,CAAC;iBAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC7B,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC,CAAC;YAC1D,CAAC;QACL,CAAC;aAAM,IAAI,IAAA,iCAAe,EAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACtD,MAAM,EAAC,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO,EAAC,GAAG,IAAI,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC;aAAM,IAAI,CAAC,IAAA,iCAAe,EAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;YAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QAED,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;IAEF,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAoB,WAAW,EAAE,EAAE,CAAC,CAAC;IAE7D,OAAO,GAAG,CAAC;AACf,CAAC","sourcesContent":["import type {ListItemType, ListTreeItemType} from '../types';\n\nimport {isTreeItemGuard} from './isTreeItemGuard';\n\nexport function defaultFilterItems<T>(\n    items: ListItemType<T>[],\n    filterFn: (data: T) => boolean,\n): ListItemType<T>[] {\n    const getChildren = (result: ListItemType<T>[], item: ListItemType<T>) => {\n        if (isTreeItemGuard(item) && item.children) {\n            const children = item.children.reduce(getChildren, []);\n\n            if (children.length) {\n                result.push({...item, data: item.data, children} as ListTreeItemType<T>);\n            } else if (filterFn(item.data)) {\n                result.push({...item, data: item.data, children: []});\n            }\n        } else if (isTreeItemGuard(item) && filterFn(item.data)) {\n            const {children: _children, ...newItem} = item;\n            result.push(newItem);\n        } else if (!isTreeItemGuard(item) && filterFn(item)) {\n            result.push(item);\n        }\n\n        return result;\n    };\n\n    const res = items.reduce<ListItemType<T>[]>(getChildren, []);\n\n    return res;\n}\n"]}