import type * as React from 'react';
import type { QAProps } from "../../types.js";
interface DisclosureSummaryRenderFunctionProps extends QAProps {
    onClick: (e: React.SyntheticEvent) => void;
    ariaControls: string;
    id: string;
    expanded: boolean;
    disabled?: boolean;
}
export interface DisclosureSummaryProps extends QAProps {
    children: (props: DisclosureSummaryRenderFunctionProps, defaultSummary: React.ReactElement) => React.ReactElement;
}
export declare function DisclosureSummary({ children: renderFunction, qa }: DisclosureSummaryProps): React.ReactElement<any, string | React.JSXElementConstructor<any>>;
export declare namespace DisclosureSummary {
    var displayName: string;
}
export declare function DefaultDisclosureSummary({ onClick, ariaControls, id, expanded, disabled, qa, }: DisclosureSummaryRenderFunctionProps): import("react/jsx-runtime").JSX.Element;
export {};
