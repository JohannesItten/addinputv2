{"version":3,"file":"useFlattenListItems.js","sourceRoot":"../../../../../src","sources":["components/useList/hooks/useFlattenListItems.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAAC,YAAY,EAAC,iCAA8B;AAQnD;;;;GAIG;AACH,MAAM,UAAU,mBAAmB,CAAI,EACnC,KAAK,EACL,YAAY,EACZ,SAAS,GACiB;IAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QAC7B,OAAO,YAAY,CAAC,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAC,CAAC,CAAC;IAC1D,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;IAErC,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["import * as React from 'react';\n\nimport type {ListItemId, ListItemType} from '../types';\nimport {flattenItems} from '../utils/flattenItems';\n\ninterface UseFlattenListItemsProps<T> {\n    items: ListItemType<T>[];\n    expandedById?: Record<ListItemId, boolean>;\n    getItemId?(item: T): ListItemId;\n}\n\n/**\n * Pick ids from items and flatten children.\n * Returns flatten ids list tree structure representation.\n * Not included items if they in `expandedById` map\n */\nexport function useFlattenListItems<T>({\n    items,\n    expandedById,\n    getItemId,\n}: UseFlattenListItemsProps<T>) {\n    const order = React.useMemo(() => {\n        return flattenItems({items, expandedById, getItemId});\n    }, [items, expandedById, getItemId]);\n\n    return order;\n}\n"]}