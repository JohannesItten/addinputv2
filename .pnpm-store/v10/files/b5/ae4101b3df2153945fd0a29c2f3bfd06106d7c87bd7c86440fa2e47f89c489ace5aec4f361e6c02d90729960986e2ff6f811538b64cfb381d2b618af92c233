{"version":3,"file":"useOutsideClick.js","sourceRoot":"../../../../src","sources":["hooks/useOutsideClick/useOutsideClick.tsx"],"names":[],"mappings":";;;;AAAA,qDAA+B;AAS/B;;;;;;;GAOG;AACI,MAAM,eAAe,GAAwB,CAAC,EAAC,GAAG,EAAE,OAAO,EAAC,EAAE,EAAE;IACnE,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,MAAM,QAAQ,GAAG,CAAC,CAA0B,EAAE,EAAE;YAC5C,MAAM,IAAI,GAAG,GAAG,EAAE,OAAO,CAAC;YAE1B,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAc,CAAC,IAAI,OAAO,EAAE,CAAC;gBACtD,OAAO,CAAC,CAAC,CAAC,CAAC;YACf,CAAC;QACL,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QAE/D,OAAO,GAAG,EAAE;YACR,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACjE,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACtE,CAAC,CAAC;IACN,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC;AAlBW,QAAA,eAAe,mBAkB1B","sourcesContent":["import * as React from 'react';\n\nexport interface UseOutsideClickProps<T> {\n    ref: React.RefObject<T>;\n    handler?: (e: MouseEvent | TouchEvent) => void;\n}\n\ntype UseOutsideClickType = <K extends HTMLElement>(props: UseOutsideClickProps<K>) => void;\n\n/**\n * Hook for observing clicks outside a given target\n *\n * @param ref - purpose of observation\n * @param handler - callback when a click is triggered outside the observation target\n *\n * @return - nothing\n */\nexport const useOutsideClick: UseOutsideClickType = ({ref, handler}) => {\n    React.useEffect(() => {\n        const callback = (e: MouseEvent | TouchEvent) => {\n            const elem = ref?.current;\n\n            if (elem && !elem.contains(e.target as Node) && handler) {\n                handler(e);\n            }\n        };\n\n        window.addEventListener('mouseup', callback, {capture: true});\n        window.addEventListener('touchend', callback, {capture: true});\n\n        return () => {\n            window.removeEventListener('mouseup', callback, {capture: true});\n            window.removeEventListener('touchend', callback, {capture: true});\n        };\n    }, [handler, ref]);\n};\n"]}