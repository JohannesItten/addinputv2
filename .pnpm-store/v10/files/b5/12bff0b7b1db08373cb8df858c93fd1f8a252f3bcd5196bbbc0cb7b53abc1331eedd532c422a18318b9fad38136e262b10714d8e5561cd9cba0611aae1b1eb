{"version":3,"file":"Link.js","sourceRoot":"../../../../src","sources":["components/Link/Link.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAAC,KAAK,EAAC,uBAAoB;AAClC,OAAO,EAAC,WAAW,EAAC,uCAA8B;AAElD,oBAAqB;AAmBrB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AAExB,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAA+B,SAAS,IAAI,CAC5E,EACI,IAAI,GAAG,QAAQ,EACf,SAAS,GAAG,KAAK,EACjB,SAAS,GAAG,KAAK,EACjB,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,EAAE,EACF,cAAc,EACd,GAAG,KAAK,EACX,EACD,GAAG;IAEH,MAAM,kBAAkB,GAAG,KAAK,CAAC,WAAW,CACxC,CAAC,KAA0C,EAAE,EAAE;QAC3C,WAAW,CAAC,OAAO,CAAC;YAChB,WAAW,EAAE,MAAM;YACnB,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,KAAK;SAClB,CAAC,CAAC;QAEH,IAAI,cAAc,EAAE,CAAC;YACjB,cAAc,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;IACL,CAAC,EACD,CAAC,cAAc,CAAC,CACnB,CAAC;IAEF,OAAO,CACH,eACQ,KAAK,KACL,UAAU,EACd,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,KAAK,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAChF,cAAc,EAAE,kBAAkB,EAClC,SAAS,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAC,EAAE,KAAK,CAAC,SAAS,CAAC,aAClD,EAAE,YAEV,QAAQ,GACT,CACP,CAAC;AACN,CAAC,CAAC,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport type {DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\nimport {eventBroker} from '../utils/event-broker';\n\nimport './Link.scss';\n\nexport type LinkView = 'normal' | 'primary' | 'secondary';\n\nexport interface LinkProps\n    extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'style'>,\n        QAProps,\n        DOMProps {\n    view?: LinkView;\n    visitable?: boolean;\n    underline?: boolean;\n    href: string;\n    children?: React.ReactNode;\n    /**\n     * @deprecated Use additional props at the root\n     */\n    extraProps?: React.AnchorHTMLAttributes<HTMLAnchorElement>;\n}\n\nconst b = block('link');\n\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(function Link(\n    {\n        view = 'normal',\n        visitable = false,\n        underline = false,\n        href,\n        children,\n        extraProps,\n        qa,\n        onClickCapture,\n        ...props\n    },\n    ref,\n) {\n    const handleClickCapture = React.useCallback(\n        (event: React.MouseEvent<HTMLAnchorElement>) => {\n            eventBroker.publish({\n                componentId: 'Link',\n                eventId: 'click',\n                domEvent: event,\n            });\n\n            if (onClickCapture) {\n                onClickCapture(event);\n            }\n        },\n        [onClickCapture],\n    );\n\n    return (\n        <a\n            {...props}\n            {...extraProps}\n            ref={ref}\n            href={href}\n            rel={props.target === '_blank' && !props.rel ? 'noopener noreferrer' : props.rel}\n            onClickCapture={handleClickCapture}\n            className={b({view, visitable, underline}, props.className)}\n            data-qa={qa}\n        >\n            {children}\n        </a>\n    );\n});\n"]}