{"version":3,"file":"Checkbox.js","sourceRoot":"../../../../src","sources":["components/Checkbox/Checkbox.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,WAAW,EAAC,qCAA4B;AAChD,OAAO,EAAC,YAAY,EAAC,iCAAwB;AAG7C,OAAO,EAAC,KAAK,EAAC,uBAAoB;AAElC,OAAO,EAAC,gBAAgB,EAAC,8BAA2B;AACpD,OAAO,EAAC,gBAAgB,EAAC,8BAA2B;AAEpD,wBAAyB;AAWzB,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;AAE5B,MAAM,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CACpC,SAAS,QAAQ,CAAC,KAAK,EAAE,GAAG;IACxB,MAAM,EACF,IAAI,GAAG,GAAG,EACV,aAAa,EACb,QAAQ,GAAG,KAAK,EAChB,OAAO,EACP,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,EAAE,GACL,GAAG,KAAK,CAAC;IACV,MAAM,EAAC,OAAO,EAAE,UAAU,EAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IACjD,MAAM,IAAI,GAAG,OAAO,IAAI,QAAQ,CAAC;IAEjC,MAAM,OAAO,GAAG,CACZ,gBAAM,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC,aAC3B,eAAM,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,iCACrB,aAAa,CAAC,CAAC,CAAC,CACb,KAAC,gBAAgB,IAAC,SAAS,EAAE,CAAC,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,GAAI,CACjE,CAAC,CAAC,CAAC,CACA,KAAC,gBAAgB,IAAC,SAAS,EAAE,CAAC,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,GAAI,CACjE,GACE,EACP,mBAAW,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,GAAI,EAClD,eAAM,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,GAAI,IAC9B,CACV,CAAC;IAEF,OAAO,CACH,KAAC,YAAY,IACT,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,CAAC,CACR;YACI,IAAI;YACJ,QAAQ;YACR,aAAa;YACb,OAAO;SACV,EACD,SAAS,CACZ,EACD,EAAE,EAAE,EAAE,EACN,OAAO,EAAE,OAAO,YAEf,IAAI,GACM,CAClB,CAAC;AACN,CAAC,CACJ,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useCheckbox} from '../../hooks/private';\nimport {ControlLabel} from '../ControlLabel';\nimport type {ControlLabelSize} from '../ControlLabel';\nimport type {ControlProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport {CheckboxDashIcon} from './CheckboxDashIcon';\nimport {CheckboxTickIcon} from './CheckboxTickIcon';\n\nimport './Checkbox.scss';\n\nexport type CheckboxSize = ControlLabelSize;\n\nexport interface CheckboxProps extends ControlProps, DOMProps, QAProps {\n    size?: CheckboxSize;\n    content?: React.ReactNode;\n    children?: React.ReactNode;\n    title?: string;\n}\n\nconst b = block('checkbox');\n\nexport const Checkbox = React.forwardRef<HTMLLabelElement, CheckboxProps>(\n    function Checkbox(props, ref) {\n        const {\n            size = 'm',\n            indeterminate,\n            disabled = false,\n            content,\n            children,\n            title,\n            style,\n            className,\n            qa,\n        } = props;\n        const {checked, inputProps} = useCheckbox(props);\n        const text = content || children;\n\n        const control = (\n            <span className={b('indicator')}>\n                <span className={b('icon')} aria-hidden>\n                    {indeterminate ? (\n                        <CheckboxDashIcon className={b('icon-svg', {type: 'dash'})} />\n                    ) : (\n                        <CheckboxTickIcon className={b('icon-svg', {type: 'tick'})} />\n                    )}\n                </span>\n                <input {...inputProps} className={b('control')} />\n                <span className={b('outline')} />\n            </span>\n        );\n\n        return (\n            <ControlLabel\n                ref={ref}\n                title={title}\n                style={style}\n                size={size}\n                disabled={disabled}\n                className={b(\n                    {\n                        size,\n                        disabled,\n                        indeterminate,\n                        checked,\n                    },\n                    className,\n                )}\n                qa={qa}\n                control={control}\n            >\n                {text}\n            </ControlLabel>\n        );\n    },\n);\n"]}