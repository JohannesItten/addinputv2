{"version":3,"file":"Sheet.js","sourceRoot":"../../../../src","sources":["components/Sheet/Sheet.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,qDAA+B;AAE/B,8CAAmD;AAEnD,gDAAwC;AAIxC,oDAAqD;AACrD,8CAAuC;AAEvC,uBAAsB;AA2Bf,MAAM,KAAK,GAAG,CAAC,EAClB,QAAQ,EACR,OAAO,EACP,OAAO,EACP,EAAE,EACF,KAAK,EACL,SAAS,EACT,gBAAgB,EAChB,kBAAkB,EAClB,wBAAwB,EACxB,UAAU,EACV,2BAA2B,EAC3B,gBAAgB,EAChB,SAAS,EACT,aAAa,EACb,EAAE,GACO,EAAE,EAAE;IACb,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChD,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAE9D,IAAI,CAAC,WAAW,IAAI,OAAO,EAAE,CAAC;QAC1B,OAAO,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;IAED,IAAI,OAAO,KAAK,WAAW,EAAE,CAAC;QAC1B,cAAc,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM,SAAS,GAAG,GAAG,EAAE;QACnB,IAAI,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;QACd,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,IAAI,CAAC,IAAI,EAAE,CAAC;QACR,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAO,CACH,uBAAC,eAAM,IAAC,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,YACtD,uBAAC,uBAAe,eACH,EAAE,EACX,SAAS,EAAE,IAAA,sBAAU,EAAC,IAAI,EAAE,SAAS,CAAC,EACtC,UAAU,EAAE,IAAI,EAChB,KAAK,EAAE,EAAC,QAAQ,EAAE,SAAS,EAAC,YAE5B,uBAAC,oCAAqB,IAClB,EAAE,EAAE,EAAE,EACN,OAAO,EAAE,QAAQ,EACjB,gBAAgB,EAAE,gBAAgB,EAClC,kBAAkB,EAAE,kBAAkB,EACtC,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,OAAO,EAChB,wBAAwB,EAAE,wBAAwB,EAClD,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,EACpB,2BAA2B,EAAE,2BAA2B,EACxD,gBAAgB,EAAE,gBAAgB,GACpC,GACY,GACb,CACZ,CAAC;AACN,CAAC,CAAC;AA/DW,QAAA,KAAK,SA+DhB","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {FloatingOverlay} from '@floating-ui/react';\n\nimport {Portal} from '../Portal/Portal';\nimport type {PortalProps} from '../Portal/Portal';\nimport type {QAProps} from '../types';\n\nimport {SheetContentContainer} from './SheetContent';\nimport {sheetBlock} from './constants';\n\nimport './Sheet.scss';\n\nexport interface SheetProps extends Pick<PortalProps, 'container' | 'disablePortal'>, QAProps {\n    children?: React.ReactNode;\n    onClose?: () => void;\n    /** Show/hide sheet */\n    visible: boolean;\n    /** ID of the sheet, used as hash in URL. It's important to specify different `id` values if there can be more than one sheet on the page */\n    id?: string;\n    /** Title of the sheet window */\n    title?: string;\n    /** Class name for the sheet window */\n    className?: string;\n    /** Class name for the sheet content */\n    contentClassName?: string;\n    /** Class name for the swipe area */\n    swipeAreaClassName?: string;\n    /** Enable the behavior in which you can close the sheet window with a swipe down if the content is scrolled to its top (`contentNode.scrollTop === 0`) or has no scroll at all */\n    allowHideOnContentScroll?: boolean;\n    /** Hide top bar with resize handle */\n    hideTopBar?: boolean;\n    /** Coefficient that determines the maximum height of the `Sheet` relative to the height of the viewport (range 0-1) */\n    maxContentHeightCoefficient?: number;\n    /** `Sheet` height will always have the maximum value */\n    alwaysFullHeight?: boolean;\n}\n\nexport const Sheet = ({\n    children,\n    onClose,\n    visible,\n    id,\n    title,\n    className,\n    contentClassName,\n    swipeAreaClassName,\n    allowHideOnContentScroll,\n    hideTopBar,\n    maxContentHeightCoefficient,\n    alwaysFullHeight,\n    container,\n    disablePortal,\n    qa,\n}: SheetProps) => {\n    const [open, setOpen] = React.useState(visible);\n    const [prevVisible, setPrevVisible] = React.useState(visible);\n\n    if (!prevVisible && visible) {\n        setOpen(true);\n    }\n\n    if (visible !== prevVisible) {\n        setPrevVisible(visible);\n    }\n\n    const hideSheet = () => {\n        if (onClose) {\n            onClose();\n        }\n        setOpen(false);\n    };\n\n    if (!open) {\n        return null;\n    }\n\n    return (\n        <Portal container={container} disablePortal={disablePortal}>\n            <FloatingOverlay\n                data-qa={qa}\n                className={sheetBlock(null, className)}\n                lockScroll={open}\n                style={{overflow: undefined}}\n            >\n                <SheetContentContainer\n                    id={id}\n                    content={children}\n                    contentClassName={contentClassName}\n                    swipeAreaClassName={swipeAreaClassName}\n                    title={title}\n                    visible={visible}\n                    allowHideOnContentScroll={allowHideOnContentScroll}\n                    hideTopBar={hideTopBar}\n                    hideSheet={hideSheet}\n                    maxContentHeightCoefficient={maxContentHeightCoefficient}\n                    alwaysFullHeight={alwaysFullHeight}\n                />\n            </FloatingOverlay>\n        </Portal>\n    );\n};\n"]}