{"version":3,"file":"BreadcrumbsItem.js","sourceRoot":"../../../../../src","sources":["components/legacy/Breadcrumbs/BreadcrumbsItem.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,qDAA+B;AAE/B,8CAAgC;AAChC,0CAAqC;AAGrC,8DAAsD;AAetD,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,oBAAoB,CAAC,CAAC;AAEtC,SAAS,IAAI,CAAgD,EACzD,IAAI,EACJ,SAAS,EACT,aAAa,EACb,iBAAiB,EACjB,UAAU,GACH;IACP,MAAM,QAAQ,GAAG,iBAAiB;QAC9B,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,EAAE,aAAa,CAAC;QACnD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IAEhB,IAAI,UAAU,EAAE,CAAC;QACb,OAAO,UAAU,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAC,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;IAE1C,IAAI,aAAa,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAC1B,OAAO,CACH,uBAAC,WAAI,IAED,IAAI,EAAC,WAAW,EAChB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,SAAS,EAChB,OAAO,EAAE,IAAI,CAAC,MAAM,EACpB,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,EAAC,cAAc,EAAE,aAAa,EAAC,CAAC,YAEpD,QAAQ,IAPJ,IAAI,CAAC,IAAI,CAQX,CACV,CAAC;QACN,CAAC;QAED,OAAO,CACH,uBAAC,qCAAiB,IAAiB,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,YACpE,QAAQ,IADW,IAAI,CAAC,IAAI,CAEb,CACvB,CAAC;IACN,CAAC;IAED,OAAO,CACH,gCAAK,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,YACvD,QAAQ,GACP,CACT,CAAC;AACN,CAAC;AAEY,QAAA,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAwC,CAAC;AAEvF,uBAAe,CAAC,WAAW,GAAG,kBAAkB,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Link} from '../../Link';\nimport {block} from '../../utils/cn';\n\nimport type {BreadcrumbsItem as IBreadcrumbsItem} from './Breadcrumbs';\nimport {BreadcrumbsButton} from './BreadcrumbsButton';\nimport type {\n    RenderBreadcrumbsItem,\n    RenderBreadcrumbsItemContent,\n    RenderBreadcrumbsRootContent,\n} from './types';\n\nexport interface Props<T extends IBreadcrumbsItem = IBreadcrumbsItem> {\n    item: T;\n    isCurrent: boolean;\n    isPrevCurrent: boolean;\n    renderItemContent?: RenderBreadcrumbsItemContent<T> | RenderBreadcrumbsRootContent<T>;\n    renderItem?: RenderBreadcrumbsItem<T>;\n}\n\nconst b = block('breadcrumbs-legacy');\n\nfunction Item<T extends IBreadcrumbsItem = IBreadcrumbsItem>({\n    item,\n    isCurrent,\n    isPrevCurrent,\n    renderItemContent,\n    renderItem,\n}: Props<T>) {\n    const children = renderItemContent\n        ? renderItemContent(item, isCurrent, isPrevCurrent)\n        : item.text;\n\n    if (renderItem) {\n        return renderItem({item, children, isCurrent, isPrevCurrent});\n    }\n\n    const itemTitle = item.title || item.text;\n\n    if (isPrevCurrent || !isCurrent) {\n        if (item.href !== undefined) {\n            return (\n                <Link\n                    key={item.text}\n                    view=\"secondary\"\n                    href={item.href}\n                    title={itemTitle}\n                    onClick={item.action}\n                    className={b('item', {'prev-current': isPrevCurrent})}\n                >\n                    {children}\n                </Link>\n            );\n        }\n\n        return (\n            <BreadcrumbsButton key={item.text} title={itemTitle} onClick={item.action}>\n                {children}\n            </BreadcrumbsButton>\n        );\n    }\n\n    return (\n        <div title={itemTitle} className={b('item', {current: true})}>\n            {children}\n        </div>\n    );\n}\n\nexport const BreadcrumbsItem = React.memo(Item) as typeof Item & {displayName: string};\n\nBreadcrumbsItem.displayName = 'Breadcrumbs.Item';\n"]}