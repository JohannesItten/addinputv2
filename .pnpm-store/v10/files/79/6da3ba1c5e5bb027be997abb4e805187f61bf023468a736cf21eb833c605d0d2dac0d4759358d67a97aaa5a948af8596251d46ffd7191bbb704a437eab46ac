{"version":3,"file":"HelpMark.js","sourceRoot":"../../../../src","sources":["components/HelpMark/HelpMark.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;AAEjD,OAAO,EAAC,IAAI,EAAC,yBAAgB;AAC7B,OAAO,EAAC,OAAO,EAAC,4BAAmB;AAGnC,OAAO,EAAC,KAAK,EAAC,uBAAoB;AAElC,OAAO,EAAC,aAAa,EAAC,uBAAoB;AAE1C,wBAAyB;AAEzB,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;AAW7B,MAAM,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAmC,SAAS,QAAQ,CACxF,EAAC,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,GAAG,GAAG,EAAE,YAAY,EAAE,GAAG,SAAS,EAAC,EACrE,GAAG;IAEH,OAAO,CACH,KAAC,OAAO,IACJ,OAAO,EAAE,cAAK,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,YAAG,QAAQ,GAAO,EACvD,QAAQ,WACJ,YAAY,YAEhB,oBACQ,SAAS,EACb,GAAG,EAAE,GAAG,EACR,IAAI,EAAC,QAAQ,EACb,SAAS,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,SAAS,CAAC,aAChC,EAAE,YAEX,KAAC,IAAI,IAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,GAAI,GAC9E,GACH,CACb,CAAC;AACN,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {CircleQuestion} from '@gravity-ui/icons';\n\nimport {Icon} from '../Icon';\nimport {Popover} from '../Popover';\nimport type {PopoverProps} from '../Popover';\nimport type {QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport {ICON_SIZE_MAP} from './constants';\n\nimport './HelpMark.scss';\n\nconst b = block('help-mark');\n\ntype IconSize = keyof typeof ICON_SIZE_MAP;\n\nexport interface HelpMarkProps extends QAProps, React.ButtonHTMLAttributes<HTMLButtonElement> {\n    // TODO BREAKING CHANGE: Consider renaming to \"size\"\n    iconSize?: IconSize;\n    popoverProps?: Omit<PopoverProps, 'children'>;\n    children?: React.ReactNode;\n}\n\nexport const HelpMark = React.forwardRef<HTMLButtonElement, HelpMarkProps>(function HelpMark(\n    {children, qa, className, iconSize = 'm', popoverProps, ...restProps},\n    ref,\n) {\n    return (\n        <Popover\n            content={<div className={b('popover')}>{children}</div>}\n            hasArrow\n            {...popoverProps}\n        >\n            <button\n                {...restProps}\n                ref={ref}\n                type=\"button\"\n                className={b({size: iconSize}, className)}\n                data-qa={qa}\n            >\n                <Icon data={CircleQuestion} size={ICON_SIZE_MAP[iconSize]} className={b('icon')} />\n            </button>\n        </Popover>\n    );\n});\n"]}