{"version":3,"file":"TabsItem.js","sourceRoot":"../../../../../src","sources":["components/legacy/Tabs/TabsItem.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;AA4Cb,4BAuEC;;;AAjHD,qDAA+B;AAE/B,gDAAkC;AAGlC,0CAAqC;AAErC,kDAA0C;AAE1C,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,aAAa,CAAC,CAAC;AAiC/B,SAAgB,QAAQ,CAAC,EACrB,EAAE,EACF,SAAS,EACT,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,KAAK,EACL,MAAM,EACN,QAAQ,EACR,WAAW,EACX,UAAU,EACV,OAAO,EACP,EAAE,GACU;IACZ,MAAM,EAAC,WAAW,EAAC,GAAG,KAAK,CAAC,UAAU,CAAC,yBAAW,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,OAAO,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;IAE3E,MAAM,WAAW,GAAG,GAAG,EAAE;QACrB,OAAO,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,CAAC,KAA0B,EAAE,EAAE;QACjD,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;YACpB,OAAO,CAAC,EAAE,CAAC,CAAC;QAChB,CAAC;IACL,CAAC,CAAC;IAEF,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QACjC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACrB,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC5B,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAElB,OAAO,CACH,oCACQ,UAAU,EACd,IAAI,EAAC,KAAK,mBACK,QAAQ,mBACR,QAAQ,KAAK,IAAI,EAChC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3B,SAAS,EAAE,CAAC,CACR,MAAM,EACN,EAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,EAAC,EAC5D,SAAS,CACZ,EACD,KAAK,EAAE,SAAS,EAChB,OAAO,EAAE,WAAW,EACpB,SAAS,EAAE,aAAa,aACf,EAAE,aAEX,iCAAK,SAAS,EAAE,CAAC,CAAC,cAAc,CAAC,aAC5B,IAAI,IAAI,gCAAK,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC,YAAG,IAAI,GAAO,EACrD,gCAAK,SAAS,EAAE,CAAC,CAAC,YAAY,CAAC,YAAG,KAAK,IAAI,EAAE,GAAO,EACnD,OAAO,KAAK,SAAS,IAAI,gCAAK,SAAS,EAAE,CAAC,CAAC,cAAc,CAAC,YAAG,OAAO,GAAO,EAC3E,KAAK,IAAI,CACN,uBAAC,aAAK,IAAC,SAAS,EAAE,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,YAChD,KAAK,CAAC,OAAO,GACV,CACX,IACC,EACL,IAAI,IAAI,gCAAK,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC,YAAG,IAAI,GAAO,IACnD,CACT,CAAC;AACN,CAAC;AAED,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Label} from '../../Label';\nimport type {LabelProps} from '../../Label';\nimport type {QAProps} from '../../types';\nimport {block} from '../../utils/cn';\n\nimport {TabsContext} from './TabsContext';\n\nconst b = block('tabs-legacy');\n\ntype ExtraProps = Omit<\n    React.HTMLProps<HTMLDivElement>,\n    | 'role'\n    | 'aria-selected'\n    | 'aria-disabled'\n    | 'tabIndex'\n    | 'className'\n    | 'title'\n    | 'onClick'\n    | 'onKeyDown'\n>;\n\nexport interface TabsItemProps extends QAProps {\n    id: string;\n    className?: string;\n    title: string | React.ReactNode;\n    meta?: string;\n    hint?: string;\n    active?: boolean;\n    disabled?: boolean;\n    hasOverflow?: boolean;\n    icon?: React.ReactNode;\n    counter?: number | string;\n    label?: {\n        content: React.ReactNode;\n        theme?: LabelProps['theme'];\n    };\n    extraProps?: ExtraProps;\n    onClick(tabId: string): void;\n}\n\nexport function TabsItem({\n    id,\n    className,\n    title,\n    meta,\n    hint,\n    icon,\n    counter,\n    label,\n    active,\n    disabled,\n    hasOverflow,\n    extraProps,\n    onClick,\n    qa,\n}: TabsItemProps) {\n    const {activeTabId} = React.useContext(TabsContext);\n    const isActive = typeof active === 'boolean' ? active : activeTabId === id;\n\n    const handleClick = () => {\n        onClick(id);\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n        if (event.key === ' ') {\n            onClick(id);\n        }\n    };\n\n    const htmlTitle = React.useMemo(() => {\n        if (hint !== undefined) {\n            return hint;\n        }\n\n        if (typeof title === 'string') {\n            return title;\n        }\n\n        return undefined;\n    }, [hint, title]);\n\n    return (\n        <div\n            {...extraProps}\n            role=\"tab\"\n            aria-selected={isActive}\n            aria-disabled={disabled === true}\n            tabIndex={disabled ? -1 : 0}\n            className={b(\n                'item',\n                {active: isActive, disabled, overflow: Boolean(hasOverflow)},\n                className,\n            )}\n            title={htmlTitle}\n            onClick={handleClick}\n            onKeyDown={handleKeyDown}\n            data-qa={qa}\n        >\n            <div className={b('item-content')}>\n                {icon && <div className={b('item-icon')}>{icon}</div>}\n                <div className={b('item-title')}>{title || id}</div>\n                {counter !== undefined && <div className={b('item-counter')}>{counter}</div>}\n                {label && (\n                    <Label className={b('item-label')} theme={label.theme}>\n                        {label.content}\n                    </Label>\n                )}\n            </div>\n            {meta && <div className={b('item-meta')}>{meta}</div>}\n        </div>\n    );\n}\n\nTabsItem.displayName = 'Tabs.Item';\n"]}