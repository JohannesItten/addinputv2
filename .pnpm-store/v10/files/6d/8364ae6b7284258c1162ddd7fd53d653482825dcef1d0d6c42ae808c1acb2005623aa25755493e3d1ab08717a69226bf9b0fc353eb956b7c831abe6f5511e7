{"version":3,"file":"Label.js","sourceRoot":"../../../../src","sources":["components/Label/Label.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {CircleInfo, Xmark} from '@gravity-ui/icons';\n\nimport {ClipboardIcon} from '../ClipboardIcon';\nimport {CopyToClipboard} from '../CopyToClipboard';\nimport type {CopyToClipboardStatus} from '../CopyToClipboard';\nimport {Icon} from '../Icon';\nimport type {QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport {LabelQa} from './constants';\n\nimport './Label.scss';\n\nconst b = block('label');\n\nconst iconSizeMap: Record<NonNullable<LabelProps['size']>, number> = {\n    xs: 12,\n    s: 14,\n    m: 16,\n} as const;\n\nexport interface LabelProps extends QAProps {\n    /** Label icon (at start) */\n    icon?: React.ReactNode;\n    /** Disabled state */\n    disabled?: boolean;\n    /** Handler for click on close button */\n    onCloseClick?(event: React.MouseEvent<HTMLButtonElement>): void;\n    /** Text to copy */\n    copyText?: string;\n    /** `aria-label` of close button */\n    closeButtonLabel?: string;\n    /** `aria-label` of copy button */\n    copyButtonLabel?: string;\n    /** Handler for copy event */\n    onCopy?(text: string, result: boolean): void;\n    /** Handler for click on label itself */\n    onClick?(event: React.MouseEvent<HTMLElement>): void;\n    /** Class name */\n    className?: string;\n    /** Content */\n    children?: React.ReactNode;\n    /** Display hover */\n    interactive?: boolean;\n    /** Label value (shows as \"children : value\") */\n    value?: React.ReactNode;\n    /** Label color */\n    theme?: 'normal' | 'info' | 'danger' | 'warning' | 'success' | 'utility' | 'unknown' | 'clear';\n    /** Label type (plain, with copy text button, with close button, or with info icon) */\n    type?: 'default' | 'copy' | 'close' | 'info';\n    /** Label size */\n    size?: 'xs' | 's' | 'm';\n    /** Browser title for Label */\n    title?: string;\n    loading?: boolean;\n}\n\nexport const Label = React.forwardRef(function Label(\n    props: LabelProps,\n    ref: React.Ref<HTMLDivElement>,\n) {\n    const {\n        type = 'default',\n        theme = 'normal',\n        size = 'xs',\n        title,\n        icon,\n        children,\n        onCloseClick,\n        className,\n        disabled,\n        copyText,\n        closeButtonLabel,\n        copyButtonLabel,\n        interactive = false,\n        value,\n        onCopy,\n        onClick,\n        qa,\n        loading = false,\n    } = props;\n    const hasContent = Boolean(children !== '' && React.Children.count(children) > 0);\n\n    const typeClose = type === 'close' && hasContent;\n    const typeCopy = type === 'copy' && hasContent;\n    const typeInfo = type === 'info';\n\n    const hasOnClick = typeof onClick === 'function';\n    const hasCopy = Boolean(typeCopy && copyText);\n    const isInteractive = (hasOnClick || hasCopy || typeInfo || interactive) && !disabled;\n\n    const iconSize = iconSizeMap[size];\n\n    const startIcon = icon && (\n        <div className={b('addon', {side: hasContent ? 'start' : undefined, type: 'icon'})}>\n            {icon}\n        </div>\n    );\n    const content = hasContent && (\n        <div className={b('text')}>\n            <div className={b('content')}>{children}</div>\n            {Boolean(value) && (\n                <div className={b('value')}>\n                    <div className={b('separator')}>:</div>\n                    <div className={b('key')}>{value}</div>\n                </div>\n            )}\n        </div>\n    );\n\n    const renderLabel = (status?: CopyToClipboardStatus) => {\n        let actionButton: React.ReactNode;\n\n        if (typeCopy) {\n            actionButton = (\n                <button\n                    type=\"button\"\n                    aria-label={copyButtonLabel || undefined}\n                    onClick={hasOnClick ? onClick : undefined}\n                    disabled={disabled}\n                    className={b('addon', {\n                        side: 'end',\n                        type: 'button',\n                        action: hasOnClick ? 'click' : 'copy',\n                    })}\n                    data-qa={LabelQa.copyButton}\n                >\n                    <ClipboardIcon status={status || 'pending'} size={iconSize} />\n                </button>\n            );\n        } else if (typeInfo) {\n            actionButton = (\n                <div\n                    className={b('addon', {\n                        side: 'end',\n                        type: 'icon',\n                    })}\n                >\n                    <Icon size={iconSize} data={CircleInfo} />\n                </div>\n            );\n        } else if (typeClose) {\n            actionButton = (\n                <button\n                    type=\"button\"\n                    onClick={onCloseClick}\n                    aria-label={closeButtonLabel || undefined}\n                    disabled={disabled}\n                    className={b('addon', {\n                        side: 'end',\n                        type: 'button',\n                        action: 'close',\n                    })}\n                    data-qa={LabelQa.closeButton}\n                >\n                    <Icon size={iconSize} data={Xmark} />\n                </button>\n            );\n        }\n\n        return (\n            <div\n                ref={ref}\n                className={b(\n                    {\n                        theme,\n                        size,\n                        interactive: isInteractive,\n                        disabled,\n                    },\n                    className,\n                )}\n                title={title}\n                data-qa={qa}\n            >\n                {!disabled && loading && <div className={b('animation-container')} />}\n                {startIcon}\n                {hasOnClick ? (\n                    <button\n                        disabled={disabled}\n                        type=\"button\"\n                        onClick={onClick}\n                        className={b('main-button')}\n                        data-qa={LabelQa.mainButton}\n                    >\n                        {content}\n                    </button>\n                ) : (\n                    content\n                )}\n                {actionButton}\n            </div>\n        );\n    };\n\n    if (hasCopy && copyText && !hasOnClick) {\n        return (\n            <CopyToClipboard text={copyText} onCopy={onCopy} timeout={1000}>\n                {(status) => renderLabel(status)}\n            </CopyToClipboard>\n        );\n    }\n\n    return renderLabel();\n});\n"]}