{"version":3,"file":"findNextIndex.js","sourceRoot":"../../../../../src","sources":["components/useList/utils/findNextIndex.ts"],"names":[],"mappings":"AASA,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,iBAAiB,GAAG,EAAE,EAAqB,EAAE,EAAE;IAC7F,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;IAC/B,IAAI,YAAY,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC;IAErD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;QACrC,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAE9B,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC;YAC/B,OAAO,YAAY,CAAC;QACxB,CAAC;QACD,YAAY,GAAG,CAAC,YAAY,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC;IACnE,CAAC;IAED,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import type {ListItemId} from '../types';\n\ninterface FindNextItemsProps {\n    list: string[];\n    index: number;\n    step: number;\n    disabledItemsById?: Record<ListItemId, boolean>;\n}\n\nexport const findNextIndex = ({list, index, step, disabledItemsById = {}}: FindNextItemsProps) => {\n    const dataLength = list.length;\n    let currentIndex = (index + dataLength) % dataLength;\n\n    for (let i = 0; i < dataLength; i += 1) {\n        const id = list[currentIndex];\n\n        if (id && !disabledItemsById[id]) {\n            return currentIndex;\n        }\n        currentIndex = (currentIndex + dataLength + step) % dataLength;\n    }\n\n    return undefined;\n};\n"]}