{"version":3,"file":"useLayer.js","sourceRoot":"../../../../../src","sources":["components/utils/layer-manager/useLayer.ts"],"names":[],"mappings":";;AAYA,4BAyDC;;AArED,qDAA+B;AAE/B,oDAA4C;AAU5C,SAAgB,QAAQ,CAAC,EACrB,IAAI,EACJ,oBAAoB,EACpB,mBAAmB,EACnB,eAAe,EACf,cAAc,EACd,cAAc,EACd,OAAO,EACP,WAAW,EACX,OAAO,GAAG,IAAI,EACd,IAAI,GACK;IACT,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAc;QAC7C,oBAAoB;QACpB,mBAAmB;QACnB,eAAe;QACf,cAAc;QACd,cAAc;QACd,OAAO;QACP,WAAW;QACX,IAAI;KACP,CAAC,CAAC;IAEH,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE;YAClC,oBAAoB;YACpB,mBAAmB;YACnB,eAAe;YACf,cAAc;YACd,cAAc;YACd,OAAO;YACP,WAAW;YACX,OAAO;SACV,CAAC,CAAC;IACP,CAAC,EAAE;QACC,oBAAoB;QACpB,mBAAmB;QACnB,eAAe;QACf,cAAc;QACd,cAAc;QACd,OAAO;QACP,WAAW;QACX,OAAO;KACV,CAAC,CAAC;IAEH,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,IAAI,IAAI,IAAI,OAAO,EAAE,CAAC;YAClB,MAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC;YAC3C,2BAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAE9B,OAAO,GAAG,EAAE;gBACR,2BAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACrC,CAAC,CAAC;QACN,CAAC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;AACxB,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {layerManager} from './LayerManager';\nimport type {LayerCloseReason, LayerConfig, LayerExtendableProps} from './LayerManager';\n\nexport type {LayerCloseReason, LayerExtendableProps};\n\nexport interface LayerProps extends LayerConfig {\n    open?: boolean;\n    enabled?: boolean;\n}\n\nexport function useLayer({\n    open,\n    disableEscapeKeyDown,\n    disableOutsideClick,\n    onEscapeKeyDown,\n    onEnterKeyDown,\n    onOutsideClick,\n    onClose,\n    contentRefs,\n    enabled = true,\n    type,\n}: LayerProps) {\n    const layerConfigRef = React.useRef<LayerConfig>({\n        disableEscapeKeyDown,\n        disableOutsideClick,\n        onEscapeKeyDown,\n        onEnterKeyDown,\n        onOutsideClick,\n        onClose,\n        contentRefs,\n        type,\n    });\n\n    React.useEffect(() => {\n        Object.assign(layerConfigRef.current, {\n            disableEscapeKeyDown,\n            disableOutsideClick,\n            onEscapeKeyDown,\n            onEnterKeyDown,\n            onOutsideClick,\n            onClose,\n            contentRefs,\n            enabled,\n        });\n    }, [\n        disableEscapeKeyDown,\n        disableOutsideClick,\n        onEscapeKeyDown,\n        onEnterKeyDown,\n        onOutsideClick,\n        onClose,\n        contentRefs,\n        enabled,\n    ]);\n\n    React.useEffect(() => {\n        if (open && enabled) {\n            const layerConfig = layerConfigRef.current;\n            layerManager.add(layerConfig);\n\n            return () => {\n                layerManager.remove(layerConfig);\n            };\n        }\n\n        return undefined;\n    }, [open, enabled]);\n}\n"]}