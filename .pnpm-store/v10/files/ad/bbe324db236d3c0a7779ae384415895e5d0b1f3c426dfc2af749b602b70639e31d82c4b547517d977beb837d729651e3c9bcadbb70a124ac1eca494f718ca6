{"version":3,"file":"PaginationButton.js","sourceRoot":"../../../../../../src","sources":["components/Pagination/components/PaginationButton/PaginationButton.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAIb,OAAO,EAAC,WAAW,EAAE,YAAY,EAAE,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAE1E,OAAO,EAAC,MAAM,EAAC,iCAAwB;AACvC,OAAO,EAAC,IAAI,EAAC,+BAAsB;AACnC,OAAO,EAAC,YAAY,EAAC,2BAAwB;AAC7C,OAAO,IAAI,4BAAmB;AAa9B,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,EAC7B,IAAI,EACJ,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,QAAQ,EACR,QAAQ,EACR,OAAO,GACH,EAAE,EAAE;IACR,IAAI,MAAM,GAAoB,IAAI,CAAC;IACnC,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;IAExB,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,KAAK,OAAO;YACR,MAAM,GAAG,CACL,MAAC,MAAM,IACH,IAAI,EAAE,IAAI,EACV,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,EACpC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,EACjD,QAAQ,EAAE,QAAQ,EAClB,EAAE,EAAE,YAAY,CAAC,qBAAqB,aAEtC,KAAC,IAAI,IAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAC,IAAI,GAAG,EACrC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IACtC,CACZ,CAAC;YACF,MAAM;QACV,KAAK,UAAU;YACX,MAAM,GAAG,CACL,MAAC,MAAM,IACH,IAAI,EAAE,IAAI,EACV,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE,QAAQ,CAAC,EAC3C,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,EACpD,QAAQ,EAAE,QAAQ,EAClB,EAAE,EAAE,YAAY,CAAC,wBAAwB,aAEzC,KAAC,IAAI,IAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAC,IAAI,GAAG,EACpC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,IACzC,CACZ,CAAC;YACF,MAAM;QACV,KAAK,MAAM;YACP,MAAM,GAAG,CACL,MAAC,MAAM,IACH,IAAI,EAAE,IAAI,EACV,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE,QAAQ,CAAC,EAC3C,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,EAChD,QAAQ,EAAE,QAAQ,EAClB,EAAE,EAAE,YAAY,CAAC,oBAAoB,aAErC,KAAC,IAAI,IAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAC,IAAI,GAAG,EACrC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IACrC,CACZ,CAAC;YACF,MAAM;IACd,CAAC;IAED,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC","sourcesContent":["'use client';\n\nimport type * as React from 'react';\n\nimport {ChevronLeft, ChevronRight, ChevronsLeft} from '@gravity-ui/icons';\n\nimport {Button} from '../../../Button';\nimport {Icon} from '../../../Icon';\nimport {PaginationQa} from '../../constants';\nimport i18n from '../../i18n';\nimport type {ButtonItem, PaginationProps, PaginationSize} from '../../types';\n\ntype Props = {\n    item: ButtonItem;\n    size: PaginationSize;\n    page: NonNullable<PaginationProps['page']>;\n    pageSize: NonNullable<PaginationProps['pageSize']>;\n    onUpdate: NonNullable<PaginationProps['onUpdate']>;\n    compact: NonNullable<PaginationProps['compact']>;\n    className?: string;\n};\n\nexport const PaginationButton = ({\n    item,\n    size,\n    className,\n    page,\n    pageSize,\n    onUpdate,\n    compact,\n}: Props) => {\n    let button: React.ReactNode = null;\n    const {disabled} = item;\n\n    switch (item.action) {\n        case 'first':\n            button = (\n                <Button\n                    size={size}\n                    view=\"outlined\"\n                    className={className}\n                    onClick={() => onUpdate(1, pageSize)}\n                    title={compact ? i18n('button_first') : undefined}\n                    disabled={disabled}\n                    qa={PaginationQa.PaginationButtonFirst}\n                >\n                    <Icon data={ChevronsLeft} size=\"16\" />\n                    {compact ? undefined : i18n('button_first')}\n                </Button>\n            );\n            break;\n        case 'previous':\n            button = (\n                <Button\n                    size={size}\n                    view=\"outlined\"\n                    className={className}\n                    onClick={() => onUpdate(page - 1, pageSize)}\n                    title={compact ? i18n('button_previous') : undefined}\n                    disabled={disabled}\n                    qa={PaginationQa.PaginationButtonPrevious}\n                >\n                    <Icon data={ChevronLeft} size=\"16\" />\n                    {compact ? undefined : i18n('button_previous')}\n                </Button>\n            );\n            break;\n        case 'next':\n            button = (\n                <Button\n                    size={size}\n                    view=\"outlined\"\n                    className={className}\n                    onClick={() => onUpdate(page + 1, pageSize)}\n                    title={compact ? i18n('button_next') : undefined}\n                    disabled={disabled}\n                    qa={PaginationQa.PaginationButtonNext}\n                >\n                    <Icon data={ChevronRight} size=\"16\" />\n                    {compact ? undefined : i18n('button_next')}\n                </Button>\n            );\n            break;\n    }\n\n    return button;\n};\n"]}