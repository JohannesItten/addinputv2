{"version":3,"file":"types.js","sourceRoot":"../../../../src","sources":["components/List/types.ts"],"names":[],"mappings":"","sourcesContent":["import type * as React from 'react';\n\nimport type {DraggableProvided} from 'react-beautiful-dnd';\n\nimport type {TextInputSize} from '../controls';\nimport type {QAProps} from '../types';\n\nexport type ListSortHandleAlign = 'left' | 'right';\n\nexport type ListSortParams = {oldIndex: number; newIndex: number};\n\nexport type ListItemData<T> = T & {disabled?: boolean};\n\ntype ItemClickHandler<T> = (\n    item: ListItemData<T>,\n    index: number,\n    fromKeyboard?: boolean,\n    event?: React.MouseEvent<HTMLDivElement, MouseEvent> | React.KeyboardEvent<HTMLElement>,\n) => void;\n\nexport type ListProps<T = unknown> = QAProps & {\n    items: ListItemData<T>[];\n    className?: string;\n    itemClassName?: string;\n    itemsClassName?: string;\n    filterClassName?: string;\n    emptyPlaceholder?: React.ReactNode;\n    filterPlaceholder?: string;\n    filter?: string;\n    activeItemIndex?: number;\n    selectedItemIndex?: number | number[];\n    itemHeight?: number | ((item: ListItemData<T>, itemIndex: number) => number);\n    itemsHeight?: number | ((items: T[]) => number);\n    virtualized?: boolean;\n    filterable?: boolean;\n    sortable?: boolean;\n    deactivateOnLeave?: boolean;\n    sortHandleAlign?: ListSortHandleAlign;\n    size?: TextInputSize;\n    renderItem?: (\n        item: ListItemData<T>,\n        isItemActive: boolean,\n        itemIndex: number,\n    ) => React.ReactNode;\n    filterItem?: (filter: string) => (item: ListItemData<T>) => boolean;\n    onItemClick?: ItemClickHandler<T>;\n    onFilterUpdate?: (filter: string) => void;\n    onFilterEnd?: ({items}: {items: ListItemData<T>[]}) => void;\n    onSortEnd?: (params: ListSortParams) => void;\n    autoFocus?: boolean;\n    role?: React.AriaRole;\n    loading?: boolean;\n    onLoadMore?: () => void;\n    onChangeActive?: (index?: number) => void;\n    id?: string;\n    onScrollToItem?: (node: HTMLElement) => boolean;\n};\n\nexport type ListItemProps<T> = {\n    item: ListItemData<T>;\n    itemIndex: number;\n    active: boolean;\n    selected: boolean;\n    itemClassName?: string;\n    sortable?: boolean;\n    sortHandleAlign?: ListSortHandleAlign;\n    style?: React.CSSProperties;\n    height?: number;\n    onActivate: (index?: number) => void;\n    renderItem?: ListProps<T>['renderItem'];\n    onClick?: ListProps<T>['onItemClick'];\n    role?: React.AriaRole;\n    listId?: string;\n    provided?: DraggableProvided;\n    isDragging?: boolean;\n};\n"]}