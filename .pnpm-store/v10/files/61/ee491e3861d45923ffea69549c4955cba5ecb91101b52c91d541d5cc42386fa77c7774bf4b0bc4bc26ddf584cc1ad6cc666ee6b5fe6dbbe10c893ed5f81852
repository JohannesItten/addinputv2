import * as React from 'react';
import type { AriaLabelingProps, DOMProps, QAProps } from "../types.js";
import type { StepperSize } from "./types.js";
import "./Stepper.css";
export interface StepperProps extends DOMProps, AriaLabelingProps, QAProps {
    children: React.ReactElement | React.ReactElement[];
    value?: number | string;
    onUpdate?: (id?: number | string) => void;
    size?: StepperSize;
    separator?: React.ReactNode;
}
export declare const Stepper: {
    (props: StepperProps): import("react/jsx-runtime").JSX.Element;
    Item: React.ForwardRefExoticComponent<Omit<import("../index.js").ButtonButtonProps, "view"> & {
        id?: string | number;
        children: React.ReactNode;
        view?: import("./types.js").StepperItemView;
        disabled?: boolean;
        icon?: import("../Icon/types.js").SVGIconData;
        onClick?: (event: React.MouseEvent) => void;
        className?: string;
    } & React.RefAttributes<HTMLButtonElement>>;
    displayName: string;
};
