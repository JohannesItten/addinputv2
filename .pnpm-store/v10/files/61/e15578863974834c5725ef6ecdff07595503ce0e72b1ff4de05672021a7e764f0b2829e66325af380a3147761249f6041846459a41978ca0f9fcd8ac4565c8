{"version":3,"file":"text.js","sourceRoot":"../../../../../src","sources":["components/Text/text/text.ts"],"names":[],"mappings":";;;AAAA,0CAAqC;AAErC,sBAAqB;AAErB,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,MAAM,CAAC,CAAC;AAEX,QAAA,aAAa,GAAG;IACzB,WAAW;IACX,WAAW;IACX,WAAW;IACX,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,aAAa;IACb,aAAa;IACb,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,WAAW;IACX,QAAQ;IACR,eAAe;IACf,QAAQ;IACR,eAAe;IACf,QAAQ;IACR,eAAe;CACT,CAAC;AA8DX;;;;;;;;;;GAUG;AACI,MAAM,IAAI,GAAG,CAChB,EAAC,OAAO,GAAG,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,SAAS,EAAgB,EACnF,SAAkB,EACpB,EAAE,CACA,CAAC,CACG;IACI,OAAO;IACP,QAAQ;IACR,EAAE,EAAE,UAAU;IACd,EAAE,EAAE,SAAS;IACb,gBAAgB,EAAE,aAAa;CAClC,EACD,SAAS,CACZ,CAAC;AAbO,QAAA,IAAI,QAaX","sourcesContent":["import {block} from '../../utils/cn';\n\nimport './text.scss';\n\nconst b = block('text');\n\nexport const TEXT_VARIANTS = [\n    'display-4',\n    'display-3',\n    'display-2',\n    'display-1',\n    'header-2',\n    'header-1',\n    'subheader-3',\n    'subheader-2',\n    'subheader-1',\n    'body-3',\n    'body-2',\n    'body-1',\n    'body-short',\n    'caption-2',\n    'caption-1',\n    'code-3',\n    'code-inline-3',\n    'code-2',\n    'code-inline-2',\n    'code-1',\n    'code-inline-1',\n] as const;\n\nexport interface TextBaseProps {\n    /**\n     * Storybook: https://preview.gravity-ui.com/uikit/?path=/story/typography--variants\n     * **Note:**: below are the default variants that can be overridden in the project\n     *\n     * - body (font-family: var(--g-text-body-font-family); font-weight: 400):\n     *      - 1: font-size: 13px; line-height: 18px; (**Default variant**)\n     *      - 2: font-size: 15px; line-height: 20px;\n     *      - 3: font-size: 17px; line-height: 24px;\n     *      - short: font-size: 13px; line-height: 16px;\n     * - caption (font-family: var(--g-text-caption-font-family); font-weight: 400):\n     *      - 1: font-size: 9px; line-height: 12px;\n     *      - 2: font-size: 11px; line-height: 16px;\n     * - header (font-family: var(--g-text-header-font-family); font-weight: 600):\n     *      - 1: font-size: 20px; line-height: 24px;\n     *      - 2: font-size: 24px; line-height: 28px;\n     * - subheader (font-family: var(--g-text-subheader-font-family); font-weight: 600):\n     *      - 1: font-size: 13px; line-height: 18px;\n     *      - 2: font-size: 15px; line-height: 20px;\n     *      - 3: font-size: 17px; line-height: 24px;\n     * - display (font-family: var(--g-text-display-font-family); font-weight: 600):\n     *      - 1: font-size: 28px; line-height: 36px;\n     *      - 2: font-size: 32px; line-height: 40px;\n     *      - 3: font-size: 40px; line-height: 48px;\n     *      - 4: font-size: 48px; line-height: 52px;\n     * - code (font-family: var(--g-text-code-font-family); font-weight: 400):\n     *      - 1: font-size: 12px; line-height: 18px;\n     *      - 2: font-size: 14px; line-height: 20px;\n     *      - 3: font-size: 16px; line-height: 14px;\n     *      - inline=1: font-size: 12px; line-height: 14px;\n     *      - inline-2: font-size: 14px; line-height: 16px;\n     *      - inline-3: font-size: 16px; line-height: 20px;\n     */\n    variant?: (typeof TEXT_VARIANTS)[number] | 'inherit';\n\n    /**\n     * hidden overflow content will be displayed with ellipsis `â€¦`\n     *\n     * - white-space: nowrap;\n     * - overflow: hidden;\n     * - text-overflow: ellipsis;\n     */\n    ellipsis?: boolean;\n    /**\n     * With this prop you need to pass `-webkit-line-clamp` css property with number of cropped lines\n     *\n     * !Note: supports only modern browsers\n     * https://caniuse.com/?search=display%3A%20-webkit-box%3B\n     */\n    ellipsisLines?: boolean;\n    /**\n     * white-space css property\n     */\n    whiteSpace?: 'nowrap' | 'break-spaces';\n    /**\n     * word-break css property\n     */\n    wordBreak?: 'break-all' | 'break-word';\n}\n\n/**\n * Utility to generate text classes.\n *\n * **Hint:** Hover on props in your editor to read jsdoc\n *\n * ---\n * ```jsx\n * // \"text text_display1 some-class\"\n * text({variant: 'display-1'}, 'some-class')`\n *```\n */\nexport const text = (\n    {variant = 'body-1', ellipsis, ellipsisLines, whiteSpace, wordBreak}: TextBaseProps,\n    className?: string,\n) =>\n    b(\n        {\n            variant,\n            ellipsis,\n            ws: whiteSpace,\n            wb: wordBreak,\n            'ellipsis-lines': ellipsisLines,\n        },\n        className,\n    );\n"]}