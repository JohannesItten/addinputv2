{"version":3,"file":"ActionTooltip.js","sourceRoot":"../../../../src","sources":["components/ActionTooltip/ActionTooltip.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;AA6Bb,sCAiCC;;;AA5DD,qDAA+B;AAE/B,+CAAiC;AAEjC,iDAAmC;AAGnC,uCAAkC;AAElC,+BAA8B;AAc9B,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,gBAAgB,CAAC,CAAC;AAClC,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAC/B,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAE9B,SAAgB,aAAa,CAAC,EAC1B,KAAK,EACL,WAAW,EACX,MAAM,EACN,SAAS,GAAG,kBAAkB,EAC9B,UAAU,GAAG,mBAAmB,EAChC,SAAS,EACT,GAAG,SAAS,EACK;IACjB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CACzB,GAAG,EAAE,CAAC,CACF,wBAAC,KAAK,CAAC,QAAQ,eACX,iCAAK,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,aACxB,gCAAK,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,YAAG,KAAK,GAAO,EACxC,MAAM,IAAI,uBAAC,eAAM,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAI,IACtE,EACL,WAAW,IAAI,gCAAK,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,YAAG,WAAW,GAAO,IACxD,CACpB,EACD,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,CAAC,CAC/B,CAAC;IAEF,OAAO,CACH,uBAAC,iBAAO,OACA,SAAS;QACb,8CAA8C;QAC9C,IAAI,EAAC,OAAO,EACZ,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,GAC/B,CACL,CAAC;AACN,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Hotkey} from '../Hotkey';\nimport type {HotkeyProps} from '../Hotkey';\nimport {Tooltip} from '../Tooltip';\nimport type {TooltipProps} from '../Tooltip';\nimport type {DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport './ActionTooltip.scss';\n\nexport interface ActionTooltipProps\n    extends QAProps,\n        DOMProps,\n        Omit<TooltipProps, 'content' | 'role'> {\n    /** Floating element title */\n    title: string;\n    /** Floating element description */\n    description?: React.ReactNode;\n    /** Floating element hotkey label */\n    hotkey?: HotkeyProps['value'];\n}\n\nconst b = block('action-tooltip');\nconst DEFAULT_OPEN_DELAY = 500;\nconst DEFAULT_CLOSE_DELAY = 0;\n\nexport function ActionTooltip({\n    title,\n    description,\n    hotkey,\n    openDelay = DEFAULT_OPEN_DELAY,\n    closeDelay = DEFAULT_CLOSE_DELAY,\n    className,\n    ...restProps\n}: ActionTooltipProps) {\n    const content = React.useMemo(\n        () => (\n            <React.Fragment>\n                <div className={b('heading')}>\n                    <div className={b('title')}>{title}</div>\n                    {hotkey && <Hotkey view=\"dark\" value={hotkey} className={b('hotkey')} />}\n                </div>\n                {description && <div className={b('description')}>{description}</div>}\n            </React.Fragment>\n        ),\n        [title, description, hotkey],\n    );\n\n    return (\n        <Tooltip\n            {...restProps}\n            // eslint-disable-next-line jsx-a11y/aria-role\n            role=\"label\"\n            content={content}\n            openDelay={openDelay}\n            closeDelay={closeDelay}\n            className={b(null, className)}\n        />\n    );\n}\n"]}