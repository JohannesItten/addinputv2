{"version":3,"file":"DropdownMenuPopup.js","sourceRoot":"../../../../src","sources":["components/DropdownMenu/DropdownMenuPopup.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useListNavigation} from '../../hooks';\nimport {Menu} from '../Menu';\nimport type {MenuProps} from '../Menu';\nimport {Popup} from '../Popup';\nimport type {PopupProps} from '../Popup';\n\nimport {cnDropdownMenu} from './DropdownMenu.classname';\nimport {DropdownMenuContext} from './DropdownMenuContext';\nimport {DropdownMenuItem} from './DropdownMenuItem';\nimport {DropdownMenuNavigationContext} from './DropdownMenuNavigationContext';\nimport type {DropdownMenuListItem, DropdownMenuSize} from './types';\nimport {isSeparator} from './utils/isSeparator';\nimport {shouldSkipItemNavigation} from './utils/shouldSkipItemNavigation';\nimport {stringifyNavigationPath} from './utils/stringifyNavigationPath';\n\nexport type DropdownMenuPopupProps<T> = {\n    items: DropdownMenuListItem<T>[];\n    open: boolean;\n    anchorRef: React.RefObject<HTMLDivElement>;\n    onClose?: () => void;\n    size?: DropdownMenuSize;\n    menuProps?: MenuProps;\n    children?: React.ReactNode;\n    popupProps?: Partial<PopupProps>;\n    path?: number[];\n};\n\nexport const DropdownMenuPopup = <T,>({\n    items,\n    open,\n    anchorRef,\n    onClose,\n    size,\n    menuProps,\n    children,\n    popupProps,\n    path = [],\n}: DropdownMenuPopupProps<T>) => {\n    const {toggle, data} = React.useContext(DropdownMenuContext);\n\n    const {\n        activeMenuPath,\n        setActiveMenuPath,\n        anchorRef: navigationAnchorRef,\n    } = React.useContext(DropdownMenuNavigationContext);\n\n    const isSubmenu = path.length > 0;\n\n    const activateParent = React.useCallback(() => {\n        setActiveMenuPath(path.slice(0, path.length - 1));\n    }, [setActiveMenuPath, path]);\n\n    const handleMouseEnter = React.useCallback(() => {\n        setActiveMenuPath(path);\n    }, [path, setActiveMenuPath]);\n\n    const handleMouseLeave = React.useCallback(() => {\n        activateParent();\n    }, [activateParent]);\n\n    const handleSelect = React.useCallback(\n        (activeItem: DropdownMenuListItem<T>, event: KeyboardEvent) => {\n            if (activeItem.items && activeItem.path) {\n                setActiveMenuPath(activeItem.path);\n            } else {\n                activeItem.action?.(event, data as unknown as T);\n                toggle(false);\n            }\n        },\n        [data, setActiveMenuPath, toggle],\n    );\n\n    const handleKeydown = React.useCallback(\n        (activeItemIndex: number, event: KeyboardEvent) => {\n            switch (event.key) {\n                case 'Escape': {\n                    if (isSubmenu) {\n                        event.stopPropagation();\n                        activateParent?.();\n                    }\n\n                    return false;\n                }\n                case 'Enter':\n                case ' ': {\n                    const activeItem = items[activeItemIndex];\n                    const isSubmenuToggleActive = activeItem?.items;\n\n                    if (isSubmenu || isSubmenuToggleActive) {\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n\n                    if (activeItem) {\n                        handleSelect(activeItem, event);\n                    }\n\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        [activateParent, handleSelect, isSubmenu, items],\n    );\n\n    const isNavigationActive =\n        open && stringifyNavigationPath(path) === stringifyNavigationPath(activeMenuPath);\n\n    const {\n        activeItemIndex,\n        setActiveItemIndex,\n        reset: resetNavigation,\n    } = useListNavigation<DropdownMenuListItem<T>, HTMLDivElement>({\n        items,\n        skip: shouldSkipItemNavigation,\n        anchorRef: navigationAnchorRef,\n        onAnchorKeyDown: handleKeydown,\n        disabled: !isNavigationActive,\n        initialValue: isSubmenu ? 0 : -1,\n    });\n\n    React.useEffect(() => {\n        if (!open) {\n            resetNavigation();\n        }\n    }, [open, resetNavigation]);\n\n    return (\n        <Popup\n            open={open}\n            anchorRef={anchorRef}\n            onClose={onClose}\n            placement=\"bottom-start\"\n            {...popupProps}\n        >\n            <div\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                className={cnDropdownMenu('popup-content')}\n            >\n                {children || (\n                    <Menu className={cnDropdownMenu('menu')} size={size} {...menuProps}>\n                        {items.map((item, index) => {\n                            const isActive = isNavigationActive && activeItemIndex === index;\n                            const activate = () => setActiveItemIndex(index);\n\n                            const isActiveParent =\n                                open &&\n                                !isActive &&\n                                activeMenuPath.length !== 0 &&\n                                stringifyNavigationPath(item.path) ===\n                                    stringifyNavigationPath(\n                                        activeMenuPath.slice(0, item.path.length),\n                                    );\n\n                            const extraProps = {\n                                ...item.extraProps,\n                                onMouseEnter: activate,\n                            };\n\n                            return (\n                                <DropdownMenuItem\n                                    key={index}\n                                    size={size}\n                                    className={cnDropdownMenu(\n                                        'menu-item',\n                                        {\n                                            separator: isSeparator(item),\n                                            'active-parent': isActiveParent,\n                                            'with-submenu': Boolean(item.items?.length),\n                                        },\n                                        item.className,\n                                    )}\n                                    selected={isActive}\n                                    popupProps={popupProps}\n                                    closeMenu={onClose}\n                                    {...item}\n                                    extraProps={extraProps}\n                                />\n                            );\n                        })}\n                    </Menu>\n                )}\n            </div>\n        </Popup>\n    );\n};\n"]}