{"version":3,"file":"Popup.js","sourceRoot":"../../../../src","sources":["components/Popup/Popup.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {\n    FloatingFocusManager,\n    FloatingNode,\n    FloatingTree,\n    arrow,\n    autoUpdate,\n    offset as floatingOffset,\n    limitShift,\n    shift,\n    useDismiss,\n    useFloating,\n    useFloatingNodeId,\n    useFloatingParentNodeId,\n    useInteractions,\n    useRole,\n} from '@floating-ui/react';\nimport type {\n    ElementProps,\n    FloatingFocusManagerProps,\n    FloatingRootContext,\n    Middleware,\n    OpenChangeReason,\n    ReferenceType,\n    Strategy,\n    UseFloatingOptions,\n    UseRoleProps,\n} from '@floating-ui/react';\n\nimport {useForkRef} from '../../hooks';\nimport {useFloatingTransition} from '../../hooks/private/useFloatingTransition';\nimport {Portal} from '../Portal';\nimport type {PortalProps} from '../Portal';\nimport type {AriaLabelingProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\nimport {useLayer} from '../utils/layer-manager';\n\nimport {PopupArrow} from './PopupArrow';\nimport {OVERFLOW_PADDING, TRANSITION_DURATION} from './constants';\nimport i18n from './i18n';\nimport type {PopupAnchorElement, PopupAnchorRef, PopupOffset, PopupPlacement} from './types';\nimport {arrowStylesMiddleware, getOffsetOptions, getPlacementOptions} from './utils';\n\nimport './Popup.scss';\n\nexport type PopupCloseReason = 'outsideClick' | 'escapeKeyDown' | string | undefined;\n\nexport interface PopupProps\n    extends Pick<PortalProps, 'container' | 'disablePortal'>,\n        DOMProps,\n        AriaLabelingProps,\n        QAProps {\n    children?: React.ReactNode;\n    /** Manages `Popup` visibility */\n    open?: boolean;\n    /** Callback for open state changes, when dismiss happens for example */\n    onOpenChange?: (open: boolean, event?: Event, reason?: OpenChangeReason) => void;\n    /** `Popup` will not be removed from the DOM upon hiding */\n    keepMounted?: boolean;\n    /** Render an arrow pointing to the anchor */\n    hasArrow?: boolean;\n    /** Floating UI strategy */\n    strategy?: Strategy;\n    /** floating element placement */\n    placement?: PopupPlacement;\n    /** floating element offset relative to anchor */\n    offset?: PopupOffset;\n    /** floating element anchor */\n    anchorElement?: PopupAnchorElement | null;\n    /**\n     * floating element anchor ref object\n     * @deprecated Use `anchorElement` instead\n     */\n    anchorRef?: PopupAnchorRef;\n    /** Floating UI middlewares. If set, they will completely overwrite the default middlewares. */\n    floatingMiddlewares?: Middleware[];\n    /** Floating UI context to provide interactions */\n    floatingContext?: FloatingRootContext<ReferenceType>;\n    /** Additional floating element props to provide interactions */\n    floatingInteractions?: ElementProps[];\n    /** React ref floating element is attached to */\n    floatingRef?: React.Ref<HTMLDivElement>;\n    /** Styles to apply to the `Floating UI` element */\n    floatingStyles?: React.CSSProperties;\n    /** Additional class to apply to the `Floating UI` element */\n    floatingClassName?: string;\n    /** If true `Popup` act like a modal dialog */\n    modal?: boolean;\n    /** The initial element to be focused */\n    initialFocus?: FloatingFocusManagerProps['initialFocus'];\n    /** Element which focus should be returned to */\n    returnFocus?: FloatingFocusManagerProps['returnFocus'];\n    /** The order in which focus circle */\n    focusOrder?: FloatingFocusManagerProps['order'];\n    /** Do not add a11y dismiss buttons when managing focus in modal */\n    disableVisuallyHiddenDismiss?: boolean;\n    /**\n     * This callback will be called when Escape key pressed on keyboard, or click outside was made\n     * This behaviour could be disabled with `disableEscapeKeyDown`\n     * and `disableOutsideClick` options\n     * @deprecated Use `onOpenChange` instead\n     */\n    onClose?: (event: MouseEvent | KeyboardEvent, reason: PopupCloseReason) => void;\n    /**\n     * This callback will be called when Escape key pressed on keyboard\n     * This behaviour could be disabled with `disableEscapeKeyDown` option\n     * @deprecated Use `onOpenChange` instead\n     */\n    onEscapeKeyDown?: (event: KeyboardEvent) => void;\n    /**\n     * This callback will be called when click is outside of elements of \"top layer\"\n     * This behaviour could be disabled with `disableOutsideClick` option\n     * @deprecated Use `onOpenChange` instead\n     */\n    onOutsideClick?: (event: MouseEvent) => void;\n    /** Do not dismiss on escape key press */\n    disableEscapeKeyDown?: boolean;\n    /** Do not dismiss on outside click */\n    disableOutsideClick?: boolean;\n    /** Do not dismiss on focusout */\n    disableFocusOut?: boolean;\n    /**\n     * Do not use as layer\n     */\n    disableLayer?: boolean;\n    /** Disables animation of popup appearing/disappearing */\n    disableTransition?: boolean;\n    /** ARIA role or special component role (select, combobox) */\n    role?: UseRoleProps['role'];\n    /** HTML `id` attribute */\n    id?: string;\n    /** CSS property `z-index` */\n    zIndex?: number;\n    /** Callback called when `Popup` is opened and \"in\" transition is started */\n    onTransitionIn?: () => void;\n    /** Callback called when `Popup` is opened and \"in\" transition is completed */\n    onTransitionInComplete?: () => void;\n    /** Callback called when `Popup` is closed and \"out\" transition is started */\n    onTransitionOut?: () => void;\n    /** Callback called when `Popup` is closed and \"out\" transition is completed */\n    onTransitionOutComplete?: () => void;\n}\n\nconst b = block('popup');\n\nfunction PopupComponent({\n    keepMounted = false,\n    hasArrow = false,\n    open = false,\n    onOpenChange,\n    strategy,\n    placement: placementProp,\n    offset: offsetProp = 4,\n    anchorElement,\n    anchorRef,\n    floatingMiddlewares,\n    floatingContext,\n    floatingInteractions,\n    floatingRef,\n    floatingStyles: floatingStylesProp,\n    floatingClassName,\n    modal = false,\n    initialFocus: initialFocusProp,\n    returnFocus = true,\n    focusOrder,\n    disableVisuallyHiddenDismiss = !modal,\n    onClose,\n    onEscapeKeyDown,\n    onOutsideClick,\n    disableEscapeKeyDown = false,\n    disableOutsideClick = false,\n    disableFocusOut = false,\n    style,\n    className,\n    children,\n    container,\n    disablePortal = false,\n    disableLayer = false,\n    disableTransition = false,\n    qa,\n    role: roleProp,\n    zIndex = 1000,\n    onTransitionIn,\n    onTransitionOut,\n    onTransitionInComplete,\n    onTransitionOutComplete,\n    ...restProps\n}: PopupProps) {\n    useLayer({open, type: 'popup', enabled: !disableLayer});\n\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const [arrowElement, setArrowElement] = React.useState<HTMLElement | null>(null);\n\n    const {offset} = getOffsetOptions(offsetProp, hasArrow);\n    const {placement, middleware: placementMiddleware} = getPlacementOptions(\n        placementProp,\n        disablePortal,\n    );\n\n    const handleOpenChange = React.useCallback<NonNullable<UseFloatingOptions['onOpenChange']>>(\n        (isOpen, event, reason) => {\n            onOpenChange?.(isOpen, event, reason);\n\n            if (isOpen || !event) {\n                return;\n            }\n\n            let closeReason;\n            if (reason === 'escape-key') {\n                closeReason = 'escapeKeyDown';\n            } else if (reason === 'outside-press') {\n                closeReason = 'outsideClick';\n            } else {\n                closeReason = reason;\n            }\n\n            if (closeReason === 'escapeKeyDown' && onEscapeKeyDown) {\n                onEscapeKeyDown(event as KeyboardEvent);\n            }\n\n            if (closeReason === 'outsideClick' && onOutsideClick) {\n                onOutsideClick(event as MouseEvent);\n            }\n\n            onClose?.(event as KeyboardEvent | MouseEvent, closeReason);\n        },\n        [onOpenChange, onClose, onEscapeKeyDown, onOutsideClick],\n    );\n\n    const floatingNodeId = useFloatingNodeId();\n\n    const {\n        refs,\n        elements,\n        floatingStyles,\n        placement: finalPlacement,\n        middlewareData,\n        context,\n        update,\n        isPositioned,\n    } = useFloating({\n        rootContext: floatingContext,\n        nodeId: floatingNodeId,\n        strategy,\n        placement: placement,\n        open,\n        onOpenChange: handleOpenChange,\n        middleware: floatingMiddlewares ?? [\n            floatingOffset(offset),\n            shift({\n                padding: OVERFLOW_PADDING,\n                // Offset 22 is size of the arrow (18) + padding (4)\n                limiter: limitShift({offset: 4 + (hasArrow ? 18 : 0)}),\n                altBoundary: disablePortal,\n            }),\n            placementMiddleware,\n            hasArrow && arrow({element: arrowElement, padding: 4}),\n            hasArrow && arrowStylesMiddleware(),\n        ],\n    });\n\n    React.useEffect(() => {\n        const element = anchorElement === undefined ? anchorRef?.current : anchorElement;\n        if (element !== undefined && element !== refs.reference.current) {\n            refs.setReference(element);\n        }\n    }, [anchorElement, anchorRef, refs]);\n\n    const role = useRole(context, {\n        enabled: Boolean(roleProp || modal),\n        role: roleProp ?? (modal ? 'dialog' : undefined),\n    });\n    const dismiss = useDismiss(context, {\n        enabled: !disableOutsideClick || !disableEscapeKeyDown,\n        outsidePress: !disableOutsideClick,\n        escapeKey: !disableEscapeKeyDown,\n    });\n\n    const {getFloatingProps} = useInteractions(floatingInteractions ?? [role, dismiss]);\n\n    const {isMounted, status} = useFloatingTransition({\n        context,\n        duration: disableTransition ? 0 : TRANSITION_DURATION,\n        onTransitionIn,\n        onTransitionInComplete,\n        onTransitionOut,\n        onTransitionOutComplete,\n    });\n\n    React.useEffect(() => {\n        if (isMounted && elements.reference && elements.floating) {\n            return autoUpdate(elements.reference, elements.floating, update);\n        }\n        return undefined;\n    }, [isMounted, elements, update]);\n\n    const handleFloatingRef = useForkRef<HTMLDivElement>(refs.setFloating, floatingRef);\n\n    let initialFocus = initialFocusProp;\n    if (typeof initialFocus === 'undefined') {\n        if (modal) {\n            initialFocus = refs.floating;\n        } else {\n            initialFocus = -1;\n        }\n    }\n\n    return (\n        <FloatingNode id={floatingNodeId}>\n            {isMounted || keepMounted ? (\n                <Portal container={container} disablePortal={disablePortal}>\n                    <FloatingFocusManager\n                        context={context}\n                        disabled={!isPositioned}\n                        modal={modal}\n                        initialFocus={initialFocus}\n                        returnFocus={returnFocus}\n                        closeOnFocusOut={!disableFocusOut}\n                        visuallyHiddenDismiss={disableVisuallyHiddenDismiss ? false : i18n('close')}\n                        guards={modal || !disablePortal}\n                        order={focusOrder}\n                    >\n                        <div\n                            ref={handleFloatingRef}\n                            className={floatingClassName}\n                            style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                zIndex,\n                                width: 'max-content',\n                                pointerEvents: isMounted ? 'auto' : 'none',\n                                outline: 'none',\n                                ...floatingStyles,\n                                ...floatingStylesProp,\n                            }}\n                            data-floating-ui-placement={finalPlacement}\n                            data-floating-ui-status={status}\n                            aria-modal={modal && isMounted ? true : undefined}\n                            {...getFloatingProps()}\n                        >\n                            <div\n                                ref={contentRef}\n                                className={b(\n                                    {\n                                        open: isMounted,\n                                        'disable-transition': disableTransition,\n                                    },\n                                    className,\n                                )}\n                                style={style}\n                                data-qa={qa}\n                                {...filterDOMProps(restProps)}\n                            >\n                                {hasArrow && (\n                                    <PopupArrow\n                                        ref={setArrowElement}\n                                        styles={middlewareData.arrowStyles}\n                                    />\n                                )}\n                                {children}\n                            </div>\n                        </div>\n                    </FloatingFocusManager>\n                </Portal>\n            ) : null}\n        </FloatingNode>\n    );\n}\n\nexport function Popup(props: PopupProps) {\n    const parentId = useFloatingParentNodeId();\n\n    if (parentId === null) {\n        return (\n            <FloatingTree>\n                <PopupComponent {...props} />\n            </FloatingTree>\n        );\n    }\n\n    return <PopupComponent {...props} />;\n}\n"]}