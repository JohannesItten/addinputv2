{"version":3,"file":"DesktopActionsMenu.js","sourceRoot":"../../../../../../src","sources":["components/FilePreview/FilePreviewActions/DesktopActionsMenu/DesktopActionsMenu.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAC,SAAS,EAAC,6CAAoC;AACtD,OAAO,EAAC,aAAa,EAAC,wCAA+B;AACrD,OAAO,EAAC,MAAM,EAAC,iCAAwB;AAEvC,OAAO,EAAC,KAAK,EAAC,6BAA0B;AAGxC,kCAAmC;AAEnC,MAAM,EAAE,GAAG,KAAK,CAAC,8BAA8B,CAAC,CAAC;AAOjD,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,EAAC,OAAO,EAAE,uBAAuB,EAA0B,EAAE,EAAE;IAC9F,MAAM,EAAE,GAAG,SAAS,EAAE,CAAC;IAEvB,OAAO,CACH,cAAK,SAAS,EAAE,EAAE,CAAC,IAAI,EAAE,uBAAuB,CAAC,YAC5C,OAAO,CAAC,GAAG,CAAC,CAAC,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,GAAG,KAAK,EAAC,EAAE,KAAK,EAAE,EAAE;YAClF,MAAM,UAAU,GAAoD,KAAK,CAAC,IAAI;gBAC1E,CAAC,CAAC,EAAC,GAAI,KAAK,CAAC,UAA8B,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAC;gBAC9D,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;YACvB,OAAO,CACH,KAAC,aAAa,IAAwB,KAAK,EAAE,KAAK,KAAM,iBAAiB,YACrE,KAAC,MAAM,IACH,OAAO,EAAE,OAAO,sBACE,GAAG,EAAE,IAAI,KAAK,EAAE,EAClC,IAAI,EAAC,QAAQ,EACb,GAAG,EAAC,eAAe,EACnB,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAC,GAAG,EACR,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,gBAClB,KAAK,KACb,UAAU,YAEd,cAAK,SAAS,EAAE,EAAE,CAAC,qBAAqB,CAAC,YAAG,IAAI,GAAO,GAClD,IAbO,GAAG,EAAE,IAAI,KAAK,EAAE,CAcpB,CACnB,CAAC;QACN,CAAC,CAAC,GACA,CACT,CAAC;AACN,CAAC,CAAC","sourcesContent":["import {useUniqId} from '../../../../hooks/useUniqId';\nimport {ActionTooltip} from '../../../ActionTooltip';\nimport {Button} from '../../../Button';\nimport type {ButtonButtonProps, ButtonLinkProps} from '../../../Button';\nimport {block} from '../../../utils/cn';\nimport type {FilePreviewAction} from '../../types';\n\nimport './DesktopActionsMenu.scss';\n\nconst cn = block('file-preview-actions-desktop');\n\nexport interface DesktopActionsMenuProps {\n    actions: FilePreviewAction[];\n    hoverabelPanelClassName: string;\n}\n\nexport const DesktopActionsMenu = ({actions, hoverabelPanelClassName}: DesktopActionsMenuProps) => {\n    const id = useUniqId();\n\n    return (\n        <div className={cn(null, hoverabelPanelClassName)}>\n            {actions.map(({title, icon, onClick, disabled, tooltipExtraProps, ...props}, index) => {\n                const extraProps: ButtonLinkProps | ButtonButtonProps | undefined = props.href\n                    ? {...(props.extraProps as ButtonLinkProps), href: props.href}\n                    : props.extraProps;\n                return (\n                    <ActionTooltip key={`${id}-${index}`} title={title} {...tooltipExtraProps}>\n                        <Button\n                            onClick={onClick}\n                            aria-describedby={`${id}-${index}`}\n                            view=\"raised\"\n                            pin=\"circle-circle\"\n                            disabled={disabled}\n                            size=\"s\"\n                            className={cn('action-button')}\n                            aria-label={title}\n                            {...extraProps}\n                        >\n                            <div className={cn('action-icon-wrapper')}>{icon}</div>\n                        </Button>\n                    </ActionTooltip>\n                );\n            })}\n        </div>\n    );\n};\n"]}