{"version":3,"file":"useStateWithCallback.js","sourceRoot":"../../../../../src","sources":["hooks/private/useStateWithCallback/useStateWithCallback.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,UAAU,EAAC,kDAA+C;AAElE,MAAM,UAAU,oBAAoB,CAChC,YAAe,EACf,QAA6B;IAE7B,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAEvD,MAAM,eAAe,GAAG,KAAK,CAAC,WAAW,CACrC,CAAC,SAAgC,EAAE,EAAE;QACjC,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACxB,QAAQ,CAAC,CAAC,aAAgB,EAAE,EAAE;gBAC1B,MAAM,QAAQ,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;gBAC1C,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;gBACrB,OAAO,QAAQ,CAAC;YACpB,CAAC,CAAC,CAAC;QACP,CAAC;aAAM,CAAC;YACJ,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC;YACtB,QAAQ,CAAC,SAAS,CAAC,CAAC;QACxB,CAAC;IACL,CAAC,EACD,CAAC,QAAQ,CAAC,CACb,CAAC;IAEF,OAAO,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;AACpC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {isFunction} from '../../../components/utils/typeCheckers';\n\nexport function useStateWithCallback<T>(\n    initialValue: T,\n    callback?: (value: T) => void,\n): [T, (nextValue: T | ((prevValue: T) => T)) => void] {\n    const [state, setState] = React.useState(initialValue);\n\n    const setWithCallback = React.useCallback(\n        (nextValue: T | ((value: T) => T)) => {\n            if (isFunction(nextValue)) {\n                setState((previousState: T) => {\n                    const newState = nextValue(previousState);\n                    callback?.(newState);\n                    return newState;\n                });\n            } else {\n                callback?.(nextValue);\n                setState(nextValue);\n            }\n        },\n        [callback],\n    );\n\n    return [state, setWithCallback];\n}\n"]}