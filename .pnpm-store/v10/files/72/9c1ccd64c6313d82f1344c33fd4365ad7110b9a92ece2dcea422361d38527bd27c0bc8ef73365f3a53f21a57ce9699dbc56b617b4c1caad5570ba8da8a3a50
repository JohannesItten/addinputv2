{"version":3,"file":"FilePreviewActions.js","sourceRoot":"../../../../../src","sources":["components/FilePreview/FilePreviewActions/FilePreviewActions.tsx"],"names":[],"mappings":";;;;AAAA,kDAAuC;AAGvC,mFAA2E;AAC3E,gFAAwE;AASjE,MAAM,kBAAkB,GAAG,CAAC,EAC/B,OAAO,EACP,QAAQ,EACR,uBAAuB,EACvB,aAAa,GACS,EAAE,EAAE;IAC1B,MAAM,MAAM,GAAG,IAAA,kBAAS,GAAE,CAAC;IAE3B,IAAI,MAAM,EAAE,CAAC;QACT,OAAO,CACH,uBAAC,qCAAiB,IACd,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,aAAa,EAAE,aAAa,GAC9B,CACL,CAAC;IACN,CAAC;IAED,OAAO,CACH,uBAAC,uCAAkB,IAAC,OAAO,EAAE,OAAO,EAAE,uBAAuB,EAAE,uBAAuB,GAAI,CAC7F,CAAC;AACN,CAAC,CAAC;AArBW,QAAA,kBAAkB,sBAqB7B","sourcesContent":["import {useMobile} from '../../mobile';\nimport type {FilePreviewAction} from '../types';\n\nimport {DesktopActionsMenu} from './DesktopActionsMenu/DesktopActionsMenu';\nimport {MobileActionsMenu} from './MobileActionsMenu/MobileActionsMenu';\n\nexport interface FilePreviewActionsProps {\n    hoverabelPanelClassName: string;\n    fileName: string;\n    isCustomImage?: boolean;\n    actions: FilePreviewAction[];\n}\n\nexport const FilePreviewActions = ({\n    actions,\n    fileName,\n    hoverabelPanelClassName,\n    isCustomImage,\n}: FilePreviewActionsProps) => {\n    const mobile = useMobile();\n\n    if (mobile) {\n        return (\n            <MobileActionsMenu\n                actions={actions}\n                fileName={fileName}\n                isCustomImage={isCustomImage}\n            />\n        );\n    }\n\n    return (\n        <DesktopActionsMenu actions={actions} hoverabelPanelClassName={hoverabelPanelClassName} />\n    );\n};\n"]}