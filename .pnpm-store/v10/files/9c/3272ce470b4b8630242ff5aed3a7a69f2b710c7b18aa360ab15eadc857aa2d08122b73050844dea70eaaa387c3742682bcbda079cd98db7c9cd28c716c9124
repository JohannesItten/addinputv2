{"version":3,"file":"isOfType.js","sourceRoot":"../../../../src","sources":["components/utils/isOfType.ts"],"names":[],"mappings":";;AAEA,4BAoBC;;AAtBD,qDAA+B;AAE/B,SAAgB,QAAQ,CAAS,SAA0C;IACvE,OAAO,SAAS,UAAU,CACtB,SAAkB;QAElB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC;YACnC,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,MAAM,EAAC,IAAI,EAAC,GAAG,SAAS,CAAC;QACzB,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACrB,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC5D,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,MAAM,WAAW,GAAI,IAA4B,CAAC,WAAW,CAAC;QAC9D,OAAO,OAAO,CAAC,WAAW,IAAI,WAAW,KAAK,SAAS,CAAC,WAAW,CAAC,CAAC;IACzE,CAAC,CAAC;AACN,CAAC","sourcesContent":["import * as React from 'react';\n\nexport function isOfType<P = {}>(Component: React.ComponentType<P> | string) {\n    return function isMatching(\n        component: unknown,\n    ): component is React.ReactElement<P, typeof Component> {\n        if (!React.isValidElement(component)) {\n            return false;\n        }\n\n        const {type} = component;\n        if (type === Component) {\n            return true;\n        }\n\n        if (typeof Component === 'string' || typeof type === 'string') {\n            return false;\n        }\n\n        const displayName = (type as React.ComponentType).displayName;\n        return Boolean(displayName && displayName === Component.displayName);\n    };\n}\n"]}