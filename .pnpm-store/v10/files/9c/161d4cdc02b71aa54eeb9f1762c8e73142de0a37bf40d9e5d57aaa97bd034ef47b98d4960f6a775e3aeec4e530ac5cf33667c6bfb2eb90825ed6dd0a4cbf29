{"version":3,"file":"Tooltip.js","sourceRoot":"../../../../src","sources":["components/Tooltip/Tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {\n    autoUpdate,\n    limitShift,\n    offset,\n    shift,\n    useDismiss,\n    useFloating,\n    useFocus,\n    useHover,\n    useInteractions,\n    useRole,\n} from '@floating-ui/react';\nimport type {OpenChangeReason, Strategy} from '@floating-ui/react';\n\nimport {useControlledState, useForkRef} from '../../hooks';\nimport type {PopupOffset, PopupPlacement} from '../Popup';\nimport {OVERFLOW_PADDING} from '../Popup/constants';\nimport {getPlacementOptions} from '../Popup/utils';\nimport {Portal} from '../Portal';\nimport type {PortalProps} from '../Portal';\nimport type {AriaLabelingProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\nimport {getElementRef} from '../utils/getElementRef';\n\nimport './Tooltip.scss';\n\nexport interface TooltipProps\n    extends Pick<PortalProps, 'container' | 'disablePortal'>,\n        AriaLabelingProps,\n        QAProps,\n        DOMProps {\n    /** Anchor node */\n    children:\n        | ((props: Record<string, unknown>, ref: React.Ref<HTMLElement>) => React.ReactElement)\n        | React.ReactElement;\n    /** Controls open state */\n    open?: boolean;\n    /** Callback for open state changes, when dismiss happens for example */\n    onOpenChange?: (open: boolean, event?: Event, reason?: OpenChangeReason) => void;\n    /** Floating UI strategy */\n    strategy?: Strategy;\n    /** Floating element placement */\n    placement?: PopupPlacement;\n    /** Floating element offset relative to anchor */\n    offset?: PopupOffset;\n    /** Disabled state */\n    disabled?: boolean;\n    /** Floating element content */\n    content?: React.ReactNode;\n    /** Event that should trigger opening */\n    trigger?: 'focus';\n    /** Role applied to the floating element */\n    role?: 'tooltip' | 'label';\n    /** Delay in ms before open */\n    openDelay?: number;\n    /** Delay in ms before close */\n    closeDelay?: number;\n}\n\nconst b = block('tooltip');\nconst DEFAULT_OPEN_DELAY = 1000;\nconst DEFAULT_CLOSE_DELAY = 0;\nconst DEFAULT_PLACEMENT: PopupPlacement = 'bottom';\nconst DEFAULT_OFFSET = 4;\n\nexport function Tooltip({\n    children,\n    open,\n    onOpenChange,\n    strategy,\n    placement: placementProp = DEFAULT_PLACEMENT,\n    offset: offsetProp = DEFAULT_OFFSET,\n    disabled,\n    content,\n    trigger,\n    role: roleProp = 'tooltip',\n    openDelay = DEFAULT_OPEN_DELAY,\n    closeDelay = DEFAULT_CLOSE_DELAY,\n    container,\n    disablePortal,\n    className,\n    style,\n    qa,\n    ...restProps\n}: TooltipProps) {\n    const [anchorElement, setAnchorElement] = React.useState<HTMLElement | null>(null);\n    const {placement, middleware: placementMiddleware} = getPlacementOptions(placementProp, false);\n\n    const [isOpen, setIsOpen] = useControlledState(open, false, onOpenChange);\n\n    const {refs, floatingStyles, context} = useFloating({\n        open: isOpen,\n        onOpenChange: setIsOpen,\n        strategy,\n        placement,\n        middleware: [\n            offset(offsetProp),\n            shift({\n                padding: OVERFLOW_PADDING,\n                limiter: limitShift(),\n            }),\n            placementMiddleware,\n        ],\n        whileElementsMounted: autoUpdate,\n        elements: {\n            reference: anchorElement,\n        },\n    });\n\n    const hover = useHover(context, {\n        enabled: trigger !== 'focus',\n        delay: {open: openDelay, close: closeDelay},\n        move: false,\n    });\n    const focus = useFocus(context);\n    const role = useRole(context, {\n        role: roleProp,\n    });\n    const dismiss = useDismiss(context, {\n        outsidePress: false,\n        ancestorScroll: true,\n    });\n\n    const {getReferenceProps, getFloatingProps} = useInteractions([hover, focus, role, dismiss]);\n\n    const anchorRef = useForkRef(\n        setAnchorElement,\n        React.isValidElement(children) ? getElementRef(children) : undefined,\n    );\n    const anchorProps = React.isValidElement<any>(children)\n        ? getReferenceProps(children.props)\n        : getReferenceProps();\n    const anchorNode = React.isValidElement<any>(children)\n        ? React.cloneElement(children, {\n              ...anchorProps,\n              ref: anchorRef,\n          })\n        : children(anchorProps, anchorRef);\n\n    return (\n        <React.Fragment>\n            {anchorNode}\n            {isOpen && !disabled ? (\n                <Portal container={container} disablePortal={disablePortal}>\n                    <div\n                        ref={refs.setFloating}\n                        style={{\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            zIndex: 10000,\n                            width: 'max-content',\n                            ...floatingStyles,\n                        }}\n                        {...getFloatingProps()}\n                    >\n                        <div\n                            className={b(null, className)}\n                            style={style}\n                            data-qa={qa}\n                            {...filterDOMProps(restProps, {labelable: true})}\n                        >\n                            {content}\n                        </div>\n                    </div>\n                </Portal>\n            ) : null}\n        </React.Fragment>\n    );\n}\n"]}