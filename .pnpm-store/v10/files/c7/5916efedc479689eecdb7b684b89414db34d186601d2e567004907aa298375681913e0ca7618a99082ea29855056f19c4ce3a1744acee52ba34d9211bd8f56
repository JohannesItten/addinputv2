{"version":3,"file":"TableColumnSetup.js","sourceRoot":"../../../../src","sources":["components/TableColumnSetup/TableColumnSetup.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport type * as React from 'react';\n\nimport {Gear} from '@gravity-ui/icons';\n\nimport {Button} from '../Button';\nimport {Icon} from '../Icon';\nimport type {PopupPlacement} from '../Popup';\nimport type {TableColumnConfig} from '../Table/Table';\nimport type {TableColumnSetupItem as NewTableColumnSetupItem} from '../Table/hoc/withTableSettings/TableColumnSetup/TableColumnSetup';\nimport {TableColumnSetup as NewTableColumnSetup} from '../Table/hoc/withTableSettings/TableColumnSetup/TableColumnSetup';\nimport type {TableSetting} from '../Table/hoc/withTableSettings/withTableSettings';\nimport {block} from '../utils/cn';\n\nimport i18n from './i18n';\n\nimport './TableColumnSetup.scss';\n\nconst b = block('table-column-setup');\n\nexport interface TableColumnSetupItem {\n    id: string;\n    title: React.ReactNode;\n    selected?: boolean;\n    required?: boolean;\n    sticky?: TableColumnConfig<unknown>['sticky'];\n}\n\ntype Item = TableColumnSetupItem;\n\ninterface SwitcherProps {\n    onKeyDown: React.KeyboardEventHandler<HTMLElement>;\n    onClick: React.MouseEventHandler<HTMLElement>;\n}\n\nexport interface TableColumnSetupProps {\n    // for Button\n    disabled?: boolean;\n    /**\n     * @deprecated Use renderSwitcher instead\n     */\n    switcher?: React.ReactElement | undefined;\n    renderSwitcher?: (props: SwitcherProps) => React.ReactElement | undefined;\n\n    items: Item[];\n    sortable?: boolean;\n\n    onUpdate: (updated: Item[]) => void;\n    popupWidth?: number | 'fit' | undefined;\n    popupPlacement?: PopupPlacement;\n    getItemTitle?: (item: Item) => TableColumnSetupItem['title'];\n    showStatus?: boolean;\n    className?: string;\n}\n\nexport const TableColumnSetup = (props: TableColumnSetupProps) => {\n    const {\n        switcher,\n        renderSwitcher: renderSwitcherProps,\n        disabled,\n        popupWidth,\n        popupPlacement,\n        className,\n        items: propsItems,\n        sortable = true,\n        showStatus,\n        onUpdate: propsOnUpdate,\n    } = props;\n\n    const renderStatus = () => {\n        if (!showStatus) {\n            return null;\n        }\n\n        const selected = propsItems.reduce((acc, cur) => (cur.selected ? acc + 1 : acc), 0);\n        const all = propsItems.length;\n        const status = `${selected}/${all}`;\n\n        return <span className={b('status')}>{status}</span>;\n    };\n\n    const renderSwitcher = (switcherProps: SwitcherProps) => {\n        return (\n            renderSwitcherProps?.(switcherProps) ||\n            switcher || (\n                <Button disabled={disabled} onClick={switcherProps.onClick}>\n                    <Icon data={Gear} />\n                    {i18n('button_switcher')}\n                    {renderStatus()}\n                </Button>\n            )\n        );\n    };\n\n    const items = propsItems.map<NewTableColumnSetupItem>(\n        ({id, title, required, selected, sticky}) => ({\n            id,\n            title,\n            isRequired: required,\n            isSelected: selected,\n            sticky,\n        }),\n    );\n\n    const onUpdate = (newSettings: TableSetting[]) => {\n        propsOnUpdate(\n            newSettings.map(({id, isSelected}) => {\n                const prevItem = propsItems.find((item) => item.id === id);\n\n                return {\n                    id,\n                    selected: isSelected,\n                    title: prevItem?.title,\n                    required: prevItem?.required,\n                };\n            }),\n        );\n    };\n\n    return (\n        <NewTableColumnSetup\n            items={items}\n            onUpdate={onUpdate}\n            popupPlacement={popupPlacement}\n            popupWidth={popupWidth}\n            renderSwitcher={renderSwitcher}\n            sortable={sortable}\n            className={b(null, className)}\n        />\n    );\n};\n"]}