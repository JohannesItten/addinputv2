{"version":3,"file":"AvatarStack.js","sourceRoot":"../../../../src","sources":["components/AvatarStack/AvatarStack.tsx"],"names":[],"mappings":";;;;;AAAA,qDAA+B;AAE/B,uCAAkC;AAElC,0DAAkD;AAClD,0DAAkD;AAClD,sEAA8D;AAC9D,8CAAqD;AAGrD,6BAA4B;AAE5B,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,cAAc,CAAC,CAAC;AAEhC,MAAM,oBAAoB,GAAG,KAAK,CAAC,UAAU,CACzC,CACI,EACI,GAAG,GAAG,oCAAwB,EAC9B,KAAK,EACL,WAAW,GAAG,GAAG,EACjB,IAAI,EACJ,QAAQ,EACR,SAAS,EACT,UAAU,GACb,EACD,GAAG,EACL,EAAE;IACA,MAAM,YAAY,GAAyB,EAAE,CAAC;IAE9C,yBAAyB;IACzB,MAAM,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAEtF,kFAAkF;IAClF,IAAI,aAAa,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACtC,yDAAyD;IACzD,aAAa,GAAG,eAAe,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC;IAEtF,wBAAwB;IACxB,MAAM,SAAS,GAAG,eAAe,GAAG,aAAa,CAAC;IAElD,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;QACvC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;YAC/B,OAAO;QACX,CAAC;QAED,MAAM,IAAI,GAAG,uBAAC,iCAAe,cAA4B,KAAK,IAA3B,YAAY,CAAC,MAAM,CAA2B,CAAC;QAElF,IAAI,YAAY,CAAC,MAAM,GAAG,aAAa,EAAE,CAAC;YACtC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,SAAS,GAAG,CAAC,CAAC;IAEpC,OAAO;IACH,4EAA4E;IAC5E,2BAA2B;IAC3B,uDAAuD;IACvD,gCAAI,SAAS,EAAE,CAAC,CAAC,EAAC,cAAc,EAAE,WAAW,EAAC,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,aAC7E,aAAa,CAAC,CAAC,CAAC,CACb,uBAAC,iCAAe,cACX,UAAU,CAAC,CAAC,CAAC,CACV,UAAU,CAAC,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CACjC,CAAC,CAAC,CAAC,CACA,uBAAC,iCAAe,IAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,GAAI,CACpD,IALgB,aAAa,CAMhB,CACrB,CAAC,CAAC,CAAC,IAAI,EACP,YAAY,IACZ,CACR,CAAC;AACN,CAAC,CACJ,CAAC;AAEF,oBAAoB,CAAC,WAAW,GAAG,aAAa,CAAC;AAEpC,QAAA,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE;IAC3D,IAAI,EAAE,iCAAe;IACrB,UAAU,EAAE,6CAAqB;CACpC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {block} from '../utils/cn';\n\nimport {AvatarStackItem} from './AvatarStackItem';\nimport {AvatarStackMore} from './AvatarStackMore';\nimport {AvatarStackMoreButton} from './AvatarStackMoreButton';\nimport {AVATAR_STACK_DEFAULT_MAX} from './constants';\nimport type {AvatarStackProps} from './types';\n\nimport './AvatarStack.scss';\n\nconst b = block('avatar-stack');\n\nconst AvatarStackComponent = React.forwardRef<HTMLUListElement, AvatarStackProps>(\n    (\n        {\n            max = AVATAR_STACK_DEFAULT_MAX,\n            total,\n            overlapSize = 's',\n            size,\n            children,\n            className,\n            renderMore,\n        },\n        ref,\n    ) => {\n        const visibleItems: React.ReactElement[] = [];\n\n        /** All avatars amount */\n        const normalizedTotal = total ? Math.max(total, max) : React.Children.count(children);\n\n        /** Amount avatars to be visible (doesn't include badge with remaining avatars) */\n        let normalizedMax = max < 1 ? 1 : max;\n        // Skip rendering badge with +1, just show avatar instead\n        normalizedMax = normalizedTotal - normalizedMax > 1 ? normalizedMax : normalizedTotal;\n\n        /** Remaining avatars */\n        const moreItems = normalizedTotal - normalizedMax;\n\n        React.Children.forEach(children, (child) => {\n            if (!React.isValidElement(child)) {\n                return;\n            }\n\n            const item = <AvatarStackItem key={visibleItems.length}>{child}</AvatarStackItem>;\n\n            if (visibleItems.length < normalizedMax) {\n                visibleItems.unshift(item);\n            }\n        });\n\n        const hasMoreButton = moreItems > 0;\n\n        return (\n            // Safari remove role=list with some styles, applied to li items, so we need\n            // to restore role manually\n            // eslint-disable-next-line jsx-a11y/no-redundant-roles\n            <ul className={b({'overlap-size': overlapSize}, className)} role={'list'} ref={ref}>\n                {hasMoreButton ? (\n                    <AvatarStackItem key=\"more-button\">\n                        {renderMore ? (\n                            renderMore({count: moreItems})\n                        ) : (\n                            <AvatarStackMore count={moreItems} size={size} />\n                        )}\n                    </AvatarStackItem>\n                ) : null}\n                {visibleItems}\n            </ul>\n        );\n    },\n);\n\nAvatarStackComponent.displayName = 'AvatarStack';\n\nexport const AvatarStack = Object.assign(AvatarStackComponent, {\n    More: AvatarStackMore,\n    MoreButton: AvatarStackMoreButton,\n});\n"]}