{"version":3,"file":"MobileProvider.js","sourceRoot":"../../../../src","sources":["components/mobile/MobileProvider.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,aAAa,EAAC,2BAAwB;AAE9C,OAAO,EAAC,QAAQ,EAAE,mBAAmB,EAAC,uBAAoB;AAE1D,SAAS,cAAc;IACnB,OAAO,EAAC,MAAM,EAAE,EAAE,EAAE,OAAO,KAAI,CAAC,EAAE,IAAI,KAAI,CAAC,EAAE,MAAM,KAAI,CAAC,EAAC,CAAC;AAC9D,CAAC;AAED,SAAS,eAAe;IACpB,OAAO,EAAC,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;AAChD,CAAC;AAWD,MAAM,UAAU,cAAc,CAAC,EAC3B,MAAM,GAAG,KAAK,EACd,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAC3B,UAAU,GAAG,cAAc,EAC3B,WAAW,GAAG,eAAe,EAC7B,QAAQ,GACU;IAClB,MAAM,kBAAkB,GAAqC,KAAK,CAAC,WAAW,CAC1E,SAAS,kBAAkB;QACvB,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,EAAC,GAAG,UAAU,EAAE,CAAC;QAC9C,IAAI,cAAc,CAAC;QACnB,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE,CAAC;YAC/B,cAAc,GAAG,MAAM,CAAC;QAC5B,CAAC;aAAM,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE,CAAC;YACpC,cAAc,GAAG,IAAI,CAAC;QAC1B,CAAC;aAAM,CAAC;YACJ,cAAc,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO;YACH,GAAG,KAAK;YACR,MAAM,EAAE,cAAc;SACzB,CAAC;IACN,CAAC,EACD,CAAC,UAAU,CAAC,CACf,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;IAChE,CAAC,EAAE,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC,CAAC;IAElC,MAAM,YAAY,GAAuB,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QACxD,OAAO;YACH,MAAM;YACN,QAAQ;YACR,WAAW;YACX,UAAU,EAAE,kBAAkB;SACjC,CAAC;IACN,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAExD,OAAO,KAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,YAAY,YAAG,QAAQ,GAA0B,CAAC;AAC5F,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {MobileContext} from './MobileContext';\nimport type {History, Location, MobileContextProps} from './MobileContext';\nimport {Platform, rootMobileClassName} from './constants';\n\nfunction useHistoryMock(): History {\n    return {action: '', replace() {}, push() {}, goBack() {}};\n}\n\nfunction useLocationMock(): Location {\n    return {pathname: '', search: '', hash: ''};\n}\n\nexport interface MobileProviderProps {\n    children?: React.ReactNode;\n    mobile?: boolean;\n    platform?: Platform;\n    // Support history v4 and v5\n    useHistory?: () => Omit<History, 'goBack'> & {back?: () => void; goBack?: () => void};\n    useLocation?: () => Location;\n}\n\nexport function MobileProvider({\n    mobile = false,\n    platform = Platform.BROWSER,\n    useHistory = useHistoryMock,\n    useLocation = useLocationMock,\n    children,\n}: MobileProviderProps) {\n    const useHistoryFunction: MobileContextProps['useHistory'] = React.useCallback(\n        function useHistoryFunction() {\n            const {goBack, back, ...props} = useHistory();\n            let goBackFunction;\n            if (typeof goBack === 'function') {\n                goBackFunction = goBack;\n            } else if (typeof back === 'function') {\n                goBackFunction = back;\n            } else {\n                goBackFunction = () => {};\n            }\n            return {\n                ...props,\n                goBack: goBackFunction,\n            };\n        },\n        [useHistory],\n    );\n\n    React.useEffect(() => {\n        document.body.classList.toggle(rootMobileClassName, mobile);\n    }, [rootMobileClassName, mobile]);\n\n    const contextValue: MobileContextProps = React.useMemo(() => {\n        return {\n            mobile,\n            platform,\n            useLocation,\n            useHistory: useHistoryFunction,\n        };\n    }, [mobile, platform, useLocation, useHistoryFunction]);\n\n    return <MobileContext.Provider value={contextValue}>{children}</MobileContext.Provider>;\n}\n"]}