{"version":3,"file":"types.js","sourceRoot":"../../../../src","sources":["components/Pagination/types.ts"],"names":[],"mappings":"","sourcesContent":["import type {QAProps} from '../types';\n\nexport type ActionName = 'previous' | 'next' | 'first';\n\nexport type PaginationSize = 's' | 'm' | 'l' | 'xl';\n\nexport type PaginationProps = {\n    /**\n     * Current page number.\n     */\n    page: number;\n    /**\n     * Number of data items per page.\n     */\n    pageSize: number;\n    /**\n     * Size of the pagination items.\n     */\n    size?: PaginationSize;\n    /**\n     * Called when the page number or pageSize is changed.\n     */\n    onUpdate: (page: number, pageSize: number) => void;\n    /**\n     * Total number of data items.\n     */\n    total?: number;\n    /**\n     * Specify the sizeChanger options.\n     */\n    pageSizeOptions?: number[];\n    /**\n     * Hide first, previous, next buttons title.\n     * Default true.\n     */\n    compact?: boolean;\n    /**\n     * Show input to navigate to pages directly.\n     * Default false.\n     */\n    showInput?: boolean;\n    /**\n     * Show pages numeration.\n     * Default true.\n     */\n    showPages?: boolean;\n    /**\n     * ClassName of element\n     */\n    className?: string;\n} & QAProps;\n\ntype EllipsisItem = {\n    type: 'ellipsis';\n};\n\ntype PageOfItem = {\n    type: 'pageOf';\n};\n\nexport type PageItem = {\n    type: 'page';\n    current: boolean;\n    page: number;\n    simple: boolean;\n    key: number;\n};\n\nexport type ButtonItem = {\n    type: 'button';\n    action: ActionName;\n    disabled: boolean;\n};\n\nexport type PaginationItem = EllipsisItem | PageOfItem | PageItem | ButtonItem;\n"]}