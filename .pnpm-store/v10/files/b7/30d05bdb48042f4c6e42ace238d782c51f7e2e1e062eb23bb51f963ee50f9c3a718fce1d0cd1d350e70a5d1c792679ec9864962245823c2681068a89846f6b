{"version":3,"file":"useTimeout.js","sourceRoot":"../../../../src","sources":["hooks/useTimeout/useTimeout.ts"],"names":[],"mappings":";;AAMA,gCAcC;;AApBD,qDAA+B;AAM/B,SAAgB,UAAU,CAAC,QAAsB,EAAE,EAA6B;IAC5E,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE,CAAC;YACzB,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,EAAE;YAC1B,QAAQ,EAAE,CAAC;QACf,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,GAAG,EAAE;YACR,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC;IACN,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AACvB,CAAC","sourcesContent":["import * as React from 'react';\n\nexport type UseTimeoutProps = Parameters<\n    (callback: VoidFunction, ms: number | null | undefined) => void\n>;\n\nexport function useTimeout(callback: VoidFunction, ms: number | null | undefined): void {\n    React.useEffect(() => {\n        if (typeof ms !== 'number') {\n            return undefined;\n        }\n\n        const timer = setTimeout(() => {\n            callback();\n        }, ms);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [callback, ms]);\n}\n"]}