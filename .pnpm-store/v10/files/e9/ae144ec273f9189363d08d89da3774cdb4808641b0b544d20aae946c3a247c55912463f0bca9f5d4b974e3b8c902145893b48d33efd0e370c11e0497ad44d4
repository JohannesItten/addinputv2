{"version":3,"file":"SelectList.js","sourceRoot":"../../../../../../src","sources":["components/Select/components/SelectList/SelectList.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,qDAA+B;AAE/B,iDAAmC;AACnC,kDAA0D;AAE1D,0CAA+E;AAG/E,gDAAwC;AACxC,gDAAwC;AACxC,wEAAgE;AAEhE,4BAA2B;AAqB3B,MAAM,aAAa,GAAG,EAAC,KAAK,EAAE,8BAA8B,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;AAEjE,QAAA,UAAU,GAAG,KAAK,CAAC,UAAU,CAAuC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;IAC5F,MAAM,EACF,aAAa,EACb,YAAY,EACZ,iBAAiB,EACjB,eAAe,EACf,oBAAoB,EACpB,IAAI,EACJ,cAAc,EACd,KAAK,EACL,QAAQ,EACR,WAAW,EACX,MAAM,EACN,OAAO,EACP,UAAU,EACV,EAAE,EACF,WAAW,EACX,cAAc,GACjB,GAAG,KAAK,CAAC;IACV,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CACvB,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,cAAc,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EACrE,CAAC,cAAc,EAAE,OAAO,CAAC,CAC5B,CAAC;IAEF,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CACjC,GAAG,EAAE,CACD,cAAc,CAAC,MAAM,CAAW,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;QACnD,IAAI,OAAO,IAAI,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YACpD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;QACD,OAAO,GAAG,CAAC;IACf,CAAC,EAAE,EAAE,CAAC,EACV,CAAC,cAAc,EAAE,KAAK,CAAC,CAC1B,CAAC;IAEF,MAAM,aAAa,GAAG,IAAA,wBAAgB,EAAC;QACnC,OAAO,EAAE,KAAK;QACd,eAAe;QACf,oBAAoB;QACpB,IAAI;QACJ,MAAM;KACT,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,KAAK,CAAC,WAAW,CACnC,CAAC,MAAqB,EAAE,KAAa,EAAE,EAAE;QACrC,OAAO,IAAA,0BAAkB,EAAC;YACtB,eAAe;YACf,oBAAoB;YACpB,IAAI;YACJ,MAAM;YACN,KAAK;YACL,MAAM;SACT,CAAC,CAAC;IACP,CAAC,EACD,CAAC,eAAe,EAAE,oBAAoB,EAAE,MAAM,EAAE,IAAI,CAAC,CACxD,CAAC;IAEF,MAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAChC,CAAC,MAAqB,EAAE,aAAsB,EAAE,SAAiB,EAAE,EAAE;QACjE,IAAI,OAAO,IAAI,MAAM,EAAE,CAAC;YACpB,MAAM,wBAAwB,GAAG,iBAAiB;gBAC9C,CAAC,CAAC,CAAC,WAA2B,EAAE,EAAE;oBAC5B,OAAO,iBAAiB,CAAC,WAAW,EAAE;wBAClC,UAAU,EAAE,aAAa,CAAC,WAAW,EAAE,SAAS,CAAC;qBACpD,CAAC,CAAC;gBACP,CAAC;gBACH,CAAC,CAAC,SAAS,CAAC;YAEhB,OAAO,uBAAC,uBAAU,IAAC,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAE,wBAAwB,GAAI,CAAC;QACvF,CAAC;QACD,IAAI,MAAM,CAAC,KAAK,KAAK,aAAa,CAAC,KAAK,EAAE,CAAC;YACvC,OAAO,CACH,uBAAC,+CAAsB,IACnB,WAAW,EAAE,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,GACvD,CACL,CAAC;QACN,CAAC;QAED,MAAM,mBAAmB,GAAG,YAAY;YACpC,CAAC,CAAC,CAAC,WAAyB,EAAE,EAAE;gBAC1B,OAAO,YAAY,CAAC,WAAW,EAAE;oBAC7B,UAAU,EAAE,aAAa,CAAC,WAAW,EAAE,SAAS,CAAC;iBACpD,CAAC,CAAC;YACP,CAAC;YACH,CAAC,CAAC,SAAS,CAAC;QAEhB,OAAO,CACH,uBAAC,uBAAU,IACP,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,YAAY,EAAE,mBAAmB,GACnC,CACL,CAAC;IACN,CAAC,EACD,CAAC,YAAY,EAAE,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,CAChF,CAAC;IAEF,OAAO,CACH,uBAAC,WAAI,IACD,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,2BAAe,EAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAC,CAAC,EACvD,EAAE,EAAE,oBAAQ,CAAC,IAAI,EACjB,aAAa,EAAE,IAAA,2BAAe,EAAC,MAAM,CAAC,EACtC,UAAU,EAAE,aAAa,EACzB,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,EACpD,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,KAAK,EACjB,WAAW,EAAE,WAAW,EACxB,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,aAAa,EAC1B,iBAAiB,EAAE,eAAe,EAClC,EAAE,EAAE,EAAE,EACN,IAAI,EAAC,SAAS,EACd,eAAe,EAAE,WAAW,EAC5B,cAAc,EAAE,cAAc,EAC9B,iBAAiB,EAAE,KAAK,EACxB,cAAc,EAAE,oBAAY,GAC9B,CACL,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,kBAAU,CAAC,WAAW,GAAG,YAAY,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {List} from '../../../List';\nimport {SelectQa, selectListBlock} from '../../constants';\nimport type {SelectOption, SelectProps} from '../../types';\nimport {getOptionsHeight, getPopupItemHeight, scrollToItem} from '../../utils';\nimport type {FlattenOption, GroupTitleItem} from '../../utils';\n\nimport {GroupLabel} from './GroupLabel';\nimport {OptionWrap} from './OptionWrap';\nimport {SelectLoadingIndicator} from './SelectLoadingIndicator';\n\nimport './SelectList.scss';\n\ntype SelectListProps = {\n    mobile: boolean;\n    onOptionClick: (option: FlattenOption) => void;\n    renderOption?: SelectProps['renderOption'];\n    renderOptionGroup?: SelectProps['renderOptionGroup'];\n    getOptionHeight?: SelectProps['getOptionHeight'];\n    getOptionGroupHeight?: SelectProps['getOptionGroupHeight'];\n    size: NonNullable<SelectProps['size']>;\n    value: NonNullable<SelectProps['value']>;\n    flattenOptions: FlattenOption[];\n    multiple?: boolean;\n    virtualized?: boolean;\n    loading?: boolean;\n    onLoadMore?: () => void;\n    id: string;\n    activeIndex?: number;\n    onChangeActive: (index?: number) => void;\n};\n\nconst loadingOption = {value: '__SELECT_LIST_ITEM_LOADING__', disabled: true};\n\nexport const SelectList = React.forwardRef<List<FlattenOption>, SelectListProps>((props, ref) => {\n    const {\n        onOptionClick,\n        renderOption,\n        renderOptionGroup,\n        getOptionHeight,\n        getOptionGroupHeight,\n        size,\n        flattenOptions,\n        value,\n        multiple,\n        virtualized,\n        mobile,\n        loading,\n        onLoadMore,\n        id,\n        activeIndex,\n        onChangeActive,\n    } = props;\n    const items = React.useMemo(\n        () => (loading ? [...flattenOptions, loadingOption] : flattenOptions),\n        [flattenOptions, loading],\n    );\n\n    const selectedIndexes = React.useMemo(\n        () =>\n            flattenOptions.reduce<number[]>((acc, option, index) => {\n                if ('value' in option && value.includes(option.value)) {\n                    acc.push(index);\n                }\n                return acc;\n            }, []),\n        [flattenOptions, value],\n    );\n\n    const optionsHeight = getOptionsHeight({\n        options: items,\n        getOptionHeight,\n        getOptionGroupHeight,\n        size,\n        mobile,\n    });\n\n    const getItemHeight = React.useCallback(\n        (option: FlattenOption, index: number) => {\n            return getPopupItemHeight({\n                getOptionHeight,\n                getOptionGroupHeight,\n                size,\n                option,\n                index,\n                mobile,\n            });\n        },\n        [getOptionHeight, getOptionGroupHeight, mobile, size],\n    );\n\n    const renderItem = React.useCallback(\n        (option: FlattenOption, _isItemActive: boolean, itemIndex: number) => {\n            if ('label' in option) {\n                const wrappedRenderOptionGroup = renderOptionGroup\n                    ? (optionLocal: GroupTitleItem) => {\n                          return renderOptionGroup(optionLocal, {\n                              itemHeight: getItemHeight(optionLocal, itemIndex),\n                          });\n                      }\n                    : undefined;\n\n                return <GroupLabel option={option} renderOptionGroup={wrappedRenderOptionGroup} />;\n            }\n            if (option.value === loadingOption.value) {\n                return (\n                    <SelectLoadingIndicator\n                        onIntersect={itemIndex === 0 ? undefined : onLoadMore}\n                    />\n                );\n            }\n\n            const wrappedRenderOption = renderOption\n                ? (optionLocal: SelectOption) => {\n                      return renderOption(optionLocal, {\n                          itemHeight: getItemHeight(optionLocal, itemIndex),\n                      });\n                  }\n                : undefined;\n\n            return (\n                <OptionWrap\n                    option={option}\n                    value={value}\n                    multiple={multiple}\n                    renderOption={wrappedRenderOption}\n                />\n            );\n        },\n        [renderOption, renderOptionGroup, value, multiple, getItemHeight, onLoadMore],\n    );\n\n    return (\n        <List\n            ref={ref}\n            className={selectListBlock({size, virtualized, mobile})}\n            qa={SelectQa.LIST}\n            itemClassName={selectListBlock('item')}\n            itemHeight={getItemHeight}\n            itemsHeight={virtualized ? optionsHeight : undefined}\n            items={items}\n            filterable={false}\n            virtualized={virtualized}\n            renderItem={renderItem}\n            onItemClick={onOptionClick}\n            selectedItemIndex={selectedIndexes}\n            id={id}\n            role=\"listbox\"\n            activeItemIndex={activeIndex}\n            onChangeActive={onChangeActive}\n            deactivateOnLeave={false}\n            onScrollToItem={scrollToItem}\n        />\n    );\n});\n\nSelectList.displayName = 'SelectList';\n"]}