{"version":3,"file":"class-transform.js","sourceRoot":"../../../../src","sources":["components/utils/class-transform.ts"],"names":[],"mappings":"AASA,MAAM,UAAU,UAAU,CAAC,QAAgB;IACvC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IACvD,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;QAC1B,OAAO;YACH,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;YACf,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;YACjB,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC;oBACI,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;oBACb,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;iBACpC;gBACH,CAAC,CAAC,SAAS;SAClB,CAAC;IACN,CAAC;IAED,OAAO;QACH,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QACf,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACT,CAAC,CAAC;gBACI,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;gBACb,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;aACpC;YACH,CAAC,CAAC,SAAS;KAClB,CAAC;AACN,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,QAAsB;IAC9C,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC5B,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;QACnB,MAAM,GAAG,GAAG,MAAM,KAAK,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC9C,CAAC;IACD,IAAI,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC;QACtB,MAAM,GAAG,GAAG,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACzC,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE,CAAC;YACzC,MAAM,GAAG,GAAG,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAC/C,CAAC;IACL,CAAC;IACD,OAAO,MAAM,CAAC;AAClB,CAAC","sourcesContent":["export interface ElementClass {\n    block: string;\n    element?: string;\n    mod?: {\n        key: string;\n        value: string | boolean;\n    };\n}\n\nexport function parseClass(strClass: string): ElementClass {\n    const split = strClass.split('_').filter((str) => str);\n    if (strClass.includes('__')) {\n        return {\n            block: split[0],\n            element: split[1],\n            mod: split[2]\n                ? {\n                      key: split[2],\n                      value: split[3] ? split[3] : true,\n                  }\n                : undefined,\n        };\n    }\n\n    return {\n        block: split[0],\n        mod: split[1]\n            ? {\n                  key: split[1],\n                  value: split[2] ? split[2] : true,\n              }\n            : undefined,\n    };\n}\n\nexport function formatClass(objClass: ElementClass): string {\n    let result = objClass.block;\n    if (objClass.element) {\n        result = `${result}__${objClass.element}`;\n    }\n    if (objClass.mod?.value) {\n        result = `${result}_${objClass.mod.key}`;\n        if (typeof objClass.mod.value === 'string') {\n            result = `${result}_${objClass.mod.value}`;\n        }\n    }\n    return result;\n}\n"]}