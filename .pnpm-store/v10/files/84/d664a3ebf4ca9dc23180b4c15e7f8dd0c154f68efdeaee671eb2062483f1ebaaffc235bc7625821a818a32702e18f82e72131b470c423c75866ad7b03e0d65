{"version":3,"file":"AdditionalContent.js","sourceRoot":"../../../../../src","sources":["components/controls/TextInput/AdditionalContent.tsx"],"names":[],"mappings":";;;;;AAAA,qDAA+B;AAE/B,0CAAqC;AAErC,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,YAAY,CAAC,CAAC;AAQjB,QAAA,iBAAiB,GAAG,KAAK,CAAC,UAAU,CAAwB,SAAS,iBAAiB,CAC/F,EAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAC,EAC9B,GAAG;IAEH,IAAI,CAAC,QAAQ,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAO;IACH,gFAAgF;IAChF,0GAA0G;IAC1G,gCAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,oBAAoB,EAAE,EAAC,SAAS,EAAC,CAAC,EAAE,OAAO,EAAE,OAAO,YAC3E,QAAQ,GACP,CACT,CAAC;AACN,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {block} from '../../utils/cn';\n\nconst b = block('text-input');\n\ntype Props = {\n    placement: 'start' | 'end';\n    children?: React.ReactNode;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n};\n\nexport const AdditionalContent = React.forwardRef<HTMLDivElement, Props>(function AdditionalContent(\n    {placement, children, onClick},\n    ref,\n) {\n    if (!children) {\n        return null;\n    }\n\n    return (\n        // It is used to focus the control input if non-interaction element is provided.\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n        <div ref={ref} className={b('additional-content', {placement})} onClick={onClick}>\n            {children}\n        </div>\n    );\n});\n"]}