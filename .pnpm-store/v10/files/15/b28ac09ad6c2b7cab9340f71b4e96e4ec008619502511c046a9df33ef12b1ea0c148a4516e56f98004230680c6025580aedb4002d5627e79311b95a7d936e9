{"version":3,"file":"Slider.js","sourceRoot":"../../../../src","sources":["components/Slider/Slider.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useControlledState} from '../../hooks';\nimport {useFormResetHandler} from '../../hooks/private';\nimport {useDirection} from '../theme';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\n\nimport {BaseSlider} from './BaseSlider/BaseSlider';\nimport {HandleWithTooltip} from './HandleWithTooltip/HandleWithTooltip';\nimport type {HandleWithTooltipProps, SliderProps, StateModifiers} from './types';\nimport {prepareSliderInnerState} from './utils';\n\nimport './Slider.scss';\n\nconst b = block('slider');\n\nexport const Slider = React.forwardRef(function Slider(\n    {\n        value,\n        defaultValue,\n        size = 'm',\n        min = 0,\n        max = 100,\n        step = 1,\n        markFormat,\n        marks = 2,\n        tooltipDisplay,\n        tooltipFormat = markFormat,\n        errorMessage,\n        validationState,\n        disabled = false,\n        startPoint,\n        inverted,\n        onBlur,\n        onUpdate,\n        onUpdateComplete,\n        onFocus,\n        autoFocus = false,\n        tabIndex,\n        className,\n        style,\n        qa,\n        apiRef,\n        'aria-label': ariaLabelForHandle,\n        'aria-labelledby': ariaLabelledByForHandle,\n        name,\n        form,\n        ...restProps\n    }: SliderProps,\n    ref: React.ForwardedRef<HTMLDivElement>,\n) {\n    const direction = useDirection();\n\n    const innerState = prepareSliderInnerState({\n        defaultValue,\n        max,\n        min,\n        step,\n        value,\n        markFormat,\n        marks,\n        tooltipDisplay,\n        tooltipFormat,\n        startPoint: inverted ? Math.max(min, max) : startPoint,\n    });\n    const [innerValue, setValue] = useControlledState(\n        innerState.value,\n        innerState.defaultValue,\n        onUpdate,\n    );\n\n    const handleReset = React.useCallback(\n        (v: number | [number, number]) => {\n            setValue(v);\n            onUpdateComplete?.(v);\n        },\n        [onUpdateComplete, setValue],\n    );\n\n    const inputRef = useFormResetHandler({initialValue: innerValue, onReset: handleReset});\n\n    const stateModifiers: StateModifiers = {\n        size,\n        error: validationState === 'invalid' && !disabled,\n        disabled,\n        'tooltip-display': innerState.tooltipDisplay,\n        rtl: direction === 'rtl',\n        'no-marks': Array.isArray(marks) ? marks.length === 0 : marks === 0,\n        inverted: innerState.startPoint === innerState.max && !innerState.range,\n        'with-start-point': Boolean(\n            innerState.startPoint &&\n                !innerState.range &&\n                innerState.startPoint !== innerState.max &&\n                innerState.startPoint !== innerState.min,\n        ),\n    };\n\n    const handleRender = (\n        originHandle: HandleWithTooltipProps['originHandle'],\n        originHandleProps: HandleWithTooltipProps['originHandleProps'],\n    ) => {\n        const handle =\n            innerState.tooltipDisplay === 'off' ? (\n                originHandle\n            ) : (\n                <HandleWithTooltip\n                    originHandle={originHandle}\n                    originHandleProps={originHandleProps}\n                    stateModifiers={stateModifiers}\n                    className={b('tooltip')}\n                    tooltipFormat={innerState.tooltipFormat}\n                />\n            );\n\n        return (\n            <React.Fragment>\n                {handle}\n                <input\n                    ref={inputRef}\n                    type=\"hidden\"\n                    name={name}\n                    form={form}\n                    value={originHandleProps.value}\n                    disabled={disabled}\n                />\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <div {...filterDOMProps(restProps)} className={b(null, className)} style={style} ref={ref}>\n            <div className={b('top', {size, 'tooltip-display': tooltipDisplay})}>\n                {/* use this block to reserve place for tooltip */}\n            </div>\n            <BaseSlider\n                ref={apiRef}\n                value={innerValue}\n                min={innerState.min}\n                max={innerState.max}\n                step={innerState.step}\n                range={innerState.range}\n                disabled={disabled}\n                marks={innerState.marks}\n                startPoint={innerState.startPoint}\n                onBlur={onBlur}\n                onFocus={onFocus}\n                onChange={setValue}\n                onChangeComplete={onUpdateComplete}\n                stateModifiers={stateModifiers}\n                autoFocus={autoFocus}\n                tabIndex={tabIndex}\n                data-qa={qa}\n                handleRender={handleRender}\n                reverse={stateModifiers.rtl}\n                ariaLabelForHandle={ariaLabelForHandle}\n                ariaLabelledByForHandle={ariaLabelledByForHandle}\n            />\n            {stateModifiers.error && errorMessage && (\n                <div className={b('error', {size})}>{errorMessage}</div>\n            )}\n        </div>\n    );\n}) as <T extends number | [number, number]>(\n    p: SliderProps<T> & {ref?: React.Ref<HTMLDivElement>},\n) => React.ReactElement;\n"]}