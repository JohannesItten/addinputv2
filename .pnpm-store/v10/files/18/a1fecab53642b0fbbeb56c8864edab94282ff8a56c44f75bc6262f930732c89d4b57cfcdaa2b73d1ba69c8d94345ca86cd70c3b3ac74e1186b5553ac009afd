{"version":3,"file":"getListItemId.js","sourceRoot":"../../../../../src","sources":["components/useList/utils/getListItemId.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,eAAe,EAAC,6BAA0B;AAQlD,MAAM,CAAC,MAAM,aAAa,GAAG,CAAI,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAwB,EAAE,EAAE;IACpF,IAAI,EAAE,GAAG,SAAS,CAAC;IAEnB,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE,CAAC;QAClC,EAAE,GAAG,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;SAAM,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;QACrE,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,OAAO,EAAE,CAAC;AACd,CAAC,CAAC","sourcesContent":["import type {ListItemId, ListItemType} from '../types';\n\nimport {isTreeItemGuard} from './isTreeItemGuard';\n\ninterface GetListItemIdProps<T> {\n    item: ListItemType<T>;\n    groupedId: ListItemId;\n    getItemId?(data: T): ListItemId;\n}\n\nexport const getListItemId = <T>({item, groupedId, getItemId}: GetListItemIdProps<T>) => {\n    let id = groupedId;\n\n    if (typeof getItemId === 'function') {\n        id = getItemId(isTreeItemGuard(item) ? item.data : item);\n    } else if (item && typeof item === 'object' && 'id' in item && item.id) {\n        id = item.id;\n    }\n\n    return id;\n};\n"]}