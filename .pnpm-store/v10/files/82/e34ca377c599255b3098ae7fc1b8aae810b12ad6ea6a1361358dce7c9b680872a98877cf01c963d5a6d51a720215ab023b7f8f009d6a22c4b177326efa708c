{"version":3,"file":"useFloatingTransition.js","sourceRoot":"../../../../../src","sources":["hooks/private/useFloatingTransition/useFloatingTransition.ts"],"names":[],"mappings":";;AAqBA,sDAwDC;;AA7ED,qDAA+B;AAE/B,8CAAuD;AAGvD,yDAA2C;AAgB3C,SAAgB,qBAAqB,CAAC,EAClC,OAAO,EACP,QAAQ,EACR,cAAc,EACd,sBAAsB,EACtB,eAAe,EACf,uBAAuB,GACE;IACzB,MAAM,EAAC,SAAS,EAAE,MAAM,EAAC,GAAG,IAAA,2BAAmB,EAAC,OAAO,EAAE;QACrD,QAAQ;KACX,CAAC,CAAC;IACH,MAAM,cAAc,GAAG,IAAA,yBAAW,EAAC,MAAM,CAAC,CAAC;IAC3C,MAAM,YAAY,GAAG,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpF,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAuC,IAAI,CAAC,CAAC;IAE5E,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,IAAI,MAAM,KAAK,MAAM,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;YACpD,cAAc,EAAE,EAAE,CAAC;YAEnB,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;gBACjC,sBAAsB,EAAE,EAAE,CAAC;gBAC3B,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;YAC9B,CAAC,EAAE,YAAY,CAAC,CAAC;QACrB,CAAC;QACD,IAAI,MAAM,KAAK,OAAO,IAAI,cAAc,KAAK,MAAM,EAAE,CAAC;YAClD,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;gBACrB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACjC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;YAC9B,CAAC;YAED,eAAe,EAAE,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,MAAM,KAAK,WAAW,IAAI,cAAc,KAAK,OAAO,EAAE,CAAC;YACvD,uBAAuB,EAAE,EAAE,CAAC;QAChC,CAAC;IACL,CAAC,EAAE;QACC,MAAM;QACN,cAAc;QACd,YAAY;QACZ,cAAc;QACd,sBAAsB;QACtB,eAAe;QACf,uBAAuB;KAC1B,CAAC,CAAC;IAEH,KAAK,CAAC,SAAS,CACX,GAAG,EAAE,CAAC,GAAG,EAAE;QACP,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;QAC9B,CAAC;IACL,CAAC,EACD,EAAE,CACL,CAAC;IAEF,OAAO,EAAC,SAAS,EAAE,MAAM,EAAC,CAAC;AAC/B,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {useTransitionStatus} from '@floating-ui/react';\nimport type {FloatingContext, UseTransitionStatusProps} from '@floating-ui/react';\n\nimport {usePrevious} from '../usePrevious';\n\nexport interface UseFloatingTransitionProps {\n    context: FloatingContext;\n    duration: NonNullable<UseTransitionStatusProps['duration']>;\n    onTransitionIn?: () => void;\n    onTransitionInComplete?: () => void;\n    onTransitionOut?: () => void;\n    onTransitionOutComplete?: () => void;\n}\n\nexport interface UseFloatingTransitionResult {\n    isMounted: boolean;\n    status: 'unmounted' | 'initial' | 'open' | 'close';\n}\n\nexport function useFloatingTransition({\n    context,\n    duration,\n    onTransitionIn,\n    onTransitionInComplete,\n    onTransitionOut,\n    onTransitionOutComplete,\n}: UseFloatingTransitionProps): UseFloatingTransitionResult {\n    const {isMounted, status} = useTransitionStatus(context, {\n        duration,\n    });\n    const previousStatus = usePrevious(status);\n    const openDuration = (typeof duration === 'number' ? duration : duration.open) ?? 0;\n    const timerIdRef = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n\n    React.useEffect(() => {\n        if (status === 'open' && previousStatus === 'initial') {\n            onTransitionIn?.();\n\n            timerIdRef.current = setTimeout(() => {\n                onTransitionInComplete?.();\n                timerIdRef.current = null;\n            }, openDuration);\n        }\n        if (status === 'close' && previousStatus === 'open') {\n            if (timerIdRef.current) {\n                clearTimeout(timerIdRef.current);\n                timerIdRef.current = null;\n            }\n\n            onTransitionOut?.();\n        }\n        if (status === 'unmounted' && previousStatus === 'close') {\n            onTransitionOutComplete?.();\n        }\n    }, [\n        status,\n        previousStatus,\n        openDuration,\n        onTransitionIn,\n        onTransitionInComplete,\n        onTransitionOut,\n        onTransitionOutComplete,\n    ]);\n\n    React.useEffect(\n        () => () => {\n            if (timerIdRef.current) {\n                clearTimeout(timerIdRef.current);\n                timerIdRef.current = null;\n            }\n        },\n        [],\n    );\n\n    return {isMounted, status};\n}\n"]}