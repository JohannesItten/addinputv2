{"version":3,"file":"Avatar.js","sourceRoot":"../../../../src","sources":["components/Avatar/Avatar.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,cAAc,EAAC,mCAAgC;AAEvD,OAAO,EAAC,UAAU,EAAC,8BAAqB;AACxC,OAAO,EAAC,WAAW,EAAC,+BAAsB;AAC1C,OAAO,EAAC,UAAU,EAAC,8BAAqB;AACxC,OAAO,EAAC,mBAAmB,EAAE,OAAO,EAAC,uBAAoB;AAGzD,sBAAuB;AAEvB,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAA8B,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;IAC/E,MAAM,EACF,IAAI,GAAG,mBAAmB,EAC1B,KAAK,GAAG,QAAQ,EAChB,IAAI,GAAG,QAAQ,EACf,KAAK,GAAG,QAAQ,EAChB,eAAe,EACf,WAAW,EACX,KAAK,EACL,SAAS,EACT,KAAK,EAAE,SAAS,EAChB,EAAE,GACL,GAAG,KAAK,CAAC;IAEV,MAAM,KAAK,GAAG,EAAC,eAAe,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,SAAS,EAAC,CAAC;IAElE,MAAM,aAAa,GAAG,GAAG,EAAE;QACvB,IAAI,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;YACpC,OAAO,CACH,KAAC,WAAW,IACR,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,cAAc,EAAE,KAAK,CAAC,cAAc,EACpC,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,GAAG,EAAE,KAAK,CAAC,GAAG,IAAI,KAAK,EACvB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,eAAe,EAAE,KAAK,CAAC,eAAe,EACtC,IAAI,EAAE,IAAI,GACZ,CACL,CAAC;QACN,CAAC;QAED,IAAI,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;YAChC,OAAO,KAAC,UAAU,IAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,GAAI,CAAC;QAC5E,CAAC;QAED,IAAI,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;YAChC,OAAO,KAAC,UAAU,IAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,GAAI,CAAC;QAC5E,CAAC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IAEF,OAAO,CACH,cACI,SAAS,EAAE,OAAO,CACd,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,EAAC,EAC/D,SAAS,CACZ,EACD,KAAK,EAAE,KAAK,EACZ,IAAI,EAAC,KAAK,EACV,KAAK,EAAE,KAAK,aACH,EAAE,EACX,GAAG,EAAE,GAAG,KACJ,cAAc,CAAC,KAAK,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,YAE3C,aAAa,EAAE,GACd,CACT,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {filterDOMProps} from '../utils/filterDOMProps';\n\nimport {AvatarIcon} from './AvatarIcon';\nimport {AvatarImage} from './AvatarImage';\nimport {AvatarText} from './AvatarText';\nimport {DEFAULT_AVATAR_SIZE, bAvatar} from './constants';\nimport type {AvatarProps} from './types/main';\n\nimport './Avatar.scss';\n\nexport const Avatar = React.forwardRef<HTMLDivElement, AvatarProps>((props, ref) => {\n    const {\n        size = DEFAULT_AVATAR_SIZE,\n        theme = 'normal',\n        view = 'filled',\n        shape = 'circle',\n        backgroundColor,\n        borderColor,\n        title,\n        className,\n        style: styleProp,\n        qa,\n    } = props;\n\n    const style = {backgroundColor, color: borderColor, ...styleProp};\n\n    const renderContent = () => {\n        if ('imgUrl' in props && props.imgUrl) {\n            return (\n                <AvatarImage\n                    imgUrl={props.imgUrl}\n                    fallbackImgUrl={props.fallbackImgUrl}\n                    sizes={props.sizes}\n                    srcSet={props.srcSet}\n                    alt={props.alt || title}\n                    loading={props.loading}\n                    withImageBorder={props.withImageBorder}\n                    size={size}\n                />\n            );\n        }\n\n        if ('icon' in props && props.icon) {\n            return <AvatarIcon icon={props.icon} color={props.color} size={size} />;\n        }\n\n        if ('text' in props && props.text) {\n            return <AvatarText text={props.text} color={props.color} size={size} />;\n        }\n\n        return null;\n    };\n\n    return (\n        <div\n            className={bAvatar(\n                {size, theme, view, shape, 'with-border': Boolean(borderColor)},\n                className,\n            )}\n            title={title}\n            role=\"img\"\n            style={style}\n            data-qa={qa}\n            ref={ref}\n            {...filterDOMProps(props, {labelable: true})}\n        >\n            {renderContent()}\n        </div>\n    );\n});\n\nAvatar.displayName = 'Avatar';\n"]}