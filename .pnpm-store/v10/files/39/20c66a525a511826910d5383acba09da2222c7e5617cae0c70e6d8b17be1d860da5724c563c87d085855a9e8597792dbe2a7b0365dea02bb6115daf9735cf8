{"version":3,"file":"EventEmitter.js","sourceRoot":"../../../../../src","sources":["components/Toaster/utilities/EventEmitter.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,YAAY;IACb,SAAS,CAAqB;IAEtC;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,OAAO;QACH,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,QAA0B;QAChC,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC;QAED,OAAO,GAAG,EAAE;YACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAClC,CAAC,eAAe,EAAE,EAAE,CAAC,QAAQ,KAAK,eAAe,CACpD,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,MAAM,CAAC,IAAO;QACV,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACpC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ","sourcesContent":["type EventListener<T> = (data: T) => void;\n\nexport class EventEmitter<T> {\n    private listeners: EventListener<T>[];\n\n    constructor() {\n        this.listeners = [];\n    }\n\n    destroy() {\n        this.listeners = [];\n    }\n\n    subscribe(listener: EventListener<T>) {\n        if (typeof listener === 'function') {\n            this.listeners.push(listener);\n        }\n\n        return () => {\n            this.listeners = this.listeners.filter(\n                (currentListener) => listener !== currentListener,\n            );\n        };\n    }\n\n    notify(data: T) {\n        if (this.listeners.length === 0) {\n            return false;\n        }\n\n        for (const listener of this.listeners) {\n            listener(data);\n        }\n\n        return true;\n    }\n}\n"]}