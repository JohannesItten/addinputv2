{"version":3,"file":"useAnimateHeight.js","sourceRoot":"../../../../../src","sources":["hooks/private/useAnimateHeight/useAnimateHeight.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {useResizeObserver} from '../../useResizeObserver';\nimport type {ResizeInfo} from '../../useResizeObserver/useResizeObserver';\nimport {useMatchMedia} from '../useMatchMedia';\n\nexport function useAnimateHeight({\n    ref,\n    enabled: enabledProp,\n}: {\n    ref?: React.RefObject<HTMLElement | null | undefined>;\n    enabled: boolean;\n}): void {\n    const isPrefersReducedMotion = useMatchMedia({media: '(prefers-reduced-motion: reduce)'});\n    const enabled = enabledProp && !isPrefersReducedMotion;\n    const previousHeight = React.useRef<number | null>(null);\n    const isTransitioningHeight = React.useRef(false);\n    const overflowY = React.useRef<string>('');\n    const animationFrame = React.useRef<number>(-1);\n\n    React.useEffect(() => {\n        let mutationObserver: MutationObserver | undefined;\n        const node = ref?.current;\n\n        if (node && enabled) {\n            mutationObserver = new MutationObserver((mutations) => {\n                if (!mutations.length || !isTransitioningHeight.current) return;\n\n                // If node content changes mid animation, we reset height to immediately animate towards the new height\n                previousHeight.current = calculateNodeHeight(node);\n                isTransitioningHeight.current = false;\n                node.style.height = '';\n                node.style.overflowY = overflowY.current;\n                cancelAnimationFrame(animationFrame.current);\n            });\n\n            mutationObserver.observe(node, {\n                childList: true,\n                subtree: true,\n            });\n        }\n\n        return () => {\n            mutationObserver?.disconnect();\n        };\n    }, [ref, enabled]);\n\n    React.useEffect(() => {\n        if (!enabled) {\n            previousHeight.current = null;\n            isTransitioningHeight.current = false;\n        }\n    }, [enabled]);\n\n    const handleResize = React.useCallback(\n        (resizeInfo: ResizeInfo) => {\n            const node = ref?.current;\n            if (!node || isTransitioningHeight.current || !enabled) {\n                return;\n            }\n\n            const contentHeight = calculateNodeHeight(node);\n            if (!previousHeight.current && !overflowY.current) {\n                previousHeight.current = contentHeight;\n                overflowY.current = node.style.overflowY;\n                return;\n            }\n\n            // Avoid \"ResizeObserver loop completed with undelivered notifications\" error\n            resizeInfo.observer?.unobserve(node);\n\n            // Set previous height first for the transition to work, because it doesn't work with 'auto'\n            node.style.height = `${previousHeight.current}px`;\n            isTransitioningHeight.current = true;\n            node.style.overflowY = 'clip';\n\n            const handleTransitionEnd = (event: TransitionEvent) => {\n                if (event.propertyName !== 'height') {\n                    return;\n                }\n\n                node.removeEventListener('transitionend', handleTransitionEnd);\n\n                // ResizeObserver final resize event fires before this, so we have to delay with timeout\n                setTimeout(() => {\n                    node.style.height = '';\n                    node.style.overflowY = overflowY.current;\n                    isTransitioningHeight.current = false;\n                }, 0);\n            };\n\n            node.addEventListener('transitionend', handleTransitionEnd);\n\n            animationFrame.current = requestAnimationFrame(() => {\n                resizeInfo.observer?.observe(node);\n                node.style.height = `${contentHeight}px`;\n                previousHeight.current = contentHeight;\n            });\n        },\n        [ref, enabled],\n    );\n\n    useResizeObserver({ref: enabled ? ref : undefined, onResize: handleResize});\n}\n\nfunction calculateNodeHeight(node: HTMLElement) {\n    const computedStyle = window.getComputedStyle(node, null);\n    if (computedStyle.getPropertyValue('box-sizing') === 'border-box') {\n        return node.clientHeight;\n    }\n\n    const paddingTop = parseFloat(computedStyle.getPropertyValue('padding-top'));\n    const paddingBottom = parseFloat(computedStyle.getPropertyValue('padding-bottom'));\n\n    return node.clientHeight - paddingTop - paddingBottom;\n}\n"]}