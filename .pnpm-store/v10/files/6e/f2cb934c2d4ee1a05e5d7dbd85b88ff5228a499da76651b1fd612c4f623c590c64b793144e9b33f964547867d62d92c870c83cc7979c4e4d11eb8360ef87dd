{"version":3,"file":"UserLabel.js","sourceRoot":"../../../../src","sources":["components/UserLabel/UserLabel.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {Envelope, Xmark} from '@gravity-ui/icons';\n\nimport {Avatar} from '../Avatar';\nimport type {AvatarProps} from '../Avatar';\nimport {Icon} from '../Icon';\nimport {block} from '../utils/cn';\n\nimport {BORDER_COLOR, COMPACT_SIZES, DEFAULT_USER_LABEL_SIZE, ICON_SIZES} from './constants';\nimport i18n from './i18n';\nimport type {UserLabelProps} from './types';\n\nimport './UserLabel.scss';\n\nconst b = block('user-label');\n\nexport const UserLabel = React.forwardRef<HTMLDivElement, UserLabelProps>(\n    // eslint-disable-next-line complexity\n    (\n        {\n            type = 'person',\n            view = 'outlined',\n            size = DEFAULT_USER_LABEL_SIZE,\n            avatar,\n            text,\n            description,\n            onClick,\n            onCloseClick,\n            className,\n            style,\n            qa,\n        },\n        ref,\n    ) => {\n        const clickable = Boolean(onClick);\n        const closeable = Boolean(onCloseClick);\n\n        const MainComponent = clickable ? 'button' : 'div';\n\n        let avatarView: React.ReactNode = null;\n        let avatarProps: AvatarProps | undefined;\n\n        if (typeof avatar === 'string') {\n            avatarProps = {imgUrl: avatar};\n        } else if (avatar && !React.isValidElement(avatar)) {\n            if (\n                ('imgUrl' in avatar && avatar.imgUrl) ||\n                ('icon' in avatar && avatar.icon) ||\n                ('text' in avatar && avatar.text)\n            ) {\n                avatarProps = avatar as AvatarProps;\n            } else if (typeof text === 'string') {\n                avatarProps = {text, borderColor: BORDER_COLOR, ...avatar};\n            }\n        } else if (!avatar && typeof text === 'string') {\n            avatarProps = {text, borderColor: BORDER_COLOR};\n        }\n\n        switch (type) {\n            case 'email':\n                avatarView = <Avatar icon={Envelope} {...avatarProps} size={size} />;\n                break;\n            case 'empty':\n                avatarView = null;\n                break;\n            case 'person':\n            default:\n                if (React.isValidElement(avatar)) {\n                    avatarView = avatar;\n                } else if (avatarProps) {\n                    avatarView = <Avatar {...avatarProps} size={size} />;\n                }\n                break;\n        }\n\n        const showDescription = Boolean(description && !COMPACT_SIZES.has(size));\n\n        return (\n            <div\n                className={b(\n                    {\n                        view,\n                        size,\n                        empty: !avatarView,\n                        clickable,\n                        closeable,\n                    },\n                    className,\n                )}\n                style={style}\n                data-qa={qa}\n                ref={ref}\n            >\n                <MainComponent\n                    className={b('main')}\n                    type={clickable ? 'button' : undefined}\n                    onClick={onClick}\n                >\n                    {avatarView ? <div className={b('avatar')}>{avatarView}</div> : null}\n                    <div className={b('info')}>\n                        <span className={b('text')}>{text}</span>\n                        {showDescription ? (\n                            <span className={b('description')}>{description}</span>\n                        ) : null}\n                    </div>\n                </MainComponent>\n                {onCloseClick ? (\n                    <button\n                        className={b('close')}\n                        type=\"button\"\n                        aria-label={i18n('label_remove-button')}\n                        onClick={onCloseClick}\n                    >\n                        <Icon className={b('close-icon')} data={Xmark} size={ICON_SIZES[size]} />\n                    </button>\n                ) : null}\n            </div>\n        );\n    },\n);\n\nUserLabel.displayName = 'UserLabel';\n"]}