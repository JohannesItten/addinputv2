{"version":3,"file":"useVirtualElementRef.js","sourceRoot":"../../../../src","sources":["hooks/useVirtualElementRef/useVirtualElementRef.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAyB/B,MAAM,eAAe,GAAG,EAAC,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;AAE/D,oDAAoD;AACpD,MAAM,UAAU,oBAAoB,CAChC,QAAmC,EAAE;IAErC,MAAM,EAAC,IAAI,EAAE,cAAc,EAAC,GAAG,KAAK,CAAC;IACrC,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAE9C,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAiB;QACrC,cAAc;QACd,qBAAqB;YACjB,MAAM,EAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC,OAAO,CAAC;YACnD,MAAM,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;YAC3B,MAAM,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;YAE5B,OAAO;gBACH,GAAG;gBACH,KAAK;gBACL,MAAM;gBACN,IAAI;gBACJ,KAAK;gBACL,MAAM;aACE,CAAC;QACjB,CAAC;KACJ,CAAC,CAAC;IAEH,GAAG,CAAC,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;IAE5C,IAAI,IAAI,EAAE,CAAC;QACP,MAAM,EAAC,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAC,GAAG,IAAI,CAAC;QAE7D,OAAO,CAAC,OAAO,GAAG,EAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;IACjD,CAAC;SAAM,CAAC;QACJ,OAAO,CAAC,OAAO,GAAG,eAAe,CAAC;IACtC,CAAC;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAwB;IACtD,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACnC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAiB;QACvD,qBAAqB;YACjB,MAAM,EAAC,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAC,GAAG,OAAO,CAAC,OAAO,CAAC;YACxE,OAAO,EAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,GAAG,EAAY,CAAC;QAC5F,CAAC;QACD,cAAc,EAAE,SAAS;KAC5B,CAAC,CAAC;IACH,MAAM,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,IAA2B,EAAE,EAAE;QACxE,SAAS,CAAC;YACN,qBAAqB;gBACjB,MAAM,EAAC,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAC,GAAG,OAAO,CAAC,OAAO,CAAC;gBACxE,OAAO;oBACH,GAAG;oBACH,IAAI;oBACJ,MAAM;oBACN,KAAK;oBACL,KAAK,EAAE,KAAK,GAAG,IAAI;oBACnB,MAAM,EAAE,MAAM,GAAG,GAAG;iBACZ,CAAC;YACjB,CAAC;YACD,cAAc,EAAE,IAAI,IAAI,SAAS;SACpC,CAAC,CAAC;IACP,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,EAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC;IACxC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,OAAO,CAAC,OAAO,GAAG,EAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC;IACjD,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;IAE/B,OAAO,EAAC,MAAM,EAAE,iBAAiB,EAAC,CAAC;AACvC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport type {VirtualElement} from '@floating-ui/react';\n\nexport type VirtualElementRect = {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n};\n\nexport interface UseVirtualElementRefProps {\n    /**\n     * Position of virtual element relative to viewport\n     */\n    rect?: VirtualElementRect | null;\n\n    /**\n     * DOM-context of virtual element\n     */\n    contextElement?: Element;\n}\n\nexport type UseVirtualElementRefResult = React.MutableRefObject<VirtualElement>;\n\nconst initialPosition = {top: 0, right: 0, bottom: 0, left: 0};\n\n// React hook for creating virtual element for popup\nexport function useVirtualElementRef(\n    props: UseVirtualElementRefProps = {},\n): UseVirtualElementRefResult {\n    const {rect, contextElement} = props;\n    const rectRef = React.useRef(initialPosition);\n\n    const ref = React.useRef<VirtualElement>({\n        contextElement,\n        getBoundingClientRect() {\n            const {top, right, bottom, left} = rectRef.current;\n            const width = right - left;\n            const height = bottom - top;\n\n            return {\n                top,\n                right,\n                bottom,\n                left,\n                width,\n                height,\n            } as DOMRect;\n        },\n    });\n\n    ref.current.contextElement = contextElement;\n\n    if (rect) {\n        const {top = 0, left = 0, right = left, bottom = top} = rect;\n\n        rectRef.current = {top, right, bottom, left};\n    } else {\n        rectRef.current = initialPosition;\n    }\n\n    return ref;\n}\n\nexport function useVirtualElement(rect: VirtualElementRect) {\n    const rectRef = React.useRef(rect);\n    const [anchor, setAnchor] = React.useState<VirtualElement>({\n        getBoundingClientRect() {\n            const {top = 0, left = 0, right = left, bottom = top} = rectRef.current;\n            return {top, left, bottom, right, width: right - left, height: bottom - top} as DOMRect;\n        },\n        contextElement: undefined,\n    });\n    const setContextElement = React.useCallback((node: HTMLDivElement | null) => {\n        setAnchor({\n            getBoundingClientRect() {\n                const {top = 0, left = 0, right = left, bottom = top} = rectRef.current;\n                return {\n                    top,\n                    left,\n                    bottom,\n                    right,\n                    width: right - left,\n                    height: bottom - top,\n                } as DOMRect;\n            },\n            contextElement: node ?? undefined,\n        });\n    }, []);\n\n    const {top, left, bottom, right} = rect;\n    React.useEffect(() => {\n        rectRef.current = {top, left, bottom, right};\n    }, [top, left, bottom, right]);\n\n    return {anchor, setContextElement};\n}\n"]}