{"version":3,"file":"withTableSelection.js","sourceRoot":"../../../../../../src","sources":["components/Table/hoc/withTableSelection/withTableSelection.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport difference from 'lodash/difference';\nimport memoize from 'lodash/memoize';\nimport union from 'lodash/union';\nimport without from 'lodash/without';\n\nimport {Checkbox} from '../../../Checkbox';\nimport {block} from '../../../utils/cn';\nimport {getComponentName} from '../../../utils/getComponentName';\nimport {Table} from '../../Table';\nimport type {TableColumnConfig, TableDataItem, TableProps} from '../../Table';\nimport i18n from '../../i18n';\n\nimport './withTableSelection.scss';\n\nconst b = block('table');\n\nexport const selectionColumnId = '_selection';\n\nexport interface WithTableSelectionProps<I> {\n    onSelectionChange: (ids: string[]) => void;\n    selectedIds: string[];\n    isRowSelectionDisabled?: (item: I, index: number) => boolean;\n}\n\nexport function withTableSelection<I extends TableDataItem, E extends {} = {}>(\n    TableComponent: React.ComponentType<TableProps<I> & E>,\n): React.ComponentType<TableProps<I> & WithTableSelectionProps<I> & E> {\n    const componentName = getComponentName(TableComponent);\n    const displayName = `withTableSelection(${componentName})`;\n\n    return class extends React.Component<TableProps<I> & WithTableSelectionProps<I> & E> {\n        static displayName = displayName;\n        private lastCheckedIndex: number | undefined;\n\n        render() {\n            const {\n                selectedIds, // eslint-disable-line @typescript-eslint/no-unused-vars\n                onSelectionChange, // eslint-disable-line @typescript-eslint/no-unused-vars\n                columns,\n                onRowClick,\n                getRowDescriptor,\n                ...restTableProps\n            } = this.props;\n\n            return (\n                <TableComponent\n                    {...(restTableProps as Omit<TableProps<I>, 'columns'> & E)}\n                    columns={this.enhanceColumns(columns)}\n                    onRowClick={this.enhanceOnRowClick(onRowClick)}\n                    getRowDescriptor={this.enhanceGetRowDescriptor(getRowDescriptor)}\n                />\n            );\n        }\n\n        private renderHeadCell = () => {\n            const {data, selectedIds} = this.props;\n            let disabled = true;\n            let indeterminate = false;\n            let checked = true;\n            data.forEach((item, index) => {\n                if (this.isDisabled(item, index)) {\n                    return;\n                } else {\n                    disabled = false;\n                }\n\n                const id = Table.getRowId(this.props, item, index);\n                const itemChecked = selectedIds.includes(id);\n\n                if (itemChecked) {\n                    indeterminate = true;\n                } else {\n                    checked = false;\n                }\n            });\n\n            if (checked) {\n                indeterminate = false;\n            }\n\n            if (disabled) {\n                checked = false;\n                indeterminate = false;\n            }\n\n            return this.renderCheckBox({\n                disabled,\n                checked,\n                handler: this.handleAllCheckBoxUpdate,\n                indeterminate,\n            });\n        };\n\n        private renderBodyCell = (item: I, index: number) => {\n            const {selectedIds} = this.props;\n            const id = Table.getRowId(this.props, item, index);\n            const checked = selectedIds.includes(id);\n\n            return this.renderCheckBox({\n                disabled: this.isDisabled(item, index),\n                checked,\n                handler: this.handleCheckBoxUpdate.bind(this, id, index),\n            });\n        };\n\n        private renderCheckBox({\n            disabled,\n            checked,\n            handler,\n            indeterminate,\n        }: {\n            checked: boolean;\n            disabled: boolean;\n            handler: React.ChangeEventHandler<HTMLInputElement>;\n            indeterminate?: boolean; //only for header cell checkbox\n        }) {\n            return (\n                <Checkbox\n                    size=\"l\"\n                    checked={checked}\n                    indeterminate={indeterminate}\n                    disabled={disabled}\n                    onChange={handler}\n                    className={b('selection-checkbox', {\n                        'vertical-align': this.props.verticalAlign,\n                    })}\n                    controlProps={{\n                        'aria-label': i18n('label-row-select'),\n                    }}\n                />\n            );\n        }\n\n        private handleCheckBoxUpdate = (\n            id: string,\n            index: number,\n            event: React.ChangeEvent<HTMLInputElement>,\n        ) => {\n            const {checked} = event.target;\n            // @ts-expect-error shiftKey is defined for click events\n            const isShiftPressed = event.nativeEvent.shiftKey;\n            const {data, selectedIds, onSelectionChange} = this.props;\n\n            if (\n                isShiftPressed &&\n                this.lastCheckedIndex !== undefined &&\n                this.lastCheckedIndex >= 0\n            ) {\n                const begin = Math.min(this.lastCheckedIndex, index);\n                const end = Math.max(this.lastCheckedIndex, index);\n\n                const dataIds = data.map((item, i) => Table.getRowId(this.props, item, i));\n                const diffIds = dataIds.filter(\n                    (_id, i) => begin <= i && i <= end && !this.isDisabled(data[i], i),\n                );\n\n                onSelectionChange(\n                    checked ? union(selectedIds, diffIds) : without(selectedIds, ...diffIds),\n                );\n            } else {\n                onSelectionChange(checked ? [...selectedIds, id] : without(selectedIds, id));\n            }\n\n            this.lastCheckedIndex = index;\n        };\n\n        private handleAllCheckBoxUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n            const {checked} = event.target;\n            const {data, selectedIds, onSelectionChange} = this.props;\n            const dataIds = data.map((item, index) => Table.getRowId(this.props, item, index));\n            const notDisabledItemIds = dataIds.filter(\n                (_id, index) => !this.isDisabled(data[index], index),\n            );\n\n            onSelectionChange(\n                checked ? union(selectedIds, notDisabledItemIds) : difference(selectedIds, dataIds),\n            );\n        };\n\n        // eslint-disable-next-line @typescript-eslint/member-ordering, react/sort-comp\n        private enhanceColumns = memoize((columns: TableColumnConfig<I>[]) => {\n            const selectionColumn: TableColumnConfig<I> = {\n                id: selectionColumnId,\n                name: this.renderHeadCell,\n                template: this.renderBodyCell,\n                className: b('checkbox_cell'),\n                sticky: columns?.[0]?.sticky === 'start' ? 'start' : undefined,\n            };\n\n            return [selectionColumn, ...columns];\n        });\n\n        // eslint-disable-next-line @typescript-eslint/member-ordering\n        private enhanceOnRowClick = memoize(\n            (\n                onRowClick?: (\n                    item: I,\n                    index: number,\n                    event: React.MouseEvent<HTMLTableRowElement>,\n                ) => void,\n            ) => {\n                if (!onRowClick) {\n                    return onRowClick;\n                }\n\n                return (item: I, index: number, event: React.MouseEvent<HTMLTableRowElement>) => {\n                    const checkboxClassName = b('selection-checkbox');\n                    if (\n                        // @ts-expect-error\n                        event.nativeEvent.target.matches(\n                            `.${checkboxClassName}, .${checkboxClassName} *`,\n                        )\n                    ) {\n                        return undefined;\n                    }\n\n                    return onRowClick(item, index, event);\n                };\n            },\n        );\n\n        // eslint-disable-next-line @typescript-eslint/member-ordering\n        private enhanceGetRowDescriptor = memoize(\n            (getRowDescriptor?: TableProps<I>['getRowDescriptor']) => {\n                const currentGetRowDescriptor: TableProps<I>['getRowDescriptor'] = (\n                    item: I,\n                    index: number,\n                ) => {\n                    const {selectedIds, getRowClassNames} = this.props;\n                    const descriptor = getRowDescriptor?.(item, index) || {};\n\n                    if (descriptor.classNames === undefined) {\n                        descriptor.classNames = getRowClassNames?.(item, index) || [];\n                    }\n\n                    const id = Table.getRowId(this.props, item, index);\n                    const selected = selectedIds.includes(id);\n\n                    descriptor.classNames.push(b('row', {selected}));\n\n                    return descriptor;\n                };\n\n                return currentGetRowDescriptor;\n            },\n        );\n\n        private isDisabled = (item: I, index: number) => {\n            const {isRowDisabled, isRowSelectionDisabled, getRowDescriptor} = this.props;\n            if (isRowSelectionDisabled && isRowSelectionDisabled(item, index)) {\n                return true;\n            }\n            return (\n                getRowDescriptor?.(item, index)?.disabled || isRowDisabled?.(item, index) || false\n            );\n        };\n    };\n}\n"]}