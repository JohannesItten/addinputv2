{"version":3,"file":"LayoutPresenter.js","sourceRoot":"../../../../../../src","sources":["components/layout/demo/LayoutPresenter/LayoutPresenter.tsx"],"names":[],"mappings":";;;;AAEA,iDAAmC;AAEnC,mDAA6C;AAC7C,6CAAqC;AACrC,sEAA8D;AAC9D,sDAAyC;AASzC,SAAS,KAAK,CAAC,EAAC,KAAK,EAAmB;IACpC,MAAM,EACF,gBAAgB,EAChB,KAAK,EAAE,EAAC,WAAW,EAAC,GACvB,GAAG,IAAA,mCAAgB,GAAE,CAAC;IACvB,OAAO,CACH,wBAAC,WAAI,IAAC,SAAS,EAAC,QAAQ,EAAC,KAAK,EAAC,GAAG,EAAC,SAAS,EAAE,IAAA,YAAE,EAAC,EAAC,EAAE,EAAE,GAAG,EAAC,CAAC,aACtD,KAAK,IAAI,CACN,uBAAC,WAAI,IAAC,OAAO,EAAC,aAAa,EAAC,EAAE,EAAC,KAAK,YAC/B,KAAK,GACH,CACV,EACD,wBAAC,WAAI,IAAC,KAAK,EAAC,WAAW,EAAC,EAAE,EAAC,KAAK,qCACP,gBAAgB,yBAAqB,GAAG,EAC5D,WAAW,CAAC,gBAAgB,CAAC,IAC3B,IACJ,CACV,CAAC;AACN,CAAC;AAEM,MAAM,eAAe,GAAG,CAAC,EAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAuB,EAAE,EAAE;IACtF,OAAO,CACH,wBAAC,qBAAa,IAAC,MAAM,EAAE,EAAC,MAAM,EAAE,cAAc,EAAE,IAAI,EAAC,EAAE,MAAM,mBACzD,uBAAC,KAAK,IAAC,KAAK,EAAE,KAAK,GAAI,EACvB,gCACI,KAAK,EAAE;oBACH,KAAK,EAAE,MAAM;oBACb,MAAM,EAAE,MAAM;oBACd,MAAM,EAAE,sBAAsB;iBACjC,YAEA,QAAQ,GACP,IACM,CACnB,CAAC;AACN,CAAC,CAAC;AAfW,QAAA,eAAe,mBAe1B","sourcesContent":["import type * as React from 'react';\n\nimport {Text} from '../../../Text';\nimport type {LayoutTheme} from '../../../layout';\nimport {ThemeProvider} from '../../../theme';\nimport {Flex} from '../../Flex/Flex';\nimport {useLayoutContext} from '../../hooks/useLayoutContext';\nimport {sp} from '../../spacing/spacing';\n\ninterface LayoutPresenterProps {\n    children?: React.ReactNode;\n    title?: string;\n    theme?: LayoutTheme;\n    fixBreakpoints?: boolean;\n}\n\nfunction Title({title}: {title?: string}) {\n    const {\n        activeMediaQuery,\n        theme: {breakpoints},\n    } = useLayoutContext();\n    return (\n        <Flex direction=\"column\" space=\"5\" className={sp({mb: '5'})}>\n            {title && (\n                <Text variant=\"subheader-2\" as=\"div\">\n                    {title}\n                </Text>\n            )}\n            <Text color=\"secondary\" as=\"div\">\n                Active media query: {activeMediaQuery}, breakpoint value:{' '}\n                {breakpoints[activeMediaQuery]}\n            </Text>\n        </Flex>\n    );\n}\n\nexport const LayoutPresenter = ({children, title, theme: config}: LayoutPresenterProps) => {\n    return (\n        <ThemeProvider layout={{config, fixBreakpoints: true}} scoped>\n            <Title title={title} />\n            <div\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    border: '3px dashed lightgray',\n                }}\n            >\n                {children}\n            </div>\n        </ThemeProvider>\n    );\n};\n"]}