{"version":3,"file":"toItemList.js","sourceRoot":"../../../../../src","sources":["components/DropdownMenu/utils/toItemList.ts"],"names":[],"mappings":";;AAAA,gCA+CC;AA/CD,SAAgB,UAAU,CAGxB,KAAwB,EAAE,SAAmB,EAAE,OAAiB,EAAE,EAAE,UAAU,GAAG,CAAC;IAChF,MAAM,YAAY,GAAe,EAAE,CAAC;IACpC,IAAI,UAAU,GAAG,KAAK,CAAC;IACvB,IAAI,KAAK,GAAG,UAAU,CAAC;IAEvB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;QACvB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YACtB,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAE5D,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC5B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,CAAC;YAED,YAAY,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;YACjC,KAAK,IAAI,UAAU,CAAC,MAAM,CAAC;YAC3B,UAAU,GAAG,IAAI,CAAC;QACtB,CAAC;aAAM,CAAC;YACJ,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,SAAS;YACb,CAAC;YAED,IAAI,UAAU,EAAE,CAAC;gBACb,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,CAAC;YAED,MAAM,WAAW,GAAG;gBAChB,GAAG,IAAI;gBACP,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,KAAK,EAAE,CAAC;aACJ,CAAC;YAEzB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,WAAW,CAAC,KAAK,GAAG,UAAU,CAC1B,IAAI,CAAC,KAAK,EACV,SAAS,EACT,WAAW,CAAC,IAAI,CACnB,CAAC;YACN,CAAC;YAED,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC/B,UAAU,GAAG,KAAK,CAAC;QACvB,CAAC;IACL,CAAC;IAED,OAAO,YAAY,CAAC;AACxB,CAAC","sourcesContent":["export function toItemList<\n    Item extends {hidden?: boolean; items?: (Item | Item[])[]},\n    ListItem extends {items?: ListItem[]; path: number[]},\n>(items: (Item | Item[])[], separator: ListItem, path: number[] = [], startIndex = 0): ListItem[] {\n    const updatedItems: ListItem[] = [];\n    let addedGroup = false;\n    let index = startIndex;\n\n    for (const item of items) {\n        if (Array.isArray(item)) {\n            const groupItems = toItemList(item, separator, path, index);\n\n            if (updatedItems.length !== 0) {\n                updatedItems.push(separator);\n            }\n\n            updatedItems.push(...groupItems);\n            index += groupItems.length;\n            addedGroup = true;\n        } else {\n            if (item.hidden) {\n                continue;\n            }\n\n            if (addedGroup) {\n                updatedItems.push(separator);\n            }\n\n            const updatedItem = {\n                ...item,\n                path: [...path, index++],\n            } as unknown as ListItem;\n\n            if (item.items) {\n                updatedItem.items = toItemList<Item, ListItem>(\n                    item.items,\n                    separator,\n                    updatedItem.path,\n                );\n            }\n\n            updatedItems.push(updatedItem);\n            addedGroup = false;\n        }\n    }\n\n    return updatedItems;\n}\n"]}