{"version":3,"file":"getElementRef.js","sourceRoot":"../../../../src","sources":["components/utils/getElementRef.ts"],"names":[],"mappings":"AAAA,0EAA0E;AAC1E,MAAM,UAAU,aAAa,CAAC,OAA2B;IACrD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;QACxC,wFAAwF;QACxF,MAAM,MAAM,GAAG,MAAM,CAAC,wBAAwB,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC;QAC1E,IAAI,MAAM,IAAI,gBAAgB,IAAI,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;YAChE,OAAQ,OAAe,CAAC,GAAG,CAAC;QAChC,CAAC;IACL,CAAC;IACD,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,IAAK,OAAe,CAAC,GAAG,CAAC;AACrD,CAAC","sourcesContent":["// Access the element's ref using a method that doesn't produce a warning.\nexport function getElementRef(element: React.ReactElement) {\n    if (process.env.NODE_ENV !== 'production') {\n        // Before React 19, there is an access check for ReactElement's props.ref in dev builds.\n        const getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n        if (getter && 'isReactWarning' in getter && getter.isReactWarning) {\n            return (element as any).ref;\n        }\n    }\n    return element.props.ref ?? (element as any).ref;\n}\n"]}