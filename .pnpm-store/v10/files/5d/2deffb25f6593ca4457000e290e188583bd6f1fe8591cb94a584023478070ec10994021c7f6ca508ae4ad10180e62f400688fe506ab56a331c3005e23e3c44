{"version":3,"file":"ListLoadingIndicator.js","sourceRoot":"../../../../src","sources":["components/List/ListLoadingIndicator.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,qDAA+B;AAE/B,gDAA4C;AAC5C,+CAAiC;AACjC,uCAAkC;AAElC,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,MAAM,CAAC,CAAC;AACjB,MAAM,oBAAoB,GAAG,CAAC,KAAiC,EAAE,EAAE;IACtE,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAwB,IAAI,CAAC,CAAC;IAEtD,IAAA,uBAAe,EAAC,EAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC,CAAC,CAAC;IAEzE,OAAO,CACH,gCAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,mBAAmB,CAAC,YAC5C,uBAAC,eAAM,IAAC,EAAE,EAAE,aAAa,GAAI,GAC3B,CACT,CAAC;AACN,CAAC,CAAC;AAVW,QAAA,oBAAoB,wBAU/B","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useIntersection} from '../../hooks';\nimport {Loader} from '../Loader';\nimport {block} from '../utils/cn';\n\nconst b = block('list');\nexport const ListLoadingIndicator = (props: {onIntersect?: () => void}) => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n\n    useIntersection({element: ref.current, onIntersect: props?.onIntersect});\n\n    return (\n        <div ref={ref} className={b('loading-indicator')}>\n            <Loader qa={'list-loader'} />\n        </div>\n    );\n};\n"]}