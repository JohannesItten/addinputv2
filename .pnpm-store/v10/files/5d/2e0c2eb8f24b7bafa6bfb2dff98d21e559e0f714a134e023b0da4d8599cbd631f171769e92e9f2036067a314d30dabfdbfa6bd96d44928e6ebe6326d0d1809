{"version":3,"file":"DialogFooter.js","sourceRoot":"../../../../../src","sources":["components/Dialog/DialogFooter/DialogFooter.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport type {UseFloatingOptions} from '@floating-ui/react';\n\nimport {useForkRef} from '../../../hooks';\nimport {Button} from '../../Button';\nimport type {ButtonButtonProps, ButtonLinkProps, ButtonView} from '../../Button';\nimport {Popup} from '../../Popup';\nimport {block} from '../../utils/cn';\nimport {DialogPrivateContext} from '../DialogPrivateContext';\n\nimport './DialogFooter.scss';\n\nconst b = block('dialog-footer');\n\ntype ButtonPreset = 'default' | 'success' | 'danger';\n\ninterface DialogFooterOwnProps {\n    onClickButtonApply?: (event: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => void;\n    onClickButtonCancel?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n    textButtonCancel?: string;\n    textButtonApply?: string;\n    propsButtonCancel?: ButtonButtonProps | ButtonLinkProps;\n    propsButtonApply?: ButtonButtonProps | ButtonLinkProps;\n    loading?: boolean;\n    children?: React.ReactNode;\n    errorText?: string;\n    renderButtons?: (\n        buttonApply: React.ReactNode,\n        buttonCancel: React.ReactNode,\n    ) => React.ReactNode;\n    className?: string;\n}\n\ninterface DialogFooterDefaultProps {\n    preset: ButtonPreset;\n    showError: boolean;\n}\n\n// TODO: Оно точно нужно?\nfunction getButtonView(preset: ButtonPreset): ButtonView {\n    switch (preset) {\n        case 'default':\n            return 'action';\n        case 'success':\n            return 'action';\n        case 'danger':\n            return 'action';\n        default:\n            return 'action';\n    }\n}\n\nexport type DialogFooterProps = DialogFooterOwnProps & Partial<DialogFooterDefaultProps>;\n\nexport function DialogFooter(props: DialogFooterProps) {\n    const {\n        onClickButtonCancel,\n        onClickButtonApply,\n        loading,\n        textButtonCancel,\n        textButtonApply,\n        propsButtonCancel,\n        propsButtonApply,\n        preset = 'default',\n        children,\n        errorText,\n        showError = false,\n        renderButtons,\n        className,\n    } = props;\n\n    const {initialFocusRef, initialFocusAction, onTooltipEscapeKeyDown} =\n        React.useContext(DialogPrivateContext);\n\n    const errorTooltipRef = React.useRef<HTMLButtonElement>(null);\n    const apllyBtnRef = useForkRef(\n        errorTooltipRef,\n        initialFocusAction === 'apply' ? initialFocusRef : null,\n    );\n    const cancelBtnRef = useForkRef(initialFocusAction === 'cancel' ? initialFocusRef : null);\n\n    const buttonCancel = (\n        <div className={b('button', {action: 'cancel'})}>\n            <Button\n                ref={cancelBtnRef}\n                view={textButtonApply ? 'flat' : 'normal'}\n                size=\"l\"\n                width=\"max\"\n                onClick={onClickButtonCancel}\n                disabled={loading}\n                {...propsButtonCancel}\n            >\n                {textButtonCancel}\n            </Button>\n        </div>\n    );\n\n    const handleOpenChange = React.useCallback<NonNullable<UseFloatingOptions['onOpenChange']>>(\n        (isOpen, event, reason) => {\n            if (!isOpen && event && reason === 'escape-key') {\n                onTooltipEscapeKeyDown?.(event as KeyboardEvent);\n            }\n        },\n        [onTooltipEscapeKeyDown],\n    );\n\n    const buttonApply = (\n        <div className={b('button', {action: 'apply'})}>\n            <Button\n                ref={apllyBtnRef}\n                type=\"submit\"\n                view={getButtonView(preset)}\n                size=\"l\"\n                width=\"max\"\n                onClick={onClickButtonApply}\n                loading={loading}\n                className={b('button-apply', {preset})}\n                {...propsButtonApply}\n            >\n                {textButtonApply}\n            </Button>\n            {errorText && (\n                <Popup\n                    open={showError}\n                    onOpenChange={handleOpenChange}\n                    anchorRef={errorTooltipRef}\n                    placement=\"top\"\n                    disablePortal\n                    hasArrow\n                >\n                    <div className={b('error')}>{errorText}</div>\n                </Popup>\n            )}\n        </div>\n    );\n\n    return (\n        <div className={b(null, className)}>\n            <div className={b('children')}>{children}</div>\n            <div className={b('bts-wrapper')}>\n                {renderButtons ? (\n                    renderButtons(buttonApply, buttonCancel)\n                ) : (\n                    <React.Fragment>\n                        {textButtonCancel && buttonCancel}\n                        {textButtonApply && buttonApply}\n                    </React.Fragment>\n                )}\n            </div>\n        </div>\n    );\n}\n"]}