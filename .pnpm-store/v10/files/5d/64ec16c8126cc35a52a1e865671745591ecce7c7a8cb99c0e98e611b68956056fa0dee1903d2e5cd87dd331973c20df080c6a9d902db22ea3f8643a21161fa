{"version":3,"file":"DisclosureSummary.js","sourceRoot":"../../../../../src","sources":["components/Disclosure/DisclosureSummary/DisclosureSummary.tsx"],"names":[],"mappings":";;AAoCA,8CAMC;AAED,4DAqCC;;AA/ED,4DAA8C;AAE9C,8CAA0C;AAE1C,+DAAkF;AAClF,+CAA6C;AAE7C,MAAM,0BAA0B,GAAmC;IAC/D,CAAC,EAAE,EAAE;IACL,CAAC,EAAE,EAAE;IACL,EAAE,EAAE,EAAE;CACT,CAAC;AAEF,SAAS,uBAAuB;IAC5B,IAAA,eAAQ,EACJ,iIAAiI,CACpI,CAAC;AACN,CAAC;AAiBD,SAAgB,iBAAiB,CAAC,EAAC,QAAQ,EAAE,cAAc,EAAE,EAAE,EAAyB;IACpF,MAAM,YAAY,GAAG,IAAA,uCAAmB,GAAE,CAAC;IAC3C,MAAM,EAAC,YAAY,EAAE,cAAc,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAC,GAAG,IAAA,2CAAuB,GAAE,CAAC;IACzF,MAAM,KAAK,GAAG,EAAC,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;IAEhF,OAAO,cAAc,CAAC,KAAK,EAAE,uBAAC,wBAAwB,OAAK,KAAK,GAAI,CAAC,CAAC;AAC1E,CAAC;AAED,SAAgB,wBAAwB,CAAC,EACrC,OAAO,EACP,YAAY,EACZ,EAAE,EACF,QAAQ,EACR,QAAQ,EACR,EAAE,GACiC;IACnC,MAAM,EAAC,IAAI,EAAE,OAAO,EAAE,aAAa,EAAC,GAAG,IAAA,2CAAuB,GAAE,CAAC;IACjE,IAAI,QAAQ,GAAG,aAAa,CAAC;IAE7B,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC;QACtB,uBAAuB,EAAE,CAAC;QAC1B,QAAQ,GAAG,OAAO,CAAC;IACvB,CAAC;IACD,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;QACvB,uBAAuB,EAAE,CAAC;QAC1B,QAAQ,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,OAAO,CACH,oCACI,IAAI,EAAC,QAAQ,mBACE,QAAQ,EACvB,SAAS,EAAE,IAAA,aAAC,EAAC,SAAS,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,mBACrC,YAAY,EAC3B,EAAE,EAAE,EAAE,EACN,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,aACT,EAAE,IAAI,wBAAY,CAAC,OAAO,aAEnC,uBAAC,yBAAW,IACR,IAAI,EAAE,0BAA0B,CAAC,IAAI,CAAC,EACtC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,GACxC,EACD,OAAO,IACH,CACZ,CAAC;AACN,CAAC;AAED,iBAAiB,CAAC,WAAW,GAAG,mBAAmB,CAAC","sourcesContent":["import type * as React from 'react';\n\nimport {ArrowToggle} from '../../ArrowToggle';\nimport type {QAProps} from '../../types';\nimport {warnOnce} from '../../utils/warn';\nimport type {DisclosureSize} from '../Disclosure';\nimport {useDisclosureAttributes, useToggleDisclosure} from '../DisclosureContext';\nimport {DisclosureQa, b} from '../constants';\n\nconst ComponentSizeToIconSizeMap: Record<DisclosureSize, number> = {\n    m: 14,\n    l: 16,\n    xl: 20,\n};\n\nfunction warnAboutPhysicalValues() {\n    warnOnce(\n        '[Disclosure] Physical values (left, right) of \"arrowPosition\" property are deprecated. Use logical values (start, end) instead.',\n    );\n}\n\ninterface DisclosureSummaryRenderFunctionProps extends QAProps {\n    onClick: (e: React.SyntheticEvent) => void;\n    ariaControls: string;\n    id: string;\n    expanded: boolean;\n    disabled?: boolean;\n}\n\nexport interface DisclosureSummaryProps extends QAProps {\n    children: (\n        props: DisclosureSummaryRenderFunctionProps,\n        defaultSummary: React.ReactElement,\n    ) => React.ReactElement;\n}\n\nexport function DisclosureSummary({children: renderFunction, qa}: DisclosureSummaryProps) {\n    const handleToggle = useToggleDisclosure();\n    const {ariaControls, ariaLabelledby: id, expanded, disabled} = useDisclosureAttributes();\n    const props = {onClick: handleToggle, ariaControls, id, expanded, disabled, qa};\n\n    return renderFunction(props, <DefaultDisclosureSummary {...props} />);\n}\n\nexport function DefaultDisclosureSummary({\n    onClick,\n    ariaControls,\n    id,\n    expanded,\n    disabled,\n    qa,\n}: DisclosureSummaryRenderFunctionProps) {\n    const {size, summary, arrowPosition} = useDisclosureAttributes();\n    let arrowMod = arrowPosition;\n\n    if (arrowMod === 'left') {\n        warnAboutPhysicalValues();\n        arrowMod = 'start';\n    }\n    if (arrowMod === 'right') {\n        warnAboutPhysicalValues();\n        arrowMod = 'end';\n    }\n    return (\n        <button\n            type=\"button\"\n            aria-expanded={expanded}\n            className={b('trigger', {disabled, arrow: arrowMod})}\n            aria-controls={ariaControls}\n            id={id}\n            onClick={onClick}\n            disabled={disabled}\n            data-qa={qa || DisclosureQa.SUMMARY}\n        >\n            <ArrowToggle\n                size={ComponentSizeToIconSizeMap[size]}\n                direction={expanded ? 'top' : 'bottom'}\n            />\n            {summary}\n        </button>\n    );\n}\n\nDisclosureSummary.displayName = 'DisclosureSummary';\n"]}