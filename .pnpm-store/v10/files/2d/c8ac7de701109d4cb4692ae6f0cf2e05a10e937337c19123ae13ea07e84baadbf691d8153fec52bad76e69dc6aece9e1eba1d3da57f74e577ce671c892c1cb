{"version":3,"file":"MobileActionsMenu.js","sourceRoot":"../../../../../../src","sources":["components/FilePreview/FilePreviewActions/MobileActionsMenu/MobileActionsMenu.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,gBAAgB,EAAC,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAC,MAAM,EAAC,iCAAwB;AACvC,OAAO,EAAC,IAAI,EAAC,+BAAsB;AACnC,OAAO,EAAC,IAAI,EAAC,+BAAsB;AAEnC,OAAO,EAAC,KAAK,EAAC,gCAAuB;AACrC,OAAO,EAAC,IAAI,EAAC,+BAAsB;AACnC,OAAO,EAAC,KAAK,EAAC,6BAA0B;AAGxC,iCAAkC;AAElC,MAAM,EAAE,GAAG,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAQhD,MAAM,cAAc,GAAG,CAAC,IAAuB,EAAE,EAAE;IAC/C,OAAO,CACH,eAAK,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,aAC1B,IAAI,CAAC,IAAI,EACV,KAAC,IAAI,IAAC,OAAO,EAAC,QAAQ,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,kBAC7C,IAAI,CAAC,KAAK,GACR,IACL,CACT,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAyB,EAAE,EAAE;IAC5F,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAElE,MAAM,qBAAqB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE;QACjD,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,eAAe,GAAG,KAAK,CAAC,WAAW,CAEvC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE;QACrB,IAAI,KAAK,EAAE,CAAC;YACR,iDAAiD;YACjD,IAAI,CAAC,OAAO,EAAE,CAAC,KAAqD,CAAC,CAAC;QAC1E,CAAC;QACD,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,uBAAuB,GAAG,GAAG,EAAE;QACjC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;IAErD,OAAO,CACH,MAAC,KAAK,CAAC,QAAQ,eACX,KAAC,MAAM,IACH,IAAI,EAAE,UAAU,EAChB,SAAS,EAAE,EAAE,CAAC,cAAc,CAAC,EAC7B,OAAO,EAAE,uBAAuB,EAChC,IAAI,EAAC,GAAG,YAER,KAAC,IAAI,IAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,GAAI,GAClD,EACT,KAAC,KAAK,IACF,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,EACtB,OAAO,EAAE,cAAc,EACvB,OAAO,EAAE,qBAAqB,EAC9B,KAAK,EAAE,QAAQ,YAEf,KAAC,IAAI,IACD,KAAK,EAAE,OAAO,EACd,UAAU,EAAE,KAAK,EACjB,UAAU,EAAE,cAAc,EAC1B,UAAU,EAAE,EAAE,EACd,WAAW,EAAE,KAAK,EAClB,WAAW,EAAE,eAAe,GAC9B,GACE,IACK,CACpB,CAAC;AACN,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {EllipsisVertical} from '@gravity-ui/icons';\n\nimport {Button} from '../../../Button';\nimport {Icon} from '../../../Icon';\nimport {List} from '../../../List';\nimport type {ListProps} from '../../../List';\nimport {Sheet} from '../../../Sheet';\nimport {Text} from '../../../Text';\nimport {block} from '../../../utils/cn';\nimport type {FilePreviewAction} from '../../types';\n\nimport './MobileActionsMenu.scss';\n\nconst cn = block('file-preview-actions-mobile');\n\nexport interface MobileActionsMenuProps {\n    actions: FilePreviewAction[];\n    fileName: string;\n    isCustomImage?: boolean;\n}\n\nconst renderListItem = (item: FilePreviewAction) => {\n    return (\n        <div className={cn('list-item')}>\n            {item.icon}\n            <Text variant=\"body-2\" title={item.title} ellipsis>\n                {item.title}\n            </Text>\n        </div>\n    );\n};\n\nexport const MobileActionsMenu = ({actions, fileName, isCustomImage}: MobileActionsMenuProps) => {\n    const [showMobileMenu, setShowMobileMenu] = React.useState(false);\n\n    const handleMobileMenuClose = React.useCallback(() => {\n        setShowMobileMenu(false);\n    }, []);\n\n    const handleItemClick = React.useCallback<\n        NonNullable<ListProps<FilePreviewAction>['onItemClick']>\n    >((item, _, __, event) => {\n        if (event) {\n            // function can be called only on a mobile device\n            item.onClick?.(event as React.MouseEvent<HTMLDivElement, MouseEvent>);\n        }\n        setShowMobileMenu(false);\n    }, []);\n\n    const handleMobileButtonClick = () => {\n        setShowMobileMenu(true);\n    };\n\n    const buttonView = isCustomImage ? 'raised' : 'flat';\n\n    return (\n        <React.Fragment>\n            <Button\n                view={buttonView}\n                className={cn('actions-menu')}\n                onClick={handleMobileButtonClick}\n                size=\"s\"\n            >\n                <Icon data={EllipsisVertical} height={16} width={16} />\n            </Button>\n            <Sheet\n                className={cn('sheet')}\n                visible={showMobileMenu}\n                onClose={handleMobileMenuClose}\n                title={fileName}\n            >\n                <List\n                    items={actions}\n                    filterable={false}\n                    renderItem={renderListItem}\n                    itemHeight={44}\n                    virtualized={false}\n                    onItemClick={handleItemClick}\n                />\n            </Sheet>\n        </React.Fragment>\n    );\n};\n"]}