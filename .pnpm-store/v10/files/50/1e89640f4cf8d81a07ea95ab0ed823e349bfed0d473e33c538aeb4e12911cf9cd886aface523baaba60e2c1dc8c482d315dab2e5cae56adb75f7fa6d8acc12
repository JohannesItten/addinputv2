{"version":3,"file":"User.js","sourceRoot":"../../../../src","sources":["components/User/User.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,MAAM,EAAC,2BAAkB;AACjC,OAAO,EAAC,KAAK,EAAC,uBAAoB;AAClC,OAAO,EAAC,cAAc,EAAC,mCAAgC;AAEvD,OAAO,EAAC,aAAa,EAAE,iBAAiB,EAAE,MAAM,EAAC,uBAAoB;AAGrE,oBAAqB;AAErB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AAExB,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAA4B,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;IAC3E,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,GAAG,iBAAiB,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAC,GAAG,KAAK,CAAC;IAE1F,MAAM,SAAS,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9D,MAAM,gBAAgB,GAAG,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;IAEnF,IAAI,UAAU,GAAoB,IAAI,CAAC;IAEvC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;QAC7B,UAAU,GAAG,KAAC,MAAM,IAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,GAAI,CAAC;IAC1E,CAAC;SAAM,IAAI,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC;QACtC,UAAU,GAAG,MAAM,CAAC;IACxB,CAAC;SAAM,IAAI,MAAM,EAAE,CAAC;QAChB,UAAU,GAAG,KAAC,MAAM,OAAK,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,SAAS,GAAI,CAAC;IACtF,CAAC;IAED,MAAM,eAAe,GAAG,OAAO,CAAC,WAAW,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAEzE,OAAO,CACH,eACI,SAAS,EAAE,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,SAAS,CAAC,EAC/B,KAAK,EAAE,KAAK,aACH,EAAE,EACX,GAAG,EAAE,GAAG,KACJ,cAAc,CAAC,KAAK,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,aAE3C,UAAU,CAAC,CAAC,CAAC,cAAK,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAG,UAAU,GAAO,CAAC,CAAC,CAAC,IAAI,EACnE,IAAI,IAAI,eAAe,CAAC,CAAC,CAAC,CACvB,eAAK,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,aACpB,IAAI,CAAC,CAAC,CAAC,CACJ,eAAM,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,aAAW,MAAM,CAAC,IAAI,YAC7D,IAAI,GACF,CACV,CAAC,CAAC,CAAC,IAAI,EACP,eAAe,CAAC,CAAC,CAAC,CACf,eACI,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,EAC3B,KAAK,EAAE,gBAAgB,aACd,MAAM,CAAC,WAAW,YAE1B,WAAW,GACT,CACV,CAAC,CAAC,CAAC,IAAI,IACN,CACT,CAAC,CAAC,CAAC,IAAI,IACN,CACT,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {Avatar} from '../Avatar';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\n\nimport {COMPACT_SIZES, DEFAULT_USER_SIZE, UserQa} from './constants';\nimport type {UserProps} from './types';\n\nimport './User.scss';\n\nconst b = block('user');\n\nexport const User = React.forwardRef<HTMLDivElement, UserProps>((props, ref) => {\n    const {avatar, name, description, size = DEFAULT_USER_SIZE, className, style, qa} = props;\n\n    const nameTitle = typeof name === 'string' ? name : undefined;\n    const descriptionTitle = typeof description === 'string' ? description : undefined;\n\n    let avatarView: React.ReactNode = null;\n\n    if (typeof avatar === 'string') {\n        avatarView = <Avatar imgUrl={avatar} size={size} title={nameTitle} />;\n    } else if (React.isValidElement(avatar)) {\n        avatarView = avatar;\n    } else if (avatar) {\n        avatarView = <Avatar {...avatar} size={size} title={avatar.title || nameTitle} />;\n    }\n\n    const showDescription = Boolean(description && !COMPACT_SIZES.has(size));\n\n    return (\n        <div\n            className={b({size}, className)}\n            style={style}\n            data-qa={qa}\n            ref={ref}\n            {...filterDOMProps(props, {labelable: true})}\n        >\n            {avatarView ? <div className={b('avatar')}>{avatarView}</div> : null}\n            {name || showDescription ? (\n                <div className={b('info')}>\n                    {name ? (\n                        <span className={b('name')} title={nameTitle} data-qa={UserQa.NAME}>\n                            {name}\n                        </span>\n                    ) : null}\n                    {showDescription ? (\n                        <span\n                            className={b('description')}\n                            title={descriptionTitle}\n                            data-qa={UserQa.DESCRIPTION}\n                        >\n                            {description}\n                        </span>\n                    ) : null}\n                </div>\n            ) : null}\n        </div>\n    );\n});\n\nUser.displayName = 'User';\n"]}