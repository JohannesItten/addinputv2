{"version":3,"file":"useListKeydown.js","sourceRoot":"../../../../../src","sources":["components/useList/hooks/useListKeydown.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {KeyCode} from '../../../constants';\nimport type {ListOnItemClick, UseListResult} from '../types';\nimport {findNextIndex} from '../utils/findNextIndex';\nimport {scrollToListItem} from '../utils/scrollToListItem';\n\ninterface UseListKeydownProps<T = unknown> {\n    onItemClick?: ListOnItemClick;\n    containerRef?: React.RefObject<HTMLDivElement>;\n    enabled?: boolean;\n    list: UseListResult<T>;\n}\n\n// Use this hook if you need keyboard support for tree structure lists\nexport const useListKeydown = ({containerRef, onItemClick, enabled, list}: UseListKeydownProps) => {\n    const activateItem = React.useCallback(\n        (index?: number, scrollTo = true) => {\n            if (typeof index === 'number' && list.structure.visibleFlattenIds[index]) {\n                if (scrollTo) {\n                    scrollToListItem(\n                        list.structure.visibleFlattenIds[index],\n                        containerRef?.current,\n                    );\n                }\n\n                list.state.setActiveItemId?.(list.structure.visibleFlattenIds[index]);\n            }\n        },\n        [list.structure.visibleFlattenIds, list.state, containerRef],\n    );\n\n    const handleKeyMove = React.useCallback(\n        (event: KeyboardEvent, step: number, defaultItemIndex = 0) => {\n            event.preventDefault();\n\n            const maybeIndex =\n                typeof list.state.activeItemId === 'string'\n                    ? list.structure.visibleFlattenIds.findIndex(\n                          (i) => i === list.state.activeItemId,\n                      )\n                    : -1;\n\n            const nextIndex = findNextIndex({\n                list: list.structure.visibleFlattenIds,\n                index: (maybeIndex > -1 ? maybeIndex : defaultItemIndex) + step,\n                step: Math.sign(step),\n                disabledItemsById: list.state.disabledById,\n            });\n\n            activateItem(nextIndex);\n        },\n        [\n            activateItem,\n            list.state.activeItemId,\n            list.state.disabledById,\n            list.structure.visibleFlattenIds,\n        ],\n    );\n\n    React.useLayoutEffect(() => {\n        const anchor = containerRef?.current;\n\n        if (enabled || !anchor) {\n            return undefined;\n        }\n\n        const handleKeyDown = (event: KeyboardEvent) => {\n            switch (event.key) {\n                case KeyCode.ARROW_DOWN: {\n                    handleKeyMove(event, 1, -1);\n                    break;\n                }\n                case KeyCode.ARROW_UP: {\n                    handleKeyMove(event, -1);\n                    break;\n                }\n                case KeyCode.SPACEBAR:\n                case KeyCode.ENTER: {\n                    if (\n                        list.state.activeItemId &&\n                        !list.state.disabledById[list.state.activeItemId]\n                    ) {\n                        event.preventDefault();\n\n                        onItemClick?.({id: list.state.activeItemId});\n                    }\n                    break;\n                }\n                default: {\n                }\n            }\n        };\n\n        anchor.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            anchor.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [\n        containerRef,\n        enabled,\n        handleKeyMove,\n        list.state.activeItemId,\n        list.state.disabledById,\n        onItemClick,\n    ]);\n};\n"]}