{"version":3,"file":"withTableActions.js","sourceRoot":"../../../../../../src","sources":["components/Table/hoc/withTableActions/withTableActions.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {Ellipsis} from '@gravity-ui/icons';\nimport memoize from 'lodash/memoize';\n\nimport {useUniqId} from '../../../../hooks';\nimport {useBoolean} from '../../../../hooks/private';\nimport {Button} from '../../../Button';\nimport {Icon} from '../../../Icon';\nimport {Menu} from '../../../Menu';\nimport type {MenuItemProps} from '../../../Menu';\nimport {Popup} from '../../../Popup';\nimport type {PopupPlacement} from '../../../Popup';\nimport {block} from '../../../utils/cn';\nimport {getComponentName} from '../../../utils/getComponentName';\nimport type {TableColumnConfig, TableDataItem, TableProps} from '../../Table';\nimport i18n from '../../i18n';\n\nimport './withTableActions.scss';\n\nexport const actionsColumnId = '_actions';\n\nexport function enhanceSystemColumn<I>(\n    columns: TableColumnConfig<I>[],\n    enhancer: (systemColumn: TableColumnConfig<I>) => void,\n) {\n    const existedColumn = columns.find(({id}) => id === actionsColumnId);\n    const systemColumn = existedColumn || {\n        id: actionsColumnId,\n        name: '',\n        sticky: 'end',\n        width: 28, // button width\n        placeholder: '',\n    };\n    enhancer(systemColumn);\n    return existedColumn ? columns : [...columns, systemColumn];\n}\n\ninterface PopupData<I> {\n    item: I;\n    index: number;\n}\n\nexport interface TableAction<I> {\n    text: string;\n    handler: (\n        item: I,\n        index: number,\n        event: React.MouseEvent<HTMLDivElement | HTMLAnchorElement, MouseEvent>,\n    ) => void;\n    href?: ((item: I, index: number) => string) | string;\n    target?: string;\n    rel?: string;\n    disabled?: boolean;\n    theme?: MenuItemProps['theme'];\n    icon?: MenuItemProps['iconStart'];\n    qa?: string;\n}\n\nexport interface TableActionGroup<I> {\n    title: string;\n    items: TableActionConfig<I>[];\n}\n\nexport type TableActionConfig<I> = TableAction<I> | TableActionGroup<I>;\n\n/**\n * common sizes for Menu and Button\n */\nexport type TableRowActionsSize = 's' | 'm' | 'l' | 'xl';\n\nexport type RenderRowActionsProps<I> = {item: I; index: number};\nexport interface WithTableActionsProps<I> {\n    getRowActions?: (item: I, index: number) => TableActionConfig<I>[];\n    renderRowActions?: (props: RenderRowActionsProps<I>) => React.ReactNode;\n    rowActionsSize?: TableRowActionsSize;\n    rowActionsIcon?: React.ReactNode;\n}\n\ninterface WithTableActionsState<I> {\n    popupOpen: boolean;\n    popupData: PopupData<I> | null;\n}\n\nconst isActionGroup = <I extends TableDataItem>(\n    config: TableActionConfig<I>,\n): config is TableActionGroup<I> => {\n    return Array.isArray((config as TableActionGroup<I>).items);\n};\n\nconst b = block('table');\nconst actionsCn = b('actions');\nconst actionsButtonCn = b('actions-button');\n\nconst bPopup = block('table-action-popup');\nconst menuCn = bPopup('menu');\nconst menuItemCn = bPopup('menu-item');\n\nconst DEFAULT_PLACEMENT: PopupPlacement = ['bottom-end', 'top-end'];\n\ntype DefaultRowActionsProps<I extends TableDataItem> = Pick<\n    WithTableActionsProps<I>,\n    'getRowActions' | 'rowActionsSize' | 'rowActionsIcon'\n> &\n    Pick<TableProps<I>, 'isRowDisabled' | 'getRowDescriptor'> & {\n        item: I;\n        index: number;\n        tableQa?: string;\n    };\n\nconst DefaultRowActions = <I extends TableDataItem>({\n    index,\n    item,\n    getRowActions,\n    getRowDescriptor,\n    rowActionsSize,\n    rowActionsIcon,\n    isRowDisabled,\n    tableQa,\n}: DefaultRowActionsProps<I>) => {\n    const [isPopupOpen, , closePopup, togglePopup] = useBoolean(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n    const rowId = useUniqId();\n\n    if (getRowActions === undefined) {\n        return null;\n    }\n\n    const renderPopupMenuItem = (action: TableActionConfig<I>, index: number) => {\n        if (isActionGroup(action)) {\n            return (\n                <Menu.Group key={index} label={action.title}>\n                    {action.items.map(renderPopupMenuItem)}\n                </Menu.Group>\n            );\n        }\n\n        const {text, icon, handler, href, ...restProps} = action;\n\n        return (\n            <Menu.Item\n                key={index}\n                onClick={(event) => {\n                    event.stopPropagation();\n                    handler(item, index, event);\n\n                    closePopup();\n                }}\n                href={typeof href === 'function' ? href(item, index) : href}\n                iconStart={icon}\n                className={menuItemCn}\n                {...restProps}\n            >\n                {text}\n            </Menu.Item>\n        );\n    };\n\n    const disabled = getRowDescriptor?.(item, index)?.disabled || isRowDisabled?.(item, index);\n\n    const actions = getRowActions(item, index);\n\n    if (actions.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className={actionsCn}>\n            <Popup\n                open={isPopupOpen}\n                anchorRef={anchorRef}\n                placement={DEFAULT_PLACEMENT}\n                onOutsideClick={closePopup}\n                id={rowId}\n                qa={tableQa && `${tableQa}-actions-popup`}\n            >\n                <Menu className={menuCn} size={rowActionsSize}>\n                    {actions.map(renderPopupMenuItem)}\n                </Menu>\n            </Popup>\n            <Button\n                view=\"flat-secondary\"\n                className={actionsButtonCn}\n                onClick={togglePopup}\n                size={rowActionsSize}\n                ref={anchorRef}\n                disabled={disabled}\n                qa={tableQa && `${tableQa}-actions-trigger-${index}`}\n                aria-label={i18n('label-actions')}\n                aria-expanded={isPopupOpen}\n                aria-controls={rowId}\n            >\n                {rowActionsIcon ?? <Icon data={Ellipsis} />}\n            </Button>\n        </div>\n    );\n};\n\nexport function withTableActions<I extends TableDataItem, E extends {} = {}>(\n    TableComponent: React.ComponentType<TableProps<I> & E>,\n): React.ComponentType<TableProps<I> & WithTableActionsProps<I> & E> {\n    const componentName = getComponentName(TableComponent);\n    const displayName = `withTableActions(${componentName})`;\n\n    return class extends React.Component<\n        TableProps<I> & WithTableActionsProps<I> & E,\n        WithTableActionsState<I>\n    > {\n        static displayName = displayName;\n\n        state: WithTableActionsState<I> = {\n            popupOpen: false,\n            popupData: null,\n        };\n\n        render() {\n            const {\n                renderRowActions, // eslint-disable-line @typescript-eslint/no-unused-vars\n                getRowActions, // eslint-disable-line @typescript-eslint/no-unused-vars\n                columns,\n                onRowClick,\n                ...restTableProps\n            } = this.props;\n\n            return (\n                <TableComponent\n                    {...(restTableProps as Omit<TableProps<I>, 'columns'> & E)}\n                    columns={this.enhanceColumns(columns)}\n                    onRowClick={this.enhanceOnRowClick(onRowClick)}\n                />\n            );\n        }\n\n        private renderBodyCell = (item: I, index: number) => {\n            const {\n                getRowActions,\n                rowActionsSize,\n                renderRowActions,\n                rowActionsIcon,\n                isRowDisabled,\n                getRowDescriptor,\n                qa,\n            } = this.props;\n\n            if (renderRowActions) {\n                return renderRowActions({item, index});\n            }\n\n            return (\n                <DefaultRowActions\n                    index={index}\n                    item={item}\n                    getRowActions={getRowActions}\n                    rowActionsSize={rowActionsSize}\n                    rowActionsIcon={rowActionsIcon}\n                    getRowDescriptor={getRowDescriptor}\n                    isRowDisabled={isRowDisabled}\n                    tableQa={qa}\n                />\n            );\n        };\n\n        // eslint-disable-next-line @typescript-eslint/member-ordering\n        private enhanceColumns = memoize((columns: TableColumnConfig<I>[]) =>\n            enhanceSystemColumn(columns, (systemColumn) => {\n                systemColumn.template = this.renderBodyCell;\n            }),\n        );\n\n        // eslint-disable-next-line @typescript-eslint/member-ordering\n        private enhanceOnRowClick = memoize(\n            (\n                onRowClick?: (\n                    item: I,\n                    index: number,\n                    event: React.MouseEvent<HTMLTableRowElement>,\n                ) => void,\n            ) => {\n                if (!onRowClick) {\n                    return onRowClick;\n                }\n\n                return (item: I, index: number, event: React.MouseEvent<HTMLTableRowElement>) => {\n                    if (\n                        // @ts-expect-error\n                        event.nativeEvent.target.closest(`.${menuCn}`)\n                    ) {\n                        return undefined;\n                    }\n\n                    if (\n                        // @ts-expect-error\n                        event.nativeEvent.target.matches(\n                            `.${actionsButtonCn}, .${actionsButtonCn} *`,\n                        )\n                    ) {\n                        return undefined;\n                    }\n\n                    return onRowClick(item, index, event);\n                };\n            },\n        );\n    };\n}\n"]}