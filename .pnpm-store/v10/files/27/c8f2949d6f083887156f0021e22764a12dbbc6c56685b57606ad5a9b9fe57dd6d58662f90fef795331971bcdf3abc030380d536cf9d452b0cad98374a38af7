{"version":3,"file":"ListItemViewContent.js","sourceRoot":"../../../../../../src","sources":["components/useList/components/ListItemView/ListItemViewContent.tsx"],"names":[],"mappings":"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","sourcesContent":["import type * as React from 'react';\n\nimport {Check} from '@gravity-ui/icons';\n\nimport {Icon} from '../../../Icon';\nimport {Text, colorText} from '../../../Text';\nimport {Flex} from '../../../layout';\nimport type {FlexProps} from '../../../layout';\nimport type {ListItemViewContentType} from '../../types';\nimport {ListItemExpandIcon} from '../ListItemExpandIcon/ListItemExpandIcon';\n\nimport {b} from './styles';\n\nexport const isListItemContentPropsGuard = (\n    props: ListItemViewContentType | React.ReactNode,\n): props is ListItemViewContentType => {\n    return typeof props === 'object' && props !== null && 'title' in props;\n};\n\ninterface SlotProps extends FlexProps {\n    indentation?: number;\n}\n\nconst ListItemViewSlot = ({children, indentation = 1, className, ...props}: SlotProps) => {\n    return (\n        <Flex width={indentation * 16} className={b('slot', className)} {...props}>\n            {children}\n        </Flex>\n    );\n};\n\nconst renderSafeIndentation = (indentation?: number) => {\n    if (indentation && indentation >= 1) {\n        return (\n            <ListItemViewSlot indentation={Math.floor(indentation) as SlotProps['indentation']} />\n        );\n    }\n    return null;\n};\n\ninterface ListItemViewContentProps extends ListItemViewContentType {\n    selected?: boolean;\n    disabled?: boolean;\n    /**\n     * Show selected icon if selected and reserve space for this icon\n     */\n    hasSelectionIcon: boolean;\n}\n\nexport const ListItemViewContent = ({\n    startSlot,\n    subtitle,\n    endSlot,\n    disabled,\n    hasSelectionIcon,\n    isGroup,\n    indentation,\n    expanded,\n    selected,\n    title,\n    expandIconPlacement = 'start',\n    renderExpandIcon: RenderExpandIcon = ListItemExpandIcon,\n}: ListItemViewContentProps) => {\n    const expandIconNode = isGroup ? (\n        <RenderExpandIcon\n            behavior={expandIconPlacement === 'start' ? 'state' : 'action'}\n            expanded={expanded}\n            disabled={disabled}\n        />\n    ) : null;\n\n    return (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" gap=\"4\" className={b('content')}>\n            <Flex gap=\"2\" alignItems=\"center\" grow>\n                {hasSelectionIcon && (\n                    <ListItemViewSlot // reserve space\n                    >\n                        {selected ? (\n                            <Icon data={Check} size={16} className={colorText({color: 'info'})} />\n                        ) : null}\n                    </ListItemViewSlot>\n                )}\n\n                {renderSafeIndentation(indentation)}\n\n                {expandIconPlacement === 'start' && expandIconNode}\n\n                {startSlot}\n\n                <div className={b('main-content')}>\n                    {typeof title === 'string' ? (\n                        <Text\n                            ellipsis\n                            color={disabled ? 'hint' : undefined}\n                            variant={isGroup ? 'subheader-1' : undefined}\n                        >\n                            {title}\n                        </Text>\n                    ) : (\n                        title\n                    )}\n                    {typeof subtitle === 'string' ? (\n                        <Text ellipsis color={disabled ? 'hint' : 'secondary'}>\n                            {subtitle}\n                        </Text>\n                    ) : (\n                        subtitle\n                    )}\n                </div>\n            </Flex>\n\n            <Flex gap=\"2\">\n                {expandIconPlacement === 'end' && expandIconNode}\n                {endSlot}\n            </Flex>\n        </Flex>\n    );\n};\n"]}