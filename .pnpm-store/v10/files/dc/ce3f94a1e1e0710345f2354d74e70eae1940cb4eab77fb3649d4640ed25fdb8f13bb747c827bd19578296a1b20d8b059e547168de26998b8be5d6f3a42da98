{"version":3,"file":"Trigger.js","sourceRoot":"../../../../../../../src","sources":["components/legacy/Popover/components/Trigger/Trigger.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,iBAAiB,EAAC,sCAA6B;AA4CvD,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,EACpB,IAAI,EACJ,WAAW,EACX,QAAQ,EACR,SAAS,EACT,WAAW,EACX,YAAY,EACZ,cAAc,EACd,OAAO,EACP,QAAQ,GACG,EAAE,EAAE;IACf,MAAM,WAAW,GAAG,KAAK,EAAE,KAAuC,EAAE,EAAE;QAClE,yEAAyE;QACzE,kEAAkE;QAClE,MAAM,2BAA2B,GAAG,IAAI,IAAI,WAAW,CAAC;QAExD,IAAI,QAAQ,IAAI,2BAA2B,EAAE,CAAC;YAC1C,OAAO;QACX,CAAC;QAED,MAAM,mBAAmB,GAAG,CAAC,OAAO,IAAI,CAAC,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/D,IAAI,CAAC,mBAAmB,EAAE,CAAC;YACvB,OAAO;QACX,CAAC;QAED,MAAM,aAAa,GAAG,GAAG,EAAE;YACvB,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC;YAEvB,IAAI,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,CAAC;gBACd,cAAc,CAAC,OAAO,GAAG,KAAK,CAAC;YACnC,CAAC;iBAAM,CAAC;gBACJ,YAAY,EAAE,CAAC;gBACf,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;YAClC,CAAC;QACL,CAAC,CAAC;QAEF,aAAa,EAAE,CAAC;IACpB,CAAC,CAAC;IAEF,MAAM,EAAC,SAAS,EAAC,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAEnD,OAAO,OAAO,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC,CACpC,KAAC,KAAK,CAAC,QAAQ,cAAE,QAAQ,CAAC,EAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,GAAkB,CACvF,CAAC,CAAC,CAAC;IACA,kEAAkE;IAClE,mEAAmE;IACnE,cACI,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,WAAW,EACpB,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,YAEzC,QAAQ,GACP,CACT,CAAC;AACN,CAAC,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useActionHandlers} from '../../../../../hooks';\n\ninterface TriggerArgs {\n    onClick: React.MouseEventHandler;\n    onKeyDown: React.KeyboardEventHandler;\n    open: boolean;\n}\n\nexport interface TriggerProps {\n    /**\n     * Tooltip's opened state\n     */\n    open: boolean;\n    openOnHover?: boolean;\n    /**\n     * Css class for the control\n     */\n    className?: string;\n    /**\n     * click handler\n     */\n    onClick?: (event: React.MouseEvent<HTMLDivElement>) => boolean | Promise<boolean>;\n    /**\n     * Disables open state changes\n     */\n    disabled: boolean;\n    /**\n     * Function, which opens tooltip\n     */\n    openTooltip: () => void;\n    /**\n     * Function, which closes tooltip\n     */\n    closeTooltip: () => void;\n    /**\n     * Indicates, that tooltip is closed manually\n     */\n    closedManually: React.MutableRefObject<boolean>;\n    /**\n     * Tooltip's trigger content\n     */\n    children?: React.ReactNode | ((triggerArgs: TriggerArgs) => React.ReactNode);\n}\n\nexport const Trigger = ({\n    open,\n    openOnHover,\n    disabled,\n    className,\n    openTooltip,\n    closeTooltip,\n    closedManually,\n    onClick,\n    children,\n}: TriggerProps) => {\n    const handleClick = async (event: React.MouseEvent<HTMLDivElement>) => {\n        // Ignores click that should close tooltip in case of {openOnHover: true}\n        // to prevent situation when user could close tooltip accidentally\n        const shouldPreventClosingByClick = open && openOnHover;\n\n        if (disabled || shouldPreventClosingByClick) {\n            return;\n        }\n\n        const shouldToggleTooltip = !onClick || (await onClick(event));\n\n        if (!shouldToggleTooltip) {\n            return;\n        }\n\n        const toggleTooltip = () => {\n            const nextOpen = !open;\n\n            if (nextOpen) {\n                openTooltip();\n                closedManually.current = false;\n            } else {\n                closeTooltip();\n                closedManually.current = true;\n            }\n        };\n\n        toggleTooltip();\n    };\n\n    const {onKeyDown} = useActionHandlers(handleClick);\n\n    return typeof children === 'function' ? (\n        <React.Fragment>{children({onClick: handleClick, onKeyDown, open})}</React.Fragment>\n    ) : (\n        // The event handler should only be used to capture bubbled events\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <div\n            className={className}\n            onClick={handleClick}\n            onKeyDown={onClick ? onKeyDown : undefined}\n        >\n            {children}\n        </div>\n    );\n};\n"]}