{"version":3,"file":"Radio.js","sourceRoot":"../../../../src","sources":["components/Radio/Radio.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,QAAQ,EAAC,qCAA4B;AAC7C,OAAO,EAAC,YAAY,EAAC,iCAAwB;AAG7C,OAAO,EAAC,KAAK,EAAC,uBAAoB;AAElC,qBAAsB;AAEtB,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AAYzB,MAAM,CAAC,MAAM,KAAK,GAAG,KAAK,CAAC,UAAU,CAA+B,SAAS,KAAK,CAAC,KAAK,EAAE,GAAG;IACzF,MAAM,EAAC,IAAI,GAAG,GAAG,EAAE,QAAQ,GAAG,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAC,GAAG,KAAK,CAAC;IAC7F,MAAM,EAAC,OAAO,EAAE,UAAU,EAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,IAAI,GAAG,OAAO,IAAI,QAAQ,CAAC;IAEjC,MAAM,OAAO,GAAG,CACZ,gBAAM,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC,aAC3B,eAAM,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,GAAI,EAC9B,mBAAW,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,GAAI,EAClD,eAAM,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,GAAI,IAC9B,CACV,CAAC;IAEF,OAAO,CACH,KAAC,YAAY,IACT,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,CAAC,CACR;YACI,IAAI;YACJ,QAAQ;YACR,OAAO;SACV,EACD,SAAS,CACZ,EACD,EAAE,EAAE,EAAE,EACN,OAAO,EAAE,OAAO,YAEf,IAAI,GACM,CAClB,CAAC;AACN,CAAC,CAAC,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useRadio} from '../../hooks/private';\nimport {ControlLabel} from '../ControlLabel';\nimport type {ControlLabelSize} from '../ControlLabel';\nimport type {ControlProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport './Radio.scss';\n\nconst b = block('radio');\n\nexport type RadioSize = ControlLabelSize;\n\nexport interface RadioProps extends ControlProps, DOMProps, QAProps {\n    value: string;\n    size?: RadioSize;\n    content?: React.ReactNode;\n    children?: React.ReactNode;\n    title?: string;\n}\n\nexport const Radio = React.forwardRef<HTMLLabelElement, RadioProps>(function Radio(props, ref) {\n    const {size = 'm', disabled = false, content, children, title, style, className, qa} = props;\n    const {checked, inputProps} = useRadio(props);\n    const text = content || children;\n\n    const control = (\n        <span className={b('indicator')}>\n            <span className={b('disc')} />\n            <input {...inputProps} className={b('control')} />\n            <span className={b('outline')} />\n        </span>\n    );\n\n    return (\n        <ControlLabel\n            ref={ref}\n            title={title}\n            style={style}\n            size={size}\n            disabled={disabled}\n            className={b(\n                {\n                    size,\n                    disabled,\n                    checked,\n                },\n                className,\n            )}\n            qa={qa}\n            control={control}\n        >\n            {text}\n        </ControlLabel>\n    );\n});\n"]}