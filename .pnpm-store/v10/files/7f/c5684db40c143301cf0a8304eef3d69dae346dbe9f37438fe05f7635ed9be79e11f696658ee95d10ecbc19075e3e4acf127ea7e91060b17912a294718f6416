{"version":3,"file":"useListFilter.js","sourceRoot":"../../../../../src","sources":["components/useList/hooks/useListFilter.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport debounce from 'lodash/debounce';\n\nimport type {ListItemType} from '../types';\nimport {defaultFilterItems} from '../utils/defaultFilterItems';\n\nfunction defaultFilterFn<T>(value: string | undefined, item: T): boolean {\n    return item && typeof item === 'object' && 'title' in item && typeof item.title === 'string'\n        ? item.title.toLowerCase().includes((value || '').toLowerCase())\n        : true;\n}\n\ninterface UseListFilterProps<T> {\n    items: ListItemType<T>[];\n    /**\n     * Override default filtration logic\n     */\n    filterItems?(value: string, items: ListItemType<T>[]): ListItemType<T>[];\n    /**\n     * Override only logic with item filtration\n     */\n    filterItem?(value: string, item: T): boolean;\n    onFilterChange?(value: string): void;\n    debounceTimeout?: number;\n    initialFilterValue?: string;\n}\n\n/**\n * Ready-to-use logic for filtering tree-like data structures\n *\n * ```tsx\n * const {item: filteredItems,...listFiltration} = useListFIlter({items});\n * const list = useList({items: filteredItems});\n *\n * <TextInput {...listFiltration} />\n * ```\n */\nexport function useListFilter<T>({\n    items: externalItems,\n    initialFilterValue = '',\n    filterItem,\n    onFilterChange,\n    filterItems,\n    debounceTimeout = 300,\n}: UseListFilterProps<T>) {\n    const filterRef = React.useRef<HTMLInputElement>(null);\n    const [filter, setFilter] = React.useState(initialFilterValue);\n    const [prevItems, setPrevItems] = React.useState(externalItems);\n    const [filteredItems, setFilteredItems] = React.useState(externalItems);\n\n    const filterItemsFn = React.useCallback(\n        (nextFilterValue: string, items: ListItemType<T>[]) => {\n            if (filterItems) {\n                return () => filterItems(nextFilterValue, items);\n            }\n\n            if (nextFilterValue) {\n                const filterItemFn = filterItem || defaultFilterFn;\n\n                return () =>\n                    defaultFilterItems(items, (item) => filterItemFn(nextFilterValue, item));\n            }\n\n            return () => items;\n        },\n        [filterItem, filterItems],\n    );\n\n    if (externalItems !== prevItems) {\n        setFilteredItems(filterItemsFn(filter, externalItems));\n        setPrevItems(externalItems);\n    }\n\n    const debouncedFn = React.useCallback(\n        debounce((value) => setFilteredItems(filterItemsFn(value, externalItems)), debounceTimeout),\n        [setFilteredItems, filterItemsFn, externalItems, debounceTimeout],\n    );\n\n    const {onFilterUpdate, reset} = React.useMemo(() => {\n        return {\n            reset: () => {\n                setFilter(initialFilterValue);\n                onFilterChange?.(initialFilterValue);\n                debouncedFn(initialFilterValue);\n            },\n            onFilterUpdate: (nextFilterValue: string) => {\n                setFilter(nextFilterValue);\n                onFilterChange?.(nextFilterValue);\n                debouncedFn(nextFilterValue);\n            },\n        };\n    }, [debouncedFn, initialFilterValue, onFilterChange]);\n\n    return {\n        filterRef,\n        filter,\n        reset,\n        items: filteredItems,\n        onFilterUpdate,\n    };\n}\n"]}