{"version":3,"file":"useTabList.js","sourceRoot":"../../../../../src","sources":["components/tabs/hooks/useTabList.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {KeyCode} from '../../../constants';\nimport {useDirection} from '../../theme';\nimport {TAB_DATA_ATTRIBUTE, bTabList} from '../constants';\nimport {TabContext} from '../contexts/TabContext';\nimport type {TabListProps} from '../types';\n\nconst getAllTabElements = (tabElement: HTMLElement): HTMLElement[] => {\n    return [\n        ...(tabElement\n            .closest('[role=\"tablist\"]')\n            ?.querySelectorAll<HTMLElement>(`[${TAB_DATA_ATTRIBUTE}]`) ?? []),\n    ];\n};\n\nconst isTabDisabled = (tabElement: HTMLElement) => {\n    return Boolean(tabElement.getAttribute('aria-disabled'));\n};\n\nconst getTabValue = (tabElement: HTMLElement) => {\n    return tabElement.getAttribute(TAB_DATA_ATTRIBUTE);\n};\n\nconst focusNearestTab = (\n    event: React.KeyboardEvent,\n    isInverse: boolean,\n    isRTL: boolean,\n): HTMLElement => {\n    const tabElement = event.target as HTMLElement;\n    const allTabElements = getAllTabElements(tabElement);\n\n    const index = allTabElements.indexOf(tabElement);\n    let distance = 1;\n\n    while (distance < allTabElements.length) {\n        const nextIndex = index + distance * (isRTL ? -1 : 1) * (isInverse ? -1 : 1);\n        const nextTabElement = allTabElements.at(nextIndex % allTabElements.length);\n\n        if (nextTabElement && !isTabDisabled(nextTabElement)) {\n            nextTabElement.focus();\n            return nextTabElement;\n        }\n\n        distance++;\n    }\n\n    return tabElement;\n};\n\nconst focusFurthestTab = (event: React.KeyboardEvent, isInverse: boolean): HTMLElement => {\n    const tabElement = event.target as HTMLElement;\n    const allTabElements = getAllTabElements(tabElement);\n\n    const stopIndex = isInverse ? 0 : allTabElements.length - 1;\n    let index = allTabElements.indexOf(tabElement);\n    let lastFocusableTabElement = tabElement;\n\n    while (index !== stopIndex) {\n        index += isInverse ? -1 : 1;\n        const nextTabElement = allTabElements.at(index);\n\n        if (nextTabElement && !isTabDisabled(nextTabElement)) {\n            lastFocusableTabElement = nextTabElement;\n        }\n    }\n\n    lastFocusableTabElement.focus();\n\n    return lastFocusableTabElement;\n};\n\nexport function useTabList(\n    tabListProps: TabListProps,\n): React.HTMLAttributes<HTMLDivElement> & {[key: `data-${string}`]: string | undefined} {\n    const tabContext = React.useContext(TabContext);\n    const isRTL = useDirection() === 'rtl';\n\n    const activateOnFocus = (tabElement: HTMLElement) => {\n        const value = getTabValue(tabElement);\n\n        if (tabListProps.activateOnFocus && value) {\n            tabListProps.onUpdate?.(value);\n            tabContext?.onUpdate?.(value);\n        }\n    };\n\n    const onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n        switch (event.code) {\n            case KeyCode.ARROW_LEFT: {\n                event.preventDefault();\n                activateOnFocus(focusNearestTab(event, true, isRTL));\n                break;\n            }\n            case KeyCode.ARROW_RIGHT: {\n                event.preventDefault();\n                activateOnFocus(focusNearestTab(event, false, isRTL));\n                break;\n            }\n            case KeyCode.HOME: {\n                event.preventDefault();\n                activateOnFocus(focusFurthestTab(event, true));\n                break;\n            }\n            case KeyCode.END: {\n                event.preventDefault();\n                activateOnFocus(focusFurthestTab(event, false));\n                break;\n            }\n        }\n\n        tabListProps.onKeyDown?.(event);\n    };\n\n    const {\n        value: _value,\n        onUpdate: _onUpdate,\n        size: _size,\n        activateOnFocus: _activateOnFocus,\n        qa: _qa,\n        ...htmlProps\n    } = tabListProps;\n\n    return {\n        ...htmlProps,\n        role: 'tablist',\n        'aria-orientation': 'horizontal' as const,\n        onKeyDown,\n        className: bTabList({size: tabListProps.size ?? 'm'}, tabListProps.className),\n        'data-qa': tabListProps.qa,\n    };\n}\n"]}