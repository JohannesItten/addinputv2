{"version":3,"file":"dom-helpers.js","sourceRoot":"../../../../src","sources":["components/theme/dom-helpers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,KAAK,EAAE,aAAa,EAAC,uBAAoB;AAEjD,OAAO,EAAC,iBAAiB,EAAE,cAAc,EAAC,uBAAoB;AAG9D,MAAM,CAAC,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;AAChC,MAAM,aAAa,GAAG,CAAC,EAAE,CAAC;AAE1B,MAAM,UAAU,mBAAmB,CAAC,EAChC,KAAK,EACL,SAAS,EACT,aAAa,GAKhB;IACG,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;IAE7B,wEAAwE;IACxE,IAAI,CAAC,MAAM,EAAE,CAAC;QACV,OAAO;IACX,CAAC;IAED,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;QAC5C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,aAAa,EAAE,CAAC;QAChB,MAAM,8BAA8B,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChE,8BAA8B,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC3C,IAAI,GAAG,EAAE,CAAC;gBACN,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI,SAAS,EAAE,CAAC;QACZ,MAAM,0BAA0B,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxD,0BAA0B,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;gBACzC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QAClC,IAAI,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAClD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,SAAoB;IACpD,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;IAE7B,wEAAwE;IACxE,IAAI,CAAC,MAAM,EAAE,CAAC;QACV,OAAO;IACX,CAAC;IAED,IAAI,SAAS,KAAK,iBAAiB,EAAE,CAAC;QAClC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;SAAM,CAAC;QACJ,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAC1C,CAAC;AACL,CAAC;AAED,MAAM,CAAC,MAAM,kBAAkB,GAC3B,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,UAAU,CAAC;AAE7E,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;AAEzF,MAAM,UAAU,cAAc;IAC1B,IAAI,kBAAkB,EAAE,CAAC;QACrB,OAAO,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IAC1D,CAAC;SAAM,CAAC;QACJ,OAAO,OAAO,CAAC;IACnB,CAAC;AACL,CAAC","sourcesContent":["import {block, modsClassName} from '../utils/cn';\n\nimport {DEFAULT_DIRECTION, ROOT_CLASSNAME} from './constants';\nimport type {Direction, RealTheme} from './types';\n\nconst b = block(ROOT_CLASSNAME);\nconst rootClassName = b();\n\nexport function updateBodyClassName({\n    theme,\n    className,\n    prevClassName,\n}: {\n    theme: RealTheme;\n    className?: string;\n    prevClassName?: string;\n}) {\n    const bodyEl = document.body;\n\n    // https://html.spec.whatwg.org/multipage/dom.html#dom-document-body-dev\n    if (!bodyEl) {\n        return;\n    }\n\n    if (!bodyEl.classList.contains(rootClassName)) {\n        bodyEl.classList.add(rootClassName);\n    }\n\n    if (prevClassName) {\n        const parsedPrevCustomRootClassNames = prevClassName.split(' ');\n        parsedPrevCustomRootClassNames.forEach((cls) => {\n            if (cls) {\n                bodyEl.classList.remove(cls);\n            }\n        });\n    }\n\n    if (className) {\n        const parsedCustomRootClassNames = className.split(' ');\n        parsedCustomRootClassNames.forEach((cls) => {\n            if (cls && !bodyEl.classList.contains(cls)) {\n                bodyEl.classList.add(cls);\n            }\n        });\n    }\n\n    [...bodyEl.classList].forEach((cls) => {\n        if (cls.startsWith(modsClassName(b({theme: true})))) {\n            bodyEl.classList.remove(cls);\n        }\n    });\n    bodyEl.classList.add(modsClassName(b({theme})));\n}\n\nexport function updateBodyDirection(direction: Direction) {\n    const bodyEl = document.body;\n\n    // https://html.spec.whatwg.org/multipage/dom.html#dom-document-body-dev\n    if (!bodyEl) {\n        return;\n    }\n\n    if (direction === DEFAULT_DIRECTION) {\n        bodyEl.removeAttribute('dir');\n    } else {\n        bodyEl.setAttribute('dir', direction);\n    }\n}\n\nexport const supportsMatchMedia =\n    typeof window !== 'undefined' && typeof window.matchMedia === 'function';\n\nexport const getDarkMediaMatch = () => window.matchMedia('(prefers-color-scheme: dark)');\n\nexport function getSystemTheme() {\n    if (supportsMatchMedia) {\n        return getDarkMediaMatch().matches ? 'dark' : 'light';\n    } else {\n        return 'light';\n    }\n}\n"]}