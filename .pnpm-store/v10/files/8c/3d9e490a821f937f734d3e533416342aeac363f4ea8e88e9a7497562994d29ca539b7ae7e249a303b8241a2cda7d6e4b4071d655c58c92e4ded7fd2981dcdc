{"version":3,"file":"useBoolean.js","sourceRoot":"../../../../../src","sources":["hooks/private/useBoolean/useBoolean.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAQ/B,MAAM,UAAU,UAAU,CACtB,YAAuC;IAEvC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAU,YAAY,CAAC,CAAC;IAChE,OAAO;QACH,KAAK;QACL,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;QAC3C,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;QAC5C,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;KACvD,CAAC;AACN,CAAC","sourcesContent":["import * as React from 'react';\n\ntype SetTrue = () => void;\ntype SetFalse = () => void;\ntype Toggle = () => void;\n\nexport type UseBooleanResult = [boolean, SetTrue, SetFalse, Toggle];\n\nexport function useBoolean(\n    initialState: boolean | (() => boolean),\n): [boolean, SetTrue, SetFalse, Toggle] {\n    const [value, setValue] = React.useState<boolean>(initialState);\n    return [\n        value,\n        React.useCallback(() => setValue(true), []),\n        React.useCallback(() => setValue(false), []),\n        React.useCallback(() => setValue((val) => !val), []),\n    ];\n}\n"]}