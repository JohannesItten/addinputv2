{"version":3,"file":"useForkRef.js","sourceRoot":"../../../../src","sources":["hooks/useForkRef/useForkRef.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,SAAS,EAAC,uBAAoB;AAKtC,MAAM,UAAU,UAAU,CAAI,GAAG,IAAwB;IACrD,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QACtB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,CAAC,EAAE,CAAC;YACzD,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,OAAO,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC;QAC1B,uDAAuD;IAC3D,CAAC,EAAE,IAAI,CAAC,CAAC;AACb,CAAC","sourcesContent":["import * as React from 'react';\n\nimport {mergeRefs} from './mergeRefs';\n\nexport type UseForkRefProps<K> = Array<React.Ref<K> | undefined>;\nexport type UseForkRefResult<W> = React.RefCallback<W> | null;\n\nexport function useForkRef<T>(...refs: UseForkRefProps<T>): UseForkRefResult<T> {\n    return React.useMemo(() => {\n        if (refs.every((ref) => ref === null || ref === undefined)) {\n            return null;\n        }\n\n        return mergeRefs(...refs);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, refs);\n}\n"]}