{"version":3,"file":"Breadcrumbs.js","sourceRoot":"../../../../../src","sources":["components/legacy/Breadcrumbs/Breadcrumbs.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,QAAQ,2BAAwB;AAIvC,OAAO,EAAC,KAAK,EAAC,0BAAuB;AAGrC,OAAO,EAAC,eAAe,IAAI,IAAI,EAAC,6BAA0B;AAC1D,OAAO,EAAC,eAAe,EAAC,6BAA0B;AAClD,OAAO,EAAC,oBAAoB,EAAC,kCAA+B;AAO5D,2BAA4B;AAyC5B,MAAM,eAAe,GAAG,GAAG,CAAC;AAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,MAAM,uBAAuB,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAClD,MAAM,SAAS,GAAG,CAAC,CAAC;AAEpB,MAAM,CAAC,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAEtC,MAAM,CAAN,IAAY,uBAGX;AAHD,WAAY,uBAAuB;IAC/B,mEAAO,CAAA;IACP,mEAAO,CAAA;AACX,CAAC,EAHW,uBAAuB,KAAvB,uBAAuB,QAGlC;AAED,MAAM,CAAN,IAAY,wBAGX;AAHD,WAAY,wBAAwB;IAChC,uEAAQ,CAAA;IACR,qEAAO,CAAA;AACX,CAAC,EAHW,wBAAwB,KAAxB,wBAAwB,QAGnC;AAED;;GAEG;AACH,MAAM,OAAO,WAAyD,SAAQ,KAAK,CAAC,SAGnF;IACG,MAAM,CAAC,YAAY,GAAG;QAClB,cAAc,EAAE,uBAAuB;KAC1C,CAAC;IAEF,MAAM,CAAC,mBAAmB,CAA4B,KAA0B;QAC5E,MAAM,EAAC,wBAAwB,EAAC,GAAG,KAAK,CAAC;QAEzC,OAAO;YACH,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,wBAAwB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/D,YAAY,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,wBAAwB,CAAC;YACzD,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,KAAK,CAAC,KAAK;SACxB,CAAC;IACN,CAAC;IAED,MAAM,CAAC,wBAAwB,CAC3B,KAA0B,EAC1B,KAA0B;QAE1B,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC;YACjC,OAAO,WAAW,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,SAAS,CAAkC;IAC3C,cAAc,CAAkB;IAExC,YAAY,KAA0B;QAClC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;QACjE,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChE,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IAED,iBAAiB;QACb,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAkB,CAAC,CAAC;IACpE,CAAC;IAED,kBAAkB,CAAC,SAA8B;QAC7C,IAAI,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,cAAc,EAAE,UAAU,EAAE,CAAC;IACtC,CAAC;IAED,MAAM;QACF,MAAM,EAAC,SAAS,EAAE,EAAE,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACnC,MAAM,EAAC,UAAU,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAEhC,OAAO,CACH,cAAK,SAAS,EAAE,CAAC,CAAC,EAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAC,EAAE,SAAS,CAAC,aAAW,EAAE,YAC9E,eAAK,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,aAC1C,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,kBAAkB,EAAE,IACxB,GACJ,CACT,CAAC;IACN,CAAC;IAED,UAAU,CACN,IAAO,EACP,SAAkB,EAClB,aAAsB,EACtB,iBAAgE;QAEhE,OAAO,CACH,KAAC,IAAI,IACD,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,SAAS,EACpB,aAAa,EAAE,aAAa,EAC5B,iBAAiB,EAAE,iBAAiB,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EACpE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GACnC,CACL,CAAC;IACN,CAAC;IAED,iBAAiB;QACb,MAAM,EAAC,iBAAiB,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvC,OAAO,KAAC,oBAAoB,IAAC,iBAAiB,EAAE,iBAAiB,GAAI,CAAC;IAC1E,CAAC;IAED,cAAc;QACV,MAAM,EAAC,iBAAiB,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACvC,MAAM,EAAC,QAAQ,EAAE,YAAY,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5C,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC;QAE5C,IAAI,CAAC,QAAQ,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAC;IAC1E,CAAC;IAED,kBAAkB;QACd,MAAM,EAAC,YAAY,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAElC,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;YAC3C,MAAM,SAAS,GAAG,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7C,MAAM,aAAa,GAAG,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAEjD,OAAO,CACH,MAAC,KAAK,CAAC,QAAQ,eACV,IAAI,CAAC,iBAAiB,EAAE,EACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,aAAa,CAAC,KAF/B,KAAK,CAGT,CACpB,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACV,MAAM,EAAC,WAAW,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,EAAC,UAAU,EAAE,cAAc,EAAE,iBAAiB,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACnE,OAAO,CACH,MAAC,KAAK,CAAC,QAAQ,eACX,KAAC,oBAAoB,IAAC,iBAAiB,EAAE,iBAAiB,GAAI,EAC9D,KAAC,eAAe,IACZ,KAAK,EAAE,WAAW,EAClB,cAAc,EAAE,cAAc,EAC9B,UAAU,EAAE,UAAU,GACxB,IACW,CACpB,CAAC;IACN,CAAC;IAEO,WAAW;QACf,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAE,uBAAuB,EAAE,wBAAwB,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACxF,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,WAAW,IAAI,CAAC,CAAC;QAE9D,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,cAAc,GAAG,CAAC,EAAE,CAAC;YAC/C,cAAc,IAAI,SAAS,CAAC;YAC5B,MAAM,QAAQ,GAAkB,KAAK,CAAC,IAAI,CACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAC9D,CAAC;YACF,MAAM,KAAK,GAAkB;gBACzB,GAAI,KAAK,CAAC,IAAI,CACV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAC7C;gBACnB,GAAI,KAAK,CAAC,IAAI,CACV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CACzC;aACtB,CAAC;YAEF,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CACzB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CACR,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAC9E,CAAC;YACF,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChE,MAAM,YAAY,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;gBACpE,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,KAAK,CAAC;gBAC/C,MAAM,gBAAgB,GAClB,uBAAuB,KAAK,uBAAuB,CAAC,GAAG;oBACvD,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,KAAK,CAAC;gBAEhC,IAAI,UAAU,IAAI,gBAAgB,EAAE,CAAC;oBACjC,OAAO,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBACxC,CAAC;gBAED,OAAO,KAAK,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,MAAM,aAAa,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;YAChF,IAAI,UAAU,GAAG,YAAY,GAAG,aAAa,CAAC;YAC9C,IAAI,sBAAsB,GAAG,CAAC,CAAC;YAC/B,OACI,UAAU,GAAG,cAAc;gBAC3B,sBAAsB,GAAG,KAAK,CAAC,MAAM,GAAG,uBAAuB,EACjE,CAAC;gBACC,IAAI,sBAAsB,KAAK,CAAC,EAAE,CAAC;oBAC/B,UAAU,IAAI,eAAe,GAAG,cAAc,CAAC,sBAAsB,CAAC,CAAC;gBAC3E,CAAC;gBAED,UAAU;oBACN,WAAW,CAAC,sBAAsB,CAAC,GAAG,cAAc,CAAC,sBAAsB,CAAC,CAAC;gBACjF,sBAAsB,EAAE,CAAC;YAC7B,CAAC;YAED,IAAI,CAAC,QAAQ,CAAC;gBACV,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,QAAQ,CAAC,KAAK,CACxB,sBAAsB,GAAG,CAAC,CAAC,GAAG,wBAAwB,CAAC,CAC1D;gBACD,WAAW,EAAE,QAAQ,CAAC,KAAK,CACvB,wBAAwB,EACxB,sBAAsB,GAAG,CAAC,CAAC,GAAG,wBAAwB,CAAC,CAC1D;aACJ,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAEO,YAAY,GAAG,GAAG,EAAE;QACxB,MAAM,KAAK,GAAG,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport throttle from 'lodash/throttle';\n\nimport type {PopupPlacement} from '../../Popup';\nimport type {QAProps} from '../../types';\nimport {block} from '../../utils/cn';\n\nimport type {Props as BreadcrumbsItemProps} from './BreadcrumbsItem';\nimport {BreadcrumbsItem as Item} from './BreadcrumbsItem';\nimport {BreadcrumbsMore} from './BreadcrumbsMore';\nimport {BreadcrumbsSeparator} from './BreadcrumbsSeparator';\nimport type {\n    RenderBreadcrumbsItem,\n    RenderBreadcrumbsItemContent,\n    RenderBreadcrumbsRootContent,\n} from './types';\n\nimport './Breadcrumbs.scss';\n\ntype BaseBreadcrumbsItem = {\n    text: string;\n    items?: BreadcrumbsItem[];\n    title?: string;\n};\n\nexport type BreadcrumbsLinkItem = {\n    href: string;\n    action?: (event: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => void;\n} & BaseBreadcrumbsItem;\n\nexport type BreadcrumbsButtonItem = {\n    href?: undefined;\n    action: (event: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => void;\n} & BaseBreadcrumbsItem;\n\nexport type BreadcrumbsItem = BreadcrumbsLinkItem | BreadcrumbsButtonItem;\n\nexport interface BreadcrumbsProps<T extends BreadcrumbsItem = BreadcrumbsItem> extends QAProps {\n    items: T[];\n    className?: string;\n    renderRootContent?: RenderBreadcrumbsRootContent<T>;\n    renderItemContent?: RenderBreadcrumbsItemContent<T>;\n    renderItemDivider?: () => React.ReactNode;\n    renderItem?: RenderBreadcrumbsItem<T>;\n    lastDisplayedItemsCount: LastDisplayedItemsCount;\n    firstDisplayedItemsCount: FirstDisplayedItemsCount;\n    popupStyle?: 'staircase';\n    popupPlacement?: PopupPlacement;\n}\n\ninterface BreadcrumbsState<T extends BreadcrumbsItem> {\n    calculated: boolean;\n    rootItem: T | undefined;\n    visibleItems: T[];\n    hiddenItems: T[];\n    allItems: T[];\n}\n\nconst RESIZE_THROTTLE = 200;\nconst MORE_ITEM_WIDTH = 34;\nconst DEFAULT_POPUP_PLACEMENT = ['bottom', 'top'];\nconst GAP_WIDTH = 4;\n\nconst b = block('breadcrumbs-legacy');\n\nexport enum LastDisplayedItemsCount {\n    One = 1,\n    Two = 2,\n}\n\nexport enum FirstDisplayedItemsCount {\n    Zero = 0,\n    One = 1,\n}\n\n/**\n * @deprecated\n */\nexport class Breadcrumbs<T extends BreadcrumbsItem = BreadcrumbsItem> extends React.Component<\n    BreadcrumbsProps<T>,\n    BreadcrumbsState<T>\n> {\n    static defaultProps = {\n        popupPlacement: DEFAULT_POPUP_PLACEMENT,\n    };\n\n    static prepareInitialState<T extends BreadcrumbsItem>(props: BreadcrumbsProps<T>) {\n        const {firstDisplayedItemsCount} = props;\n\n        return {\n            calculated: false,\n            rootItem: firstDisplayedItemsCount ? props.items[0] : undefined,\n            visibleItems: props.items.slice(firstDisplayedItemsCount),\n            hiddenItems: [],\n            allItems: props.items,\n        };\n    }\n\n    static getDerivedStateFromProps<T extends BreadcrumbsItem>(\n        props: BreadcrumbsProps<T>,\n        state: BreadcrumbsState<T>,\n    ) {\n        if (state.allItems !== props.items) {\n            return Breadcrumbs.prepareInitialState(props);\n        }\n\n        return null;\n    }\n\n    private container: React.RefObject<HTMLDivElement>;\n    private resizeObserver?: ResizeObserver;\n\n    constructor(props: BreadcrumbsProps<T>) {\n        super(props);\n\n        this.handleResize = throttle(this.handleResize, RESIZE_THROTTLE);\n        if (typeof window !== 'undefined') {\n            this.resizeObserver = new ResizeObserver(this.handleResize);\n        }\n        this.container = React.createRef();\n        this.state = Breadcrumbs.prepareInitialState(props);\n    }\n\n    componentDidMount() {\n        this.recalculate();\n        this.resizeObserver?.observe(this.container.current as Element);\n    }\n\n    componentDidUpdate(prevProps: BreadcrumbsProps<T>) {\n        if (prevProps.items !== this.state.allItems) {\n            this.recalculate();\n        }\n    }\n\n    componentWillUnmount() {\n        this.resizeObserver?.disconnect();\n    }\n\n    render() {\n        const {className, qa} = this.props;\n        const {calculated} = this.state;\n\n        return (\n            <div className={b({calculated: calculated ? 'yes' : 'no'}, className)} data-qa={qa}>\n                <div className={b('inner')} ref={this.container}>\n                    {this.renderRootItem()}\n                    {this.renderMoreItem()}\n                    {this.renderVisibleItems()}\n                </div>\n            </div>\n        );\n    }\n\n    renderItem(\n        item: T,\n        isCurrent: boolean,\n        isPrevCurrent: boolean,\n        renderItemContent?: BreadcrumbsItemProps<T>['renderItemContent'],\n    ) {\n        return (\n            <Item\n                item={item}\n                isCurrent={isCurrent}\n                isPrevCurrent={isPrevCurrent}\n                renderItemContent={renderItemContent || this.props.renderItemContent}\n                renderItem={this.props.renderItem}\n            />\n        );\n    }\n\n    renderItemDivider() {\n        const {renderItemDivider} = this.props;\n\n        return <BreadcrumbsSeparator renderItemDivider={renderItemDivider} />;\n    }\n\n    renderRootItem() {\n        const {renderRootContent} = this.props;\n        const {rootItem, visibleItems} = this.state;\n        const isCurrent = visibleItems.length === 0;\n\n        if (!rootItem) {\n            return null;\n        }\n\n        return this.renderItem(rootItem, isCurrent, false, renderRootContent);\n    }\n\n    renderVisibleItems() {\n        const {visibleItems} = this.state;\n\n        return visibleItems.map((item, index, items) => {\n            const isCurrent = index === items.length - 1;\n            const isPrevCurrent = index === items.length - 2;\n\n            return (\n                <React.Fragment key={index}>\n                    {this.renderItemDivider()}\n                    {this.renderItem(item, isCurrent, isPrevCurrent)}\n                </React.Fragment>\n            );\n        });\n    }\n\n    renderMoreItem() {\n        const {hiddenItems} = this.state;\n        if (hiddenItems.length === 0) {\n            return null;\n        }\n\n        const {popupStyle, popupPlacement, renderItemDivider} = this.props;\n        return (\n            <React.Fragment>\n                <BreadcrumbsSeparator renderItemDivider={renderItemDivider} />\n                <BreadcrumbsMore\n                    items={hiddenItems}\n                    popupPlacement={popupPlacement}\n                    popupStyle={popupStyle}\n                />\n            </React.Fragment>\n        );\n    }\n\n    private recalculate() {\n        const {items: allItems, lastDisplayedItemsCount, firstDisplayedItemsCount} = this.props;\n        let availableWidth = this.container.current?.offsetWidth || 0;\n\n        if (this.container.current && availableWidth > 0) {\n            availableWidth += GAP_WIDTH;\n            const dividers: HTMLElement[] = Array.from(\n                this.container.current.querySelectorAll(`.${b('divider')}`),\n            );\n            const items: HTMLElement[] = [\n                ...(Array.from(\n                    this.container.current.querySelectorAll(`.${b('switcher')}`),\n                ) as HTMLElement[]),\n                ...(Array.from(\n                    this.container.current.querySelectorAll(`.${b('item')}`),\n                ) as HTMLElement[]),\n            ];\n\n            const itemsWidths = items.map(\n                (elem, i) =>\n                    elem.scrollWidth + (i === items.length - 1 ? GAP_WIDTH : GAP_WIDTH * 2),\n            );\n            const dividersWidths = dividers.map((elem) => elem.offsetWidth);\n            const buttonsWidth = itemsWidths.reduce((total, width, index, widths) => {\n                const isLastItem = widths.length - 1 === index;\n                const isItemBeforeLast =\n                    lastDisplayedItemsCount === LastDisplayedItemsCount.Two &&\n                    widths.length - 2 === index;\n\n                if (isLastItem || isItemBeforeLast) {\n                    return total + Math.min(width, 200);\n                }\n\n                return total + width;\n            }, 0);\n            const dividersWidth = dividersWidths.reduce((total, width) => total + width, 0);\n            let totalWidth = buttonsWidth + dividersWidth;\n            let visibleItemsStartIndex = 1;\n            while (\n                totalWidth > availableWidth &&\n                visibleItemsStartIndex < items.length - lastDisplayedItemsCount\n            ) {\n                if (visibleItemsStartIndex === 1) {\n                    totalWidth += MORE_ITEM_WIDTH + dividersWidths[visibleItemsStartIndex];\n                }\n\n                totalWidth -=\n                    itemsWidths[visibleItemsStartIndex] + dividersWidths[visibleItemsStartIndex];\n                visibleItemsStartIndex++;\n            }\n\n            this.setState({\n                calculated: true,\n                visibleItems: allItems.slice(\n                    visibleItemsStartIndex - (1 - firstDisplayedItemsCount),\n                ),\n                hiddenItems: allItems.slice(\n                    firstDisplayedItemsCount,\n                    visibleItemsStartIndex - (1 - firstDisplayedItemsCount),\n                ),\n            });\n        }\n    }\n\n    private handleResize = () => {\n        const state = Breadcrumbs.prepareInitialState(this.props);\n        this.setState(state, this.recalculate);\n    };\n}\n"]}