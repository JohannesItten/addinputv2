{"version":3,"file":"PinInput.js","sourceRoot":"../../../../src","sources":["components/PinInput/PinInput.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {KeyCode} from '../../constants';\nimport {useControlledState, useFocusWithin, useUniqId} from '../../hooks';\nimport {useFormResetHandler} from '../../hooks/private';\nimport type {TextInputProps, TextInputSize} from '../controls';\nimport {TextInput} from '../controls';\nimport {OuterAdditionalContent} from '../controls/common/OuterAdditionalContent/OuterAdditionalContent';\nimport {useDirection} from '../theme';\nimport type {AriaLabelingProps, DOMProps, FocusEventHandlers, QAProps} from '../types';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\n\nimport i18n from './i18n';\n\nimport './PinInput.scss';\n\nexport type PinInputSize = TextInputSize;\nexport type PinInputType = 'numeric' | 'alphanumeric';\n\nexport interface PinInputApi {\n    focus: () => void;\n}\n\nexport interface PinInputProps extends DOMProps, AriaLabelingProps, QAProps, FocusEventHandlers {\n    value?: string[];\n    defaultValue?: string[];\n    onUpdate?: (value: string[]) => void;\n    onUpdateComplete?: (value: string[]) => void;\n    length?: number;\n    size?: PinInputSize;\n    type?: PinInputType;\n    id?: string;\n    name?: string;\n    form?: string;\n    placeholder?: string;\n    disabled?: boolean;\n    autoFocus?: boolean;\n    otp?: boolean;\n    mask?: boolean;\n    responsive?: boolean;\n    note?: TextInputProps['note'];\n    validationState?: TextInputProps['validationState'];\n    errorMessage?: TextInputProps['errorMessage'];\n    apiRef?: React.RefObject<PinInputApi>;\n}\n\nconst b = block('pin-input');\nconst NUMERIC_REGEXP = /[0-9]+/;\nconst ALPHANUMERIC_REGEXP = /[0-9a-z]+/i;\n\nconst validate = (type: PinInputType, newValue: string) => {\n    if (type === 'numeric') {\n        return NUMERIC_REGEXP.test(newValue);\n    } else {\n        return ALPHANUMERIC_REGEXP.test(newValue);\n    }\n};\n\nexport const PinInput = React.forwardRef<HTMLDivElement, PinInputProps>((props, ref) => {\n    const {\n        value,\n        defaultValue,\n        onUpdate,\n        onUpdateComplete,\n        onFocus,\n        onBlur,\n        length = 4,\n        size = 'm',\n        type = 'numeric',\n        id: idProp,\n        name,\n        form,\n        placeholder,\n        disabled,\n        autoFocus,\n        otp,\n        mask,\n        responsive,\n        note,\n        validationState,\n        errorMessage,\n        apiRef,\n        className,\n        style,\n        qa,\n        ...restProps\n    } = props;\n    const refs = React.useRef<Record<number, HTMLInputElement | null>>({});\n    const [activeIndex, setActiveIndex] = React.useState(0);\n    const [focusedIndex, setFocusedIndex] = React.useState(-1);\n    const updateCallback = React.useCallback(\n        (newValue: string[]) => {\n            if (onUpdate) {\n                onUpdate(newValue);\n            }\n\n            if (onUpdateComplete && newValue.every((v) => Boolean(v))) {\n                onUpdateComplete(newValue);\n            }\n        },\n        [onUpdate, onUpdateComplete],\n    );\n    const [values, setValues] = useControlledState(\n        value,\n        defaultValue ?? Array.from({length}, () => ''),\n        updateCallback,\n    );\n    const direction = useDirection();\n    const errorMessageId = useUniqId();\n    const noteId = useUniqId();\n    const isErrorMsgVisible = validationState === 'invalid' && errorMessage;\n    const ariaDescribedBy = [\n        props?.['aria-describedby'],\n        note ? noteId : undefined,\n        isErrorMsgVisible ? errorMessageId : undefined,\n    ]\n        .filter(Boolean)\n        .join(' ');\n\n    const handleRef = (index: number, inputRef: HTMLInputElement | null) => {\n        refs.current[index] = inputRef;\n    };\n\n    const focus = (index: number) => {\n        setActiveIndex(index);\n        refs.current[index]?.focus();\n    };\n\n    const focusPrev = (index: number) => {\n        if (index > 0) {\n            focus(index - 1);\n        }\n    };\n\n    const focusNext = (index: number) => {\n        if (index < length - 1) {\n            focus(index + 1);\n        }\n    };\n\n    const setValuesAtIndex = (index: number, nextValue: string) => {\n        // Normalize array size to length prop\n        const newValues = Array.from({length}, (__, i) => values[i] ?? '');\n\n        if (nextValue.length > 0) {\n            // Fill the subsequent inputs as well as the target input\n            for (let k = 0; k < nextValue.length && index + k < newValues.length; k++) {\n                newValues[index + k] = nextValue[k];\n            }\n        } else {\n            newValues[index] = '';\n        }\n\n        // If values are the same then do not update\n        if (newValues.every((__, i) => newValues[i] === values[i])) {\n            return;\n        }\n\n        setValues(newValues);\n    };\n\n    const handleInputChange = (i: number, event: React.ChangeEvent<HTMLInputElement>) => {\n        let nextValue = event.currentTarget.value;\n        const currentValue = values[i];\n\n        if (currentValue) {\n            // Remove the current value from the new value\n            if (currentValue === nextValue[0]) {\n                nextValue = nextValue.slice(1);\n            } else if (currentValue === nextValue[nextValue.length - 1]) {\n                nextValue = nextValue.slice(0, -1);\n            }\n        }\n\n        if (!validate(type, nextValue)) {\n            return;\n        }\n\n        // If value's length greater than 1, then it's a paste so inserting at the start\n        if (nextValue.length > 1) {\n            setValuesAtIndex(0, nextValue);\n            focusNext(nextValue.length - 1);\n        } else {\n            setValuesAtIndex(i, nextValue);\n            focusNext(i);\n        }\n    };\n\n    const handleInputKeyDown = (i: number, event: React.KeyboardEvent<HTMLInputElement>) => {\n        switch (event.code) {\n            case KeyCode.BACKSPACE:\n                event.preventDefault();\n\n                if (event.currentTarget.value) {\n                    setValuesAtIndex(i, '');\n                } else if (i > 0) {\n                    setValuesAtIndex(i - 1, '');\n                    focusPrev(i);\n                }\n\n                break;\n            case KeyCode.ARROW_LEFT:\n            case KeyCode.ARROW_UP:\n                event.preventDefault();\n\n                if (direction === 'rtl' && event.code === KeyCode.ARROW_LEFT) {\n                    focusNext(i);\n                } else {\n                    focusPrev(i);\n                }\n\n                break;\n            case KeyCode.ARROW_RIGHT:\n            case KeyCode.ARROW_DOWN:\n                event.preventDefault();\n\n                if (direction === 'rtl' && event.code === KeyCode.ARROW_RIGHT) {\n                    focusPrev(i);\n                } else {\n                    focusNext(i);\n                }\n\n                break;\n        }\n    };\n\n    const handleFocus = (index: number) => {\n        setFocusedIndex(index);\n        setActiveIndex(index);\n    };\n\n    const handleBlur = () => {\n        setFocusedIndex(-1);\n    };\n\n    React.useEffect(() => {\n        if (autoFocus) {\n            focus(0);\n        }\n        // We only care about autofocus on initial render\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useImperativeHandle(\n        apiRef,\n        () => ({\n            focus: () => {\n                refs.current[activeIndex]?.focus();\n            },\n        }),\n        [activeIndex],\n    );\n\n    const formInputRef = useFormResetHandler({initialValue: values, onReset: setValues});\n\n    const {focusWithinProps} = useFocusWithin({\n        onFocusWithin: onFocus,\n        onBlurWithin: onBlur,\n    });\n\n    let id = useUniqId();\n    if (idProp) {\n        id = idProp;\n    }\n\n    return (\n        <div\n            ref={ref}\n            {...filterDOMProps(restProps, {labelable: true})}\n            {...focusWithinProps}\n            className={b({size, responsive}, className)}\n            style={style}\n            data-qa={qa}\n            role=\"group\"\n            id={id}\n            aria-describedby={ariaDescribedBy}\n        >\n            <div className={b('items')}>\n                {Array.from({length}).map((__, i) => {\n                    const inputId = `${id}-${i}`;\n                    const ariaLabelledBy =\n                        props['aria-labelledby'] || props['aria-label']\n                            ? [inputId, props['aria-labelledby'] || id].join(' ')\n                            : undefined;\n                    return (\n                        <div key={i} className={b('item')}>\n                            <TextInput\n                                // Only pick first symbol while keeping input always controlled\n                                value={values[i]?.[0] ?? ''}\n                                tabIndex={activeIndex === i ? 0 : -1}\n                                type={mask ? 'password' : 'text'}\n                                size={size}\n                                id={inputId}\n                                disabled={disabled}\n                                placeholder={focusedIndex === i ? undefined : placeholder}\n                                autoComplete={otp ? 'one-time-code' : 'off'}\n                                validationState={validationState}\n                                controlProps={{\n                                    inputMode: type === 'numeric' ? 'numeric' : 'text',\n                                    pattern: type === 'numeric' ? '[0-9]*' : '[0-9a-zA-Z]*',\n                                    className: b('control'),\n                                    autoCapitalize: 'none',\n                                    'aria-label': i18n('label_one-of', {\n                                        number: i + 1,\n                                        count: length,\n                                    }),\n                                    'aria-labelledby': ariaLabelledBy,\n                                    'aria-describedby': ariaDescribedBy,\n                                    'aria-details': props['aria-details'],\n                                    'aria-invalid':\n                                        validationState === 'invalid' ? true : undefined,\n                                }}\n                                controlRef={handleRef.bind(null, i)}\n                                onChange={handleInputChange.bind(null, i)}\n                                onKeyDown={handleInputKeyDown.bind(null, i)}\n                                onFocus={handleFocus.bind(null, i)}\n                                onBlur={handleBlur}\n                            />\n                        </div>\n                    );\n                })}\n                {name ? (\n                    <input\n                        ref={formInputRef}\n                        type=\"hidden\"\n                        name={name}\n                        form={form}\n                        value={values.join('')}\n                        disabled={disabled}\n                    />\n                ) : null}\n            </div>\n            <OuterAdditionalContent\n                note={note}\n                errorMessage={isErrorMsgVisible ? errorMessage : null}\n                noteId={noteId}\n                errorMessageId={errorMessageId}\n            />\n        </div>\n    );\n});\n\nPinInput.displayName = 'PinInput';\n"]}