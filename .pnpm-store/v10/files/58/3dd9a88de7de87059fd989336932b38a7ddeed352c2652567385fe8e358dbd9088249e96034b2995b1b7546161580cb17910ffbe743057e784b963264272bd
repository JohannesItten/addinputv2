{"version":3,"file":"hooks.js","sourceRoot":"../../../../src","sources":["components/Palette/hooks.ts"],"names":[],"mappings":";;AAgBA,wCAmDC;AAnED,iFAAyE;AACzE,2DAAmD;AAenD,SAAgB,cAAc,CAAC,KAAuB;IAClD,MAAM,SAAS,GAAG,IAAA,2BAAY,GAAE,CAAC;IAEjC,MAAM,EAAC,gBAAgB,EAAC,GAAG,IAAA,+BAAc,EAAC;QACtC,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;QAChD,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC;KACjD,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;IAEtC,MAAM,IAAI,GAA+C;QACrD,IAAI,EAAE,MAAM;QACZ,eAAe,EAAE,KAAK,CAAC,QAAQ;QAC/B,eAAe,EAAE,KAAK,CAAC,QAAQ;QAC/B,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,GAAG,gBAAgB;KACtB,CAAC;IAEF,IAAI,CAAC,WAAW,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAO;QACH,GAAG,IAAI;QACP,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE;YACjB,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,EAAE,CAAC;gBAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,SAAS,KAAK,KAAK,EAAE,CAAC;oBACtB,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC3B,CAAC;qBAAM,CAAC;oBACJ,WAAW,CAAC,YAAY,EAAE,CAAC;gBAC/B,CAAC;YACL,CAAC;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;gBACpC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,SAAS,KAAK,KAAK,EAAE,CAAC;oBACtB,WAAW,CAAC,YAAY,EAAE,CAAC;gBAC/B,CAAC;qBAAM,CAAC;oBACJ,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;gBACpC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,WAAW,CAAC,OAAO,EAAE,CAAC;YAC1B,CAAC;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;gBAClC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,WAAW,CAAC,WAAW,EAAE,CAAC;YAC9B,CAAC;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;gBAC1D,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,WAAW,CAAC,UAAU,EAAE,CAAC;YAC7B,CAAC;QACL,CAAC;KACJ,CAAC;AACN,CAAC","sourcesContent":["import {useFocusWithin} from '../../hooks/useFocusWithin/useFocusWithin';\nimport {useDirection} from '../theme/useDirection';\n\nexport interface PaletteGridProps {\n    disabled?: boolean;\n    onFocus?: (event: React.FocusEvent) => void;\n    onBlur?: (event: React.FocusEvent) => void;\n    whenFocused?: {\n        selectItem: () => void;\n        nextItem: () => void;\n        previousItem: () => void;\n        nextRow: () => void;\n        previousRow: () => void;\n    };\n}\n\nexport function usePaletteGrid(props: PaletteGridProps): React.HTMLAttributes<HTMLElement> {\n    const direction = useDirection();\n\n    const {focusWithinProps} = useFocusWithin({\n        onFocusWithin: (event) => props.onFocus?.(event),\n        onBlurWithin: (event) => props.onBlur?.(event),\n    });\n\n    const whenFocused = props.whenFocused;\n\n    const base: React.ButtonHTMLAttributes<HTMLDivElement> = {\n        role: 'grid',\n        'aria-disabled': props.disabled,\n        'aria-readonly': props.disabled,\n        tabIndex: whenFocused ? -1 : 0,\n        ...focusWithinProps,\n    };\n\n    if (!whenFocused) {\n        return base;\n    }\n\n    return {\n        ...base,\n        onKeyDown: (event) => {\n            if (event.code === 'ArrowRight') {\n                event.preventDefault();\n                if (direction === 'ltr') {\n                    whenFocused.nextItem();\n                } else {\n                    whenFocused.previousItem();\n                }\n            } else if (event.code === 'ArrowLeft') {\n                event.preventDefault();\n                if (direction === 'ltr') {\n                    whenFocused.previousItem();\n                } else {\n                    whenFocused.nextItem();\n                }\n            } else if (event.code === 'ArrowDown') {\n                event.preventDefault();\n                whenFocused.nextRow();\n            } else if (event.code === 'ArrowUp') {\n                event.preventDefault();\n                whenFocused.previousRow();\n            } else if (event.code === 'Space' || event.code === 'Enter') {\n                event.preventDefault();\n                whenFocused.selectItem();\n            }\n        },\n    };\n}\n"]}