{"version":3,"file":"PaginationPageSizer.js","sourceRoot":"../../../../../../src","sources":["components/Pagination/components/PaginationPageSizer/PaginationPageSizer.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,qDAAuC;AAEvC,kDAA4E;AAC5E,uEAA8B;AAE9B,0CAA6C;AAYtC,MAAM,mBAAmB,GAAG,CAAC,EAChC,QAAQ,EACR,QAAQ,EACR,IAAI,EACJ,IAAI,EACJ,eAAe,EACf,KAAK,EACL,SAAS,GACL,EAAE,EAAE;IACR,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAC/B,CAAC,cAAc,EAAgB,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,MAAM,CAAC,cAAc,CAAC;QAC7B,OAAO,EAAE,cAAc;QACvB,EAAE,EAAE,IAAA,yCAA6B,EAAC,cAAc,CAAC;KACpD,CAAC,CACL,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,CAAC,mBAAmB,CAAW,EAAE,EAAE;QACrD,MAAM,WAAW,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAChD,MAAM,aAAa,GAAG,IAAA,wBAAgB,EAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAE3D,MAAM,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;QAExC,IAAI,CAAC,aAAa,EAAE,CAAC;YACjB,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YACzB,OAAO;QACX,CAAC;QAED,MAAM,OAAO,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;QAE5D,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACnC,CAAC,CAAC;IAEF,OAAO,CACH,uBAAC,eAAM,IACH,EAAE,EAAE,wBAAY,CAAC,mBAAmB,EACpC,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EACzB,KAAK,EAAE,IAAA,cAAI,EAAC,mBAAmB,CAAC,GAClC,CACL,CAAC;AACN,CAAC,CAAC;AA5CW,QAAA,mBAAmB,uBA4C9B","sourcesContent":["'use client';\n\nimport {Select} from '../../../Select';\nimport type {SelectOption} from '../../../Select';\nimport {PaginationQa, getPaginationPageSizeOptionQa} from '../../constants';\nimport i18n from '../../i18n';\nimport type {PaginationProps, PaginationSize} from '../../types';\nimport {getNumberOfPages} from '../../utils';\n\ntype Props = {\n    onUpdate: NonNullable<PaginationProps['onUpdate']>;\n    page: NonNullable<PaginationProps['page']>;\n    pageSize: NonNullable<PaginationProps['pageSize']>;\n    pageSizeOptions: NonNullable<PaginationProps['pageSizeOptions']>;\n    total: PaginationProps['total'];\n    size: PaginationSize;\n    className?: string;\n};\n\nexport const PaginationPageSizer = ({\n    onUpdate,\n    pageSize,\n    size,\n    page,\n    pageSizeOptions,\n    total,\n    className,\n}: Props) => {\n    const options = pageSizeOptions.map(\n        (pageSizeOption): SelectOption => ({\n            value: String(pageSizeOption),\n            content: pageSizeOption,\n            qa: getPaginationPageSizeOptionQa(pageSizeOption),\n        }),\n    );\n\n    const handleUpdate = ([newPageSizeOnUpdate]: string[]) => {\n        const newPageSize = Number(newPageSizeOnUpdate);\n        const numberOfPages = getNumberOfPages(newPageSize, total);\n\n        const hasUpperLimit = numberOfPages > 0;\n\n        if (!hasUpperLimit) {\n            onUpdate(1, newPageSize);\n            return;\n        }\n\n        const newPage = page > numberOfPages ? numberOfPages : page;\n\n        onUpdate(newPage, newPageSize);\n    };\n\n    return (\n        <Select\n            qa={PaginationQa.PaginationPageSizer}\n            className={className}\n            size={size}\n            onUpdate={handleUpdate}\n            options={options}\n            value={[String(pageSize)]}\n            title={i18n('label_select_size')}\n        />\n    );\n};\n"]}