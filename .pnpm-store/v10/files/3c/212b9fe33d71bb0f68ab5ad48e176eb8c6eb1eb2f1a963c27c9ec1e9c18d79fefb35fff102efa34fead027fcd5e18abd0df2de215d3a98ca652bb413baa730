{"version":3,"file":"useOpenState.js","sourceRoot":"../../../../src","sources":["hooks/useSelect/useOpenState.ts"],"names":[],"mappings":";;;;AAAA,qDAA+B;AAE/B,oFAA4E;AAIrE,MAAM,YAAY,GAAG,CAAC,KAAmB,EAAE,EAAE;IAChD,MAAM,EAAC,YAAY,EAAE,OAAO,EAAC,GAAG,KAAK,CAAC;IACtC,MAAM,gBAAgB,GAAG,KAAK,CAAC,WAAW,CACtC,CAAC,OAAgB,EAAE,EAAE;QACjB,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC;QACxB,IAAI,OAAO,KAAK,KAAK,IAAI,OAAO,EAAE,CAAC;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC;IACL,CAAC,EACD,CAAC,YAAY,EAAE,OAAO,CAAC,CAC1B,CAAC;IAEF,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,IAAA,uCAAkB,EAC3C,KAAK,CAAC,IAAI,EACV,KAAK,CAAC,WAAW,IAAI,KAAK,EAC1B,gBAAgB,CACnB,CAAC;IAEF,MAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAChC,CAAC,GAAa,EAAE,EAAE;QACd,MAAM,OAAO,GAAG,OAAO,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACvD,YAAY,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC,EACD,CAAC,IAAI,EAAE,YAAY,CAAC,CACvB,CAAC;IAEF,OAAO;QACH,IAAI;QACJ,UAAU;KACb,CAAC;AACN,CAAC,CAAC;AA9BW,QAAA,YAAY,gBA8BvB","sourcesContent":["import * as React from 'react';\n\nimport {useControlledState} from '../useControlledState/useControlledState';\n\nimport type {UseOpenProps} from './types';\n\nexport const useOpenState = (props: UseOpenProps) => {\n    const {onOpenChange, onClose} = props;\n    const handleOpenChange = React.useCallback(\n        (newOpen: boolean) => {\n            onOpenChange?.(newOpen);\n            if (newOpen === false && onClose) {\n                onClose();\n            }\n        },\n        [onOpenChange, onClose],\n    );\n\n    const [open, setOpenState] = useControlledState(\n        props.open,\n        props.defaultOpen ?? false,\n        handleOpenChange,\n    );\n\n    const toggleOpen = React.useCallback(\n        (val?: boolean) => {\n            const newOpen = typeof val === 'boolean' ? val : !open;\n            setOpenState(newOpen);\n        },\n        [open, setOpenState],\n    );\n\n    return {\n        open,\n        toggleOpen,\n    };\n};\n"]}