{"version":3,"file":"types.js","sourceRoot":"../../../../src","sources":["components/TreeList/types.ts"],"names":[],"mappings":"","sourcesContent":["import type * as React from 'react';\n\nimport type {QAProps} from '../types';\nimport type {\n    ListContainerProps,\n    ListItemId,\n    ListItemListContextProps,\n    ListItemSize,\n    ListItemViewCommonProps,\n    ListItemViewContentType,\n    UseListResult,\n} from '../useList';\n\nexport type TreeListRenderItem<T, P extends {} = {}> = (props: {\n    id: ListItemId;\n    data: T;\n    // required item props to render\n    props: ListItemViewCommonProps;\n    // internal list context props\n    context: ListItemListContextProps;\n    list: UseListResult<T>;\n    index: number;\n    renderContainerProps?: P;\n}) => React.JSX.Element;\n\nexport type TreeListContainerProps<T, P extends {} = {}> = ListContainerProps<T, P> & {\n    size: ListItemSize;\n};\n\nexport type TreeListRenderContainer<T> = (props: TreeListContainerProps<T>) => React.JSX.Element;\n\nexport type TreeListMapItemDataToContentProps<T> = (item: T) => ListItemViewContentType;\n\nexport type TreeListOnItemClickPayload<T> = {id: ListItemId; list: UseListResult<T>};\n\nexport type TreeListOnItemClick<T> = (\n    payload: TreeListOnItemClickPayload<T>,\n    e?: React.SyntheticEvent,\n) => void;\n\nexport interface TreeListProps<T, P extends {} = {}> extends QAProps {\n    /**\n     * Control outside list container dom element. For example for keyboard\n     */\n    containerRef?: React.RefObject<HTMLDivElement>;\n    list: UseListResult<T>;\n    id?: string | undefined;\n    className?: string;\n    multiple?: boolean;\n    size?: ListItemSize;\n    /**\n     * Override list item content by you custom node.\n     */\n    renderItem?: TreeListRenderItem<T, P>;\n    renderContainer?: TreeListRenderContainer<T>;\n    /**\n     * `null` - disable default click handler\n     */\n    onItemClick?: null | TreeListOnItemClick<T>;\n    /**\n     * List item `data` to ListItemView `content` props\n     */\n    mapItemDataToContentProps: TreeListMapItemDataToContentProps<T>;\n}\n"]}