{"version":3,"file":"useOpen.js","sourceRoot":"../../../../../../src","sources":["components/legacy/Popover/hooks/useOpen.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {useUpdateEffect} from '../../../../hooks/private';\nimport {delayByBehavior} from '../config';\nimport type {PopoverBehavior} from '../config';\n\nexport type UseOpenProps = {\n    initialOpen: boolean;\n    disabled: boolean;\n    autoclosable: boolean;\n    onOpenChange?: (open: boolean) => void;\n    delayOpening?: number;\n    delayClosing?: number;\n    behavior: `${PopoverBehavior}`;\n    shouldBeOpen: React.MutableRefObject<boolean>;\n};\n\nexport const useOpen = ({\n    initialOpen,\n    disabled,\n    autoclosable,\n    onOpenChange,\n    delayOpening,\n    delayClosing,\n    behavior,\n    shouldBeOpen,\n}: UseOpenProps) => {\n    const openingTimeout = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n    const closingTimeout = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n\n    const [isOpen, setIsOpen] = React.useState(initialOpen);\n\n    const unsetOpeningTimeout = React.useCallback(() => {\n        if (openingTimeout.current) {\n            clearTimeout(openingTimeout.current);\n            openingTimeout.current = null;\n        }\n    }, []);\n\n    const unsetClosingTimeout = React.useCallback(() => {\n        if (closingTimeout.current) {\n            clearTimeout(closingTimeout.current);\n            closingTimeout.current = null;\n        }\n    }, []);\n\n    React.useEffect(() => {\n        return () => {\n            unsetOpeningTimeout();\n            unsetClosingTimeout();\n        };\n    }, [unsetClosingTimeout, unsetOpeningTimeout]);\n\n    const setTooltipOpen = React.useCallback(\n        (open: boolean) => {\n            setIsOpen(open);\n            shouldBeOpen.current = open;\n            onOpenChange?.(open);\n        },\n        [onOpenChange, shouldBeOpen],\n    );\n\n    const openTooltip = React.useCallback(() => {\n        unsetOpeningTimeout();\n        setTooltipOpen(true);\n    }, [setTooltipOpen, unsetOpeningTimeout]);\n\n    const closeTooltip = React.useCallback(() => {\n        unsetClosingTimeout();\n        setTooltipOpen(false);\n    }, [setTooltipOpen, unsetClosingTimeout]);\n\n    React.useEffect(() => {\n        if (disabled) {\n            closeTooltip();\n        }\n    }, [disabled, closeTooltip]);\n\n    useUpdateEffect(() => {\n        if (autoclosable && !shouldBeOpen.current) {\n            closeTooltip();\n        }\n    }, [autoclosable, closeTooltip, shouldBeOpen]);\n\n    const [defaultDelayOpening, defaultDelayClosing] = delayByBehavior[behavior];\n\n    const openTooltipDelayed = React.useCallback(() => {\n        openingTimeout.current = setTimeout(() => {\n            openingTimeout.current = null;\n            openTooltip();\n        }, delayOpening ?? defaultDelayOpening);\n    }, [defaultDelayOpening, delayOpening, openTooltip]);\n\n    const closeTooltipDelayed = React.useCallback(() => {\n        closingTimeout.current = setTimeout(() => {\n            closingTimeout.current = null;\n            closeTooltip();\n        }, delayClosing ?? defaultDelayClosing);\n    }, [closeTooltip, defaultDelayClosing, delayClosing]);\n\n    return {\n        isOpen,\n        closingTimeout,\n        openTooltip,\n        openTooltipDelayed,\n        unsetOpeningTimeout,\n        closeTooltip,\n        closeTooltipDelayed,\n        unsetClosingTimeout,\n    };\n};\n"]}