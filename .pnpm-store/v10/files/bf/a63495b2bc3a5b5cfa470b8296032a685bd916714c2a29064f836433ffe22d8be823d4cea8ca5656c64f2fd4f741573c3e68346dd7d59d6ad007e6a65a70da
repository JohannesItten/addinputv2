{"version":3,"file":"ThemeProvider.js","sourceRoot":"../../../../src","sources":["components/theme/ThemeProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {PrivateLayoutProvider} from '../layout/LayoutProvider/LayoutProvider';\nimport type {PrivateLayoutProviderProps} from '../layout/LayoutProvider/LayoutProvider';\nimport {block} from '../utils/cn';\n\nimport {ThemeContext} from './ThemeContext';\nimport {ThemeSettingsContext} from './ThemeSettingsContext';\nimport type {ThemeSettings} from './ThemeSettingsContext';\nimport {\n    DEFAULT_DARK_THEME,\n    DEFAULT_DIRECTION,\n    DEFAULT_LIGHT_THEME,\n    DEFAULT_THEME,\n    ROOT_CLASSNAME,\n} from './constants';\nimport {updateBodyClassName, updateBodyDirection} from './dom-helpers';\nimport type {Direction, RealTheme, Theme, ThemeContextProps} from './types';\nimport {useSystemTheme} from './useSystemTheme';\n\nconst b = block(ROOT_CLASSNAME);\n\nexport interface ThemeProviderProps extends React.PropsWithChildren<{}> {\n    theme?: Theme;\n    systemLightTheme?: RealTheme;\n    systemDarkTheme?: RealTheme;\n    direction?: Direction;\n    scoped?: boolean;\n    rootClassName?: string;\n    layout?: Omit<PrivateLayoutProviderProps, 'children'>;\n}\n\nexport function ThemeProvider({\n    theme: themeProp,\n    systemLightTheme: systemLightThemeProp,\n    systemDarkTheme: systemDarkThemeProp,\n    direction: directionProp,\n    scoped: scopedProp = false,\n    rootClassName = '',\n    children,\n    layout,\n}: ThemeProviderProps) {\n    const parentThemeState = React.useContext(ThemeContext);\n    const systemThemeState = React.useContext(ThemeSettingsContext);\n\n    const hasParentProvider = parentThemeState !== undefined;\n    const scoped = hasParentProvider || scopedProp;\n    const parentTheme = parentThemeState?.theme ?? DEFAULT_THEME;\n    const theme = themeProp ?? parentTheme;\n    const systemLightTheme =\n        systemLightThemeProp ?? systemThemeState?.systemLightTheme ?? DEFAULT_LIGHT_THEME;\n    const systemDarkTheme =\n        systemDarkThemeProp ?? systemThemeState?.systemDarkTheme ?? DEFAULT_DARK_THEME;\n    const parentDirection = parentThemeState?.direction ?? DEFAULT_DIRECTION;\n    const direction = directionProp ?? parentDirection;\n\n    const systemTheme = useSystemTheme() === 'light' ? systemLightTheme : systemDarkTheme;\n    const themeValue = theme === 'system' ? systemTheme : theme;\n\n    const prevRootClassName = React.useRef('');\n\n    React.useLayoutEffect(() => {\n        if (!scoped) {\n            updateBodyClassName({\n                theme: themeValue,\n                className: rootClassName,\n                prevClassName: prevRootClassName.current,\n            });\n            updateBodyDirection(direction);\n            prevRootClassName.current = rootClassName;\n        }\n    }, [scoped, themeValue, direction, rootClassName]);\n\n    const contextValue = React.useMemo(\n        () =>\n            ({\n                theme,\n                themeValue,\n                direction,\n                scoped,\n            }) satisfies ThemeContextProps,\n        [theme, themeValue, direction, scoped],\n    );\n\n    const themeSettingsContext = React.useMemo(\n        () => ({systemLightTheme, systemDarkTheme}) satisfies ThemeSettings,\n        [systemLightTheme, systemDarkTheme],\n    );\n\n    return (\n        <PrivateLayoutProvider {...layout}>\n            <ThemeContext.Provider value={contextValue}>\n                <ThemeSettingsContext.Provider value={themeSettingsContext}>\n                    {scoped ? (\n                        <div className={b({theme: themeValue}, rootClassName)} dir={direction}>\n                            {children}\n                        </div>\n                    ) : (\n                        children\n                    )}\n                </ThemeSettingsContext.Provider>\n            </ThemeContext.Provider>\n        </PrivateLayoutProvider>\n    );\n}\n\nThemeProvider.displayName = 'ThemeProvider';\n"]}