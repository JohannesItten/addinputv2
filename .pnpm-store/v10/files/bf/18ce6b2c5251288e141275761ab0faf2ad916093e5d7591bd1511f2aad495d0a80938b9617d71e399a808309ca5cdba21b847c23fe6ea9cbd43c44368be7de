{"version":3,"file":"middlewares.js","sourceRoot":"../../../../../../src","sources":["components/Select/components/SelectPopup/middlewares.ts"],"names":[],"mappings":"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","sourcesContent":["import {flip, offset as floatingOffset, limitShift, shift, size} from '@floating-ui/react';\nimport type {Middleware} from '@floating-ui/react';\n\nimport {BORDER_WIDTH, POPUP_MIN_WIDTH_IN_VIRTUALIZE_CASE} from '../../constants';\n\nimport type {SelectPopupProps} from './types';\n\nconst adjustBorderWidth = (width: number) => {\n    return width - BORDER_WIDTH * 2;\n};\n\nconst getMinWidth = (referenceWidth: number, virtualized?: boolean) => {\n    if (virtualized) {\n        return referenceWidth > POPUP_MIN_WIDTH_IN_VIRTUALIZE_CASE\n            ? referenceWidth\n            : POPUP_MIN_WIDTH_IN_VIRTUALIZE_CASE;\n    }\n\n    return adjustBorderWidth(referenceWidth);\n};\n\nconst getPopupWidth = (\n    width: SelectPopupProps['width'],\n    controlWidth: number,\n    virtualized?: boolean,\n) => {\n    let popupWidth = controlWidth;\n    if (typeof width === 'number') {\n        popupWidth = width;\n    } else if (width === 'fit') {\n        popupWidth = adjustBorderWidth(controlWidth);\n    } else {\n        popupWidth = getMinWidth(controlWidth, virtualized);\n    }\n\n    return `${popupWidth}px`;\n};\n\nexport function sameWidthMiddleware(\n    args: Pick<SelectPopupProps, 'width' | 'disablePortal' | 'virtualized'>,\n): Middleware {\n    const {width, virtualized} = args;\n\n    return size({\n        apply(state) {\n            const skip =\n                typeof width !== 'number' && Boolean(state.elements.floating.style.maxWidth);\n\n            if (skip) {\n                return;\n            }\n\n            const popupWidth = getPopupWidth(width, state.rects.reference.width, virtualized);\n            const floatingStyle: Record<string, unknown> = {};\n\n            if (typeof width !== 'number' && width !== 'fit') {\n                floatingStyle.minWidth = popupWidth;\n                floatingStyle.width = undefined;\n            } else {\n                floatingStyle.minWidth = popupWidth;\n                floatingStyle.width = popupWidth;\n            }\n\n            floatingStyle.maxWidth = `max(90vw, ${adjustBorderWidth(\n                state.rects.reference.width,\n            )}px)`;\n\n            Object.assign(state.elements.floating.style, floatingStyle);\n        },\n    });\n}\n\nexport function getMiddlewares(\n    args: Pick<SelectPopupProps, 'width' | 'disablePortal' | 'virtualized'>,\n): Middleware[] {\n    return [\n        floatingOffset({mainAxis: BORDER_WIDTH, crossAxis: BORDER_WIDTH}),\n        flip({altBoundary: args.disablePortal}),\n        shift({\n            limiter: limitShift(),\n            crossAxis: true,\n            padding: 10,\n            altBoundary: args.disablePortal,\n        }),\n        sameWidthMiddleware(args),\n    ];\n}\n"]}