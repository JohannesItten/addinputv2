{"version":3,"file":"ToastList.js","sourceRoot":"../../../../../src","sources":["components/Toaster/ToastList/ToastList.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,EAAC,aAAa,EAAE,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAEtE,OAAO,EAAC,KAAK,EAAC,0BAAuB;AACrC,OAAO,EAAC,0BAA0B,EAAC,kCAA+B;AAClE,OAAO,EAAC,KAAK,EAAC,0BAAuB;AAGrC,8BAA+B;AAC/B,yBAA0B;AAE1B,MAAM,2BAA2B,GAAG,0BAA0B,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;AACjG,MAAM,0BAA0B,GAAG,0BAA0B,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAQ/F,MAAM,UAAU,SAAS,CAAC,KAAqB;IAC3C,MAAM,EAAC,MAAM,EAAE,MAAM,EAAE,cAAc,EAAC,GAAG,KAAK,CAAC;IAE/C,OAAO,CACH,KAAC,eAAe,IAAC,SAAS,EAAE,IAAI,YAC3B,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CACnB,KAAC,aAAa,IAEV,OAAO,EAAE,KAAK,CAAC,GAAG,EAClB,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,2BAA2B,EAC7E,cAAc,EAAE,CAAC,IAAI,EAAE,EAAE,CACrB,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,EAE9D,OAAO,EAAE,GAAG,EAAE,CAAC,4BAA4B,CAAC,KAAK,CAAC,EAClD,MAAM,EAAE,GAAG,EAAE,CAAC,4BAA4B,CAAC,KAAK,CAAC,YAEjD,KAAC,KAAK,OAAK,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,GAAI,IAT/D,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,EAAE,CAUzB,CACnB,CAAC,GACY,CACrB,CAAC;AACN,CAAC;AAED,SAAS,4BAA4B,CAAC,KAAyB;IAC3D,IAAI,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC;QACrB,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAC/B,kBAAkB,EAClB,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,IAAI,CACxC,CAAC;IACN,CAAC;AACL,CAAC","sourcesContent":["'use client';\n\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport {block} from '../../utils/cn';\nimport {getCSSTransitionClassNames} from '../../utils/transition';\nimport {Toast} from '../Toast/Toast';\nimport type {InternalToastProps} from '../types';\n\nimport './ToastAnimation.scss';\nimport './ToastList.scss';\n\nconst desktopTransitionClassNames = getCSSTransitionClassNames(block('toast-animation-desktop'));\nconst mobileTransitionClassNames = getCSSTransitionClassNames(block('toast-animation-mobile'));\n\ntype ToastListProps = {\n    removeCallback: (name: string) => void;\n    toasts: InternalToastProps[];\n    mobile?: boolean;\n};\n\nexport function ToastList(props: ToastListProps) {\n    const {toasts, mobile, removeCallback} = props;\n\n    return (\n        <TransitionGroup component={null}>\n            {toasts.map((toast) => (\n                <CSSTransition\n                    key={`${toast.name}_${toast.addedAt}`}\n                    nodeRef={toast.ref}\n                    classNames={mobile ? mobileTransitionClassNames : desktopTransitionClassNames}\n                    addEndListener={(done) =>\n                        toast.ref?.current?.addEventListener('animationend', done)\n                    }\n                    onEnter={() => updateToastHeightCssProperty(toast)}\n                    onExit={() => updateToastHeightCssProperty(toast)}\n                >\n                    <Toast {...toast} mobile={mobile} removeCallback={removeCallback} />\n                </CSSTransition>\n            ))}\n        </TransitionGroup>\n    );\n}\n\nfunction updateToastHeightCssProperty(toast: InternalToastProps) {\n    if (toast.ref?.current) {\n        toast.ref.current.style.setProperty(\n            '--_--item-height',\n            `${toast.ref.current.offsetHeight}px`,\n        );\n    }\n}\n"]}