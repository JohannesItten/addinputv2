{"version":3,"file":"ListLoadingIndicator.js","sourceRoot":"../../../../src","sources":["components/List/ListLoadingIndicator.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAC,eAAe,EAAC,6BAAoB;AAC5C,OAAO,EAAC,MAAM,EAAC,2BAAkB;AACjC,OAAO,EAAC,KAAK,EAAC,uBAAoB;AAElC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AACxB,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,KAAiC,EAAE,EAAE;IACtE,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAwB,IAAI,CAAC,CAAC;IAEtD,eAAe,CAAC,EAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC,CAAC,CAAC;IAEzE,OAAO,CACH,cAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,mBAAmB,CAAC,YAC5C,KAAC,MAAM,IAAC,EAAE,EAAE,aAAa,GAAI,GAC3B,CACT,CAAC;AACN,CAAC,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useIntersection} from '../../hooks';\nimport {Loader} from '../Loader';\nimport {block} from '../utils/cn';\n\nconst b = block('list');\nexport const ListLoadingIndicator = (props: {onIntersect?: () => void}) => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n\n    useIntersection({element: ref.current, onIntersect: props?.onIntersect});\n\n    return (\n        <div ref={ref} className={b('loading-indicator')}>\n            <Loader qa={'list-loader'} />\n        </div>\n    );\n};\n"]}