{"version":3,"file":"utils.js","sourceRoot":"../../../src","sources":["types/utils.ts"],"names":[],"mappings":"","sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DistributiveOmit<T, K extends keyof any> = T extends any ? Omit<T, K> : never;\n\n/**\n * The final type is string but IDE will suggest values from T\n * Use (string & {}) for better autocomplete https://github.com/Microsoft/TypeScript/issues/29729#issuecomment-505826972\n *\n * @example\n * ```\n * type Lang = StringWithSuggest<'en' | 'rs'>;\n *\n * const lang: Lang = '';\n * // Start typing in your TypeScript-enabled IDE.\n * // You **will** get auto-completion for `en` and `rs` literals.\n * ```\n */\nexport type StringWithSuggest<T extends string> = `${T}` | (string & {});\n\n/* DeepPartial with depth limitation up to 9 */\nexport type DeepPartial<T, N extends number = 9> = N extends 0\n    ? T\n    : Partial<{[P in keyof T]: DeepPartial<T[P], [never, 0, 1, 2, 3, 4, 5, 6, 7, 8][N]>}>;\n"]}