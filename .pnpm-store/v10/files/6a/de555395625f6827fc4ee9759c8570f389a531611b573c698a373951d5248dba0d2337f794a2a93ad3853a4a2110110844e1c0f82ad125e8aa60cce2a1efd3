{"version":3,"file":"RadioGroup.js","sourceRoot":"../../../../src","sources":["components/RadioGroup/RadioGroup.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;AAEb,qDAA+B;AAE/B,0DAAkD;AAClD,6CAA+B;AAG/B,uCAAkC;AAElC,4BAA2B;AAE3B,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,aAAa,CAAC,CAAC;AAoBlB,QAAA,UAAU,GAAG,KAAK,CAAC,UAAU,CACtC,SAAS,UAAU,CAAC,KAAK,EAAE,GAAG;IAC1B,MAAM,EACF,IAAI,GAAG,GAAG,EACV,SAAS,GAAG,YAAY,EACxB,KAAK,EACL,SAAS,EACT,eAAe,EACf,EAAE,EACF,QAAQ,GACX,GAAG,KAAK,CAAC;IACV,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IAE5B,IAAI,CAAC,OAAO,EAAE,CAAC;QACX,OAAO,GACH,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAClC,CAAC,GAAG,CAAC,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE,CAAC,CAAC;YAChB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ;YACxC,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,EAAE,EAAE,KAAK,CAAC,EAAE;SACf,CAAC,CAAC,CAAC;IACR,CAAC;IAED,MAAM,EAAC,cAAc,EAAE,YAAY,EAAC,GAAG,IAAA,uBAAa,EAAC,EAAC,GAAG,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;IAE1E,OAAO,CACH,mCACQ,cAAc,EAClB,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,EAAE,SAAS,CAAC,aACjC,EAAE,YAEV,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAC/B,2BAAC,aAAK,OACE,WAAW,EACf,GAAG,EAAE,WAAW,CAAC,KAAK,EACtB,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,eAAe,CAAC,EACvC,IAAI,EAAE,IAAI,GACZ,CACL,CAAC,GACA,CACT,CAAC;AACN,CAAC,CACmB,CAAC;AAEzB,kBAAU,CAAC,MAAM,GAAG,aAAK,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {useRadioGroup} from '../../hooks/private';\nimport {Radio} from '../Radio';\nimport type {RadioProps, RadioSize} from '../Radio';\nimport type {ControlGroupOption, ControlGroupProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport './RadioGroup.scss';\n\nconst b = block('radio-group');\n\nexport type RadioGroupOption = ControlGroupOption;\nexport type RadioGroupSize = RadioSize;\nexport type RadioGroupDirection = 'vertical' | 'horizontal';\n\nexport interface RadioGroupProps extends ControlGroupProps, DOMProps, QAProps {\n    size?: RadioGroupSize;\n    direction?: RadioGroupDirection;\n    children?:\n        | React.ReactElement<RadioProps, typeof Radio>\n        | React.ReactElement<RadioProps, typeof Radio>[];\n    optionClassName?: string;\n}\n\ninterface RadioGroupComponent\n    extends React.ForwardRefExoticComponent<RadioGroupProps & React.RefAttributes<HTMLDivElement>> {\n    Option: typeof Radio;\n}\n\nexport const RadioGroup = React.forwardRef<HTMLDivElement, RadioGroupProps>(\n    function RadioGroup(props, ref) {\n        const {\n            size = 'm',\n            direction = 'horizontal',\n            style,\n            className,\n            optionClassName,\n            qa,\n            children,\n        } = props;\n        let options = props.options;\n\n        if (!options) {\n            options = (\n                React.Children.toArray(children) as React.ReactElement<RadioProps, typeof Radio>[]\n            ).map(({props}) => ({\n                value: props.value,\n                content: props.content || props.children,\n                disabled: props.disabled,\n                qa: props.qa,\n            }));\n        }\n\n        const {containerProps, optionsProps} = useRadioGroup({...props, options});\n\n        return (\n            <div\n                {...containerProps}\n                ref={ref}\n                style={style}\n                className={b({size, direction}, className)}\n                data-qa={qa}\n            >\n                {optionsProps.map((optionProps) => (\n                    <Radio\n                        {...optionProps}\n                        key={optionProps.value}\n                        className={b('option', optionClassName)}\n                        size={size}\n                    />\n                ))}\n            </div>\n        );\n    },\n) as RadioGroupComponent;\n\nRadioGroup.Option = Radio;\n"]}