{"version":3,"file":"SegmentedRadioGroup.js","sourceRoot":"../../../../src","sources":["components/SegmentedRadioGroup/SegmentedRadioGroup.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;AAEb,qDAA+B;AAE/B,0DAAqE;AAErE,uCAAkC;AAElC,8EAAgF;AAEhF,qCAAoC;AAEpC,MAAM,CAAC,GAAG,IAAA,UAAK,EAAC,uBAAuB,CAAC,CAAC;AAuB5B,QAAA,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,mBAAmB,CAC5E,KAAkC,EAClC,GAAuC;IAEvC,MAAM,EAAC,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,QAAQ,EAAC,GAAG,KAAK,CAAC;IAClE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IAE9B,MAAM,EAAC,cAAc,EAAE,YAAY,EAAE,YAAY,EAAC,GAAG,IAAA,uBAAa,EAAC,EAAC,GAAG,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;IAExF,OAAO,CACH,uBAAC,2BAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,YAAY,YAC3C,mCACQ,cAAc,EAClB,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,EAAE,SAAS,CAAC,aAC7B,EAAE,YAEV,QAAQ;gBACL,YAAY,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAC/B,2BAAC,qDAAM,OAAK,WAAW,EAAE,GAAG,EAAE,WAAW,CAAC,KAAK,GAAI,CACtD,CAAC,GACJ,GACmB,CAChC,CAAC;AACN,CAAC,CAAgD,CAAC;AAElD,2BAAmB,CAAC,MAAM,GAAG,qDAAM,CAAC","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {RadioGroupContext, useRadioGroup} from '../../hooks/private';\nimport type {ControlGroupOption, ControlGroupProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\n\nimport {SegmentedRadioGroupOption as Option} from './SegmentedRadioGroupOption';\n\nimport './SegmentedRadioGroup.scss';\n\nconst b = block('segmented-radio-group');\n\n// export type SegmentedRadioGroupOption<T extends string = string> = ControlGroupOption<T>;\nexport type SegmentedRadioGroupSize = 's' | 'm' | 'l' | 'xl';\nexport type SegmentedRadioGroupWidth = 'auto' | 'max';\n\nexport interface SegmentedRadioGroupProps<T extends string = string>\n    extends ControlGroupProps<T>,\n        DOMProps,\n        QAProps {\n    size?: SegmentedRadioGroupSize;\n    width?: SegmentedRadioGroupWidth;\n    children?:\n        | React.ReactElement<ControlGroupOption<T>>\n        | React.ReactElement<ControlGroupOption<T>>[];\n}\n\ntype SegmentedRadioGroupComponentType = (<T extends string>(\n    props: SegmentedRadioGroupProps<T> & {ref?: React.ForwardedRef<HTMLDivElement>},\n) => React.JSX.Element) & {\n    Option: typeof Option;\n};\n\nexport const SegmentedRadioGroup = React.forwardRef(function SegmentedRadioGroup<T extends string>(\n    props: SegmentedRadioGroupProps<T>,\n    ref: React.ForwardedRef<HTMLDivElement>,\n) {\n    const {size = 'm', width, style, className, qa, children} = props;\n    const options = props.options;\n\n    const {containerProps, optionsProps, contextProps} = useRadioGroup({...props, options});\n\n    return (\n        <RadioGroupContext.Provider value={contextProps}>\n            <div\n                {...containerProps}\n                ref={ref}\n                style={style}\n                className={b({size, width}, className)}\n                data-qa={qa}\n            >\n                {children ||\n                    optionsProps?.map((optionProps) => (\n                        <Option {...optionProps} key={optionProps.value} />\n                    ))}\n            </div>\n        </RadioGroupContext.Provider>\n    );\n}) as unknown as SegmentedRadioGroupComponentType;\n\nSegmentedRadioGroup.Option = Option;\n"]}