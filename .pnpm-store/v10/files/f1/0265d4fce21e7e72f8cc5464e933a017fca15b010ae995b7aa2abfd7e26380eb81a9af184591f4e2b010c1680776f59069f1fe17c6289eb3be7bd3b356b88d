{"version":3,"file":"Modal.js","sourceRoot":"../../../../src","sources":["components/Modal/Modal.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport {\n    FloatingFocusManager,\n    FloatingNode,\n    FloatingOverlay,\n    FloatingTree,\n    useDismiss,\n    useFloating,\n    useFloatingNodeId,\n    useFloatingParentNodeId,\n    useInteractions,\n    useRole,\n} from '@floating-ui/react';\nimport type {\n    FloatingFocusManagerProps,\n    OpenChangeReason,\n    UseFloatingOptions,\n} from '@floating-ui/react';\nimport {isTabbable} from 'tabbable';\n\nimport {KeyCode} from '../../constants';\nimport {useForkRef} from '../../hooks';\nimport {useAnimateHeight} from '../../hooks/private';\nimport {useFloatingTransition} from '../../hooks/private/useFloatingTransition';\nimport {Portal} from '../Portal';\nimport type {PortalProps} from '../Portal';\nimport type {AriaLabelingProps, DOMProps, QAProps} from '../types';\nimport {block} from '../utils/cn';\nimport {filterDOMProps} from '../utils/filterDOMProps';\nimport {useLayer} from '../utils/layer-manager';\n\nimport i18n from './i18n';\n\nimport './Modal.scss';\n\nexport type ModalCloseReason = 'outsideClick' | 'escapeKeyDown' | string | undefined;\n\nexport interface ModalProps\n    extends Pick<PortalProps, 'container' | 'disablePortal'>,\n        DOMProps,\n        AriaLabelingProps,\n        QAProps {\n    open?: boolean;\n    /** Callback for open state changes, when dismiss happens for example */\n    onOpenChange?: (open: boolean, event?: Event, reason?: OpenChangeReason) => void;\n    keepMounted?: boolean;\n    disableBodyScrollLock?: boolean;\n    /**\n     * FloatingFocusManager `initialFocus` property\n     */\n    initialFocus?: FloatingFocusManagerProps['initialFocus'];\n    /**\n     * FloatingFocusManager `returnFocus` property\n     */\n    returnFocus?: FloatingFocusManagerProps['returnFocus'];\n\n    /** Do not add a11y dismiss buttons when managing focus */\n    disableVisuallyHiddenDismiss?: boolean;\n\n    children?: React.ReactNode;\n    /**\n     * This callback will be called when Escape key pressed on keyboard, or click outside was made\n     * This behaviour could be disabled with `disableEscapeKeyDown`\n     * and `disableOutsideClick` options\n     * @deprecated Use `onOpenChange` instead\n     */\n    onClose?: (event: MouseEvent | KeyboardEvent, reason: ModalCloseReason) => void;\n    /**\n     * This callback will be called when Escape key pressed on keyboard\n     * This behaviour could be disabled with `disableEscapeKeyDown` option\n     * @deprecated Use `onOpenChange` instead\n     */\n    onEscapeKeyDown?: (event: KeyboardEvent) => void;\n    /**\n     * This callback will be called when Enter key is pressed on keyboard\n     * @deprecated It is not recommended to use this callback.\n     * Consider using the submit event in case of a form content or using initialFocus property on the confirm button in case of non-interactive content\n     */\n    onEnterKeyDown?: (event: KeyboardEvent) => void;\n    /**\n     * This callback will be called when click is outside of elements of \"top layer\"\n     * This behaviour could be disabled with `disableOutsideClick` option\n     * @deprecated Use `onOpenChange` instead\n     */\n    onOutsideClick?: (event: MouseEvent) => void;\n    /** Do not dismiss on escape key press */\n    disableEscapeKeyDown?: boolean;\n    /** Do not dismiss on outside click */\n    disableOutsideClick?: boolean;\n    contentClassName?: string;\n    /** Callback called when `Modal` is opened and \"in\" transition is started */\n    onTransitionIn?: () => void;\n    /** Callback called when `Modal` is opened and \"in\" transition is completed */\n    onTransitionInComplete?: () => void;\n    /** Callback called when `Modal` is closed and \"out\" transition is started */\n    onTransitionOut?: () => void;\n    /** Callback called when `Popup` is closed and \"out\" transition is completed */\n    onTransitionOutComplete?: () => void;\n    contentOverflow?: 'visible' | 'auto';\n    floatingRef?: React.RefObject<HTMLDivElement>;\n    disableHeightTransition?: boolean;\n}\n\nconst b = block('modal');\n\nconst TRANSITION_DURATION = 150;\n\nfunction ModalComponent({\n    open = false,\n    onOpenChange,\n    keepMounted = false,\n    disableBodyScrollLock = false,\n    disableEscapeKeyDown,\n    disableOutsideClick,\n    initialFocus,\n    returnFocus,\n    disableVisuallyHiddenDismiss,\n    onEscapeKeyDown,\n    onOutsideClick,\n    onClose,\n    onEnterKeyDown,\n    onTransitionIn,\n    onTransitionInComplete,\n    onTransitionOut,\n    onTransitionOutComplete,\n    children,\n    style,\n    contentOverflow = 'visible',\n    className,\n    contentClassName,\n    container,\n    disablePortal,\n    qa,\n    floatingRef,\n    disableHeightTransition = false,\n    ...restProps\n}: ModalProps) {\n    useLayer({open, type: 'modal'});\n\n    const handleOpenChange = React.useCallback<NonNullable<UseFloatingOptions['onOpenChange']>>(\n        (isOpen, event, reason) => {\n            onOpenChange?.(isOpen, event, reason);\n\n            if (isOpen || !event) {\n                return;\n            }\n\n            let closeReason;\n            if (reason === 'escape-key') {\n                closeReason = 'escapeKeyDown';\n            } else if (reason === 'outside-press') {\n                closeReason = 'outsideClick';\n            } else {\n                closeReason = reason;\n            }\n\n            if (closeReason === 'escapeKeyDown' && onEscapeKeyDown) {\n                onEscapeKeyDown(event as KeyboardEvent);\n            }\n\n            if (closeReason === 'outsideClick' && onOutsideClick) {\n                onOutsideClick(event as MouseEvent);\n            }\n\n            onClose?.(event as KeyboardEvent | MouseEvent, closeReason);\n        },\n        [onOpenChange, onEscapeKeyDown, onOutsideClick, onClose],\n    );\n\n    const floatingNodeId = useFloatingNodeId();\n\n    const {refs, elements, context} = useFloating({\n        nodeId: floatingNodeId,\n        open,\n        onOpenChange: handleOpenChange,\n    });\n\n    const handleFloatingRef = useForkRef<HTMLDivElement>(refs.setFloating, floatingRef);\n\n    const dismiss = useDismiss(context, {\n        enabled: !disableOutsideClick || !disableEscapeKeyDown,\n        outsidePress: !disableOutsideClick,\n        escapeKey: !disableEscapeKeyDown,\n    });\n\n    const role = useRole(context, {role: 'dialog'});\n\n    const {getFloatingProps} = useInteractions([dismiss, role]);\n\n    const {isMounted, status} = useFloatingTransition({\n        context,\n        duration: TRANSITION_DURATION,\n        onTransitionIn,\n        onTransitionInComplete,\n        onTransitionOut,\n        onTransitionOutComplete,\n    });\n\n    useAnimateHeight({\n        ref: refs.floating,\n        enabled: status === 'open' && !disableHeightTransition,\n    });\n\n    const handleKeyDown = React.useCallback(\n        (event: React.KeyboardEvent) => {\n            if (!onEnterKeyDown || event.key !== KeyCode.ENTER || event.defaultPrevented) {\n                return;\n            }\n\n            const floatingElement = elements.floating;\n            if (!floatingElement) {\n                return;\n            }\n            const pathElements = event.nativeEvent.composedPath();\n            const index = pathElements.indexOf(floatingElement);\n\n            const nestedElements = index < 0 ? pathElements : pathElements.slice(0, index);\n            const nestedFloatingElementIndex = nestedElements.findIndex((el) =>\n                (el as Element)?.hasAttribute('data-floating-ui-focusable'),\n            );\n\n            if (nestedFloatingElementIndex < 0) {\n                onEnterKeyDown(event.nativeEvent);\n                return;\n            }\n\n            const hasInnerTabbableElements = nestedElements\n                .slice(0, nestedFloatingElementIndex)\n                .some((el) => isTabbable(el as Element));\n\n            if (!hasInnerTabbableElements) {\n                onEnterKeyDown(event.nativeEvent);\n            }\n        },\n        [elements.floating, onEnterKeyDown],\n    );\n\n    return (\n        <FloatingNode id={floatingNodeId}>\n            {isMounted || keepMounted ? (\n                <Portal container={container} disablePortal={disablePortal}>\n                    <FloatingOverlay\n                        style={style}\n                        className={b({open}, className)}\n                        data-qa={qa}\n                        data-floating-ui-status={status}\n                        lockScroll={!disableBodyScrollLock}\n                    >\n                        <div className={b('content-aligner')}>\n                            <div className={b('content-wrapper')}>\n                                <FloatingFocusManager\n                                    context={context}\n                                    disabled={!isMounted}\n                                    modal={isMounted}\n                                    initialFocus={initialFocus ?? refs.floating}\n                                    returnFocus={returnFocus}\n                                    visuallyHiddenDismiss={\n                                        disableVisuallyHiddenDismiss ? false : i18n('close')\n                                    }\n                                    restoreFocus={true}\n                                >\n                                    <div\n                                        {...filterDOMProps(restProps, {labelable: true})}\n                                        className={b(\n                                            'content',\n                                            {'has-scroll': contentOverflow === 'auto'},\n                                            contentClassName,\n                                        )}\n                                        ref={handleFloatingRef}\n                                        {...getFloatingProps({\n                                            onKeyDown: handleKeyDown,\n                                        })}\n                                    >\n                                        {children}\n                                    </div>\n                                </FloatingFocusManager>\n                            </div>\n                        </div>\n                    </FloatingOverlay>\n                </Portal>\n            ) : null}\n        </FloatingNode>\n    );\n}\n\nexport function Modal(props: ModalProps) {\n    const parentId = useFloatingParentNodeId();\n\n    if (parentId === null) {\n        return (\n            <FloatingTree>\n                <ModalComponent {...props} />\n            </FloatingTree>\n        );\n    }\n\n    return <ModalComponent {...props} />;\n}\n"]}