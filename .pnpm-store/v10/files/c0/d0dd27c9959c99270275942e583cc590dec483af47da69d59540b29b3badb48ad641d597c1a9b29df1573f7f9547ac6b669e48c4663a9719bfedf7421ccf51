{"version":3,"file":"ListContainer.js","sourceRoot":"../../../../../../src","sources":["components/useList/components/ListContainer/ListContainer.tsx"],"names":[],"mappings":";;AAoBA,sCAoBC;;AArCD,qEAAuD;AAEvD,6FAAyF;AAezF,SAAgB,aAAa,CAAuB,EAChD,YAAY,EACZ,UAAU,EACV,IAAI,EACJ,GAAG,KAAK,EACe;IACvB,OAAO,CACH,uBAAC,qCAAiB,IAAC,GAAG,EAAE,YAAY,KAAM,KAAK,YAC1C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CACvC,uBAAC,iDAAyB,IAEtB,UAAU,EAAE,IAAI,EAChB,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EACjC,IAAI,EAAE,IAAI,YAET,UAAU,IALN,KAAK,CAMc,CAC/B,CAAC,GACc,CACvB,CAAC;AACN,CAAC","sourcesContent":["import type * as React from 'react';\n\nimport type {ListItemId, UseListResult} from '../../types';\nimport {ListContainerView} from '../ListContainerView';\nimport type {ListContainerViewProps} from '../ListContainerView/ListContainerView';\nimport {ListItemRecursiveRenderer} from '../ListRecursiveRenderer/ListRecursiveRenderer';\n\nexport type ListContainerProps<T, P extends {} = {}> = Omit<ListContainerViewProps, 'children'> & {\n    list: UseListResult<T>;\n    containerRef?: React.RefObject<HTMLDivElement>;\n    renderItem(\n        id: ListItemId,\n        index: number,\n        /**\n         * Ability to transfer props from an overridden container render\n         */\n        renderContainerProps?: P,\n    ): React.JSX.Element;\n};\n\nexport function ListContainer<T, P extends {} = {}>({\n    containerRef,\n    renderItem,\n    list,\n    ...props\n}: ListContainerProps<T, P>) {\n    return (\n        <ListContainerView ref={containerRef} {...props}>\n            {list.structure.items.map((item, index) => (\n                <ListItemRecursiveRenderer\n                    key={index}\n                    itemSchema={item}\n                    id={list.structure.rootIds[index]}\n                    list={list}\n                >\n                    {renderItem}\n                </ListItemRecursiveRenderer>\n            ))}\n        </ListContainerView>\n    );\n}\n"]}