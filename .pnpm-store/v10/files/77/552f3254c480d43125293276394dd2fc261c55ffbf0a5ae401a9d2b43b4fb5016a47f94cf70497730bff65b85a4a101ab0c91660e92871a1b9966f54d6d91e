{"version":3,"file":"useFileInput.js","sourceRoot":"../../../../src","sources":["hooks/useFileInput/useFileInput.ts"],"names":[],"mappings":";;AAsCA,oCAmCC;;AAzED,qDAA+B;AAiB/B;;;;;;;;;;;;;;;;;;;;EAoBE;AACF,SAAgB,YAAY,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAoB;IAChE,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAmB,IAAI,CAAC,CAAC;IAEjD,MAAM,YAAY,GAAG,KAAK,CAAC,WAAW,CAClC,CAAC,KAA0C,EAAE,EAAE;QAC3C,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;QAClB,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;QACjD,uCAAuC;QACvC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;IAC5B,CAAC,EACD,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACvB,CAAC;IAEF,MAAM,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE;QAC7C,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;IACzB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,MAAM,GAAuB,KAAK,CAAC,OAAO,CAC5C,GAAG,EAAE,CAAC,CAAC;QACH,YAAY,EAAE;YACV,GAAG;YACH,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,CAAC,CAAC;YACZ,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC;YAC9D,QAAQ,EAAE,YAAY;YACtB,aAAa,EAAE,IAAI;SACtB;QACD,YAAY,EAAE;YACV,OAAO,EAAE,iBAAiB;SAC7B;KACJ,CAAC,EACF,CAAC,YAAY,EAAE,iBAAiB,CAAC,CACpC,CAAC;IAEF,OAAO,MAAM,CAAC;AAClB,CAAC","sourcesContent":["import * as React from 'react';\n\nexport type UseFileInputProps = {\n    onUpdate?: (files: File[]) => void;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseFileInputResult = {\n    controlProps: React.DetailedHTMLProps<\n        React.InputHTMLAttributes<HTMLInputElement>,\n        HTMLInputElement\n    >;\n    triggerProps: {\n        onClick: () => void;\n    };\n};\n\n/**\n * Used to shape props for input with type \"file\".\n *\n * Usage example:\n ```tsx\n    import * as React from 'react';\n    import {Button, useFileInput} from '@gravity-ui/uikit';\n\n    const Component = () => {\n        const onUpdate = React.useCallback((files: File[]) => console.log(files), []);\n        const {controlProps, triggerProps} = useFileInput({onUpdate});\n\n        return (\n            <React.Fragment>\n                <input {...controlProps} />\n                <Button {...triggerProps}>Upload</Button>\n            </React.Fragment>\n        );\n    };\n```\n*/\nexport function useFileInput({onUpdate, onChange}: UseFileInputProps): UseFileInputResult {\n    const ref = React.useRef<HTMLInputElement>(null);\n\n    const handleChange = React.useCallback(\n        (event: React.ChangeEvent<HTMLInputElement>) => {\n            onChange?.(event);\n            onUpdate?.(Array.from(event.target.files || []));\n            // https://stackoverflow.com/a/12102992\n            event.target.value = '';\n        },\n        [onChange, onUpdate],\n    );\n\n    const openDeviceStorage = React.useCallback(() => {\n        ref.current?.click();\n    }, []);\n\n    const result: UseFileInputResult = React.useMemo(\n        () => ({\n            controlProps: {\n                ref,\n                type: 'file',\n                tabIndex: -1,\n                style: {opacity: 0, position: 'absolute', width: 1, height: 1},\n                onChange: handleChange,\n                'aria-hidden': true,\n            },\n            triggerProps: {\n                onClick: openDeviceStorage,\n            },\n        }),\n        [handleChange, openDeviceStorage],\n    );\n\n    return result;\n}\n"]}